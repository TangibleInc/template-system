[{"tag":"script","attributes":{"keys":[],"type":"application\/x-typescript"},"children":[{"text":"\n  class Student {\n    fullName: string;\n    constructor(public firstName: string, public middleInitial: string, public lastName: string) {\n    this.fullName = firstName + \" \" + middleInitial + \" \" + lastName;\n  }\n  }\n\n  interface Person {\n    firstName: string;\n    lastName: string;\n  }\n\n  function greeter(person : Person) {\n    return \"Hello, \" + person.firstName + \" \" + person.lastName;\n  }\n\n  let user = new Student(\"Jane\", \"M.\", \"User\");\n\n  document.body.innerHTML = greeter(user);\n"}]},{"text":"\n"},{"tag":"script","attributes":{"keys":[],"lang":"ts"},"children":[{"text":"\n  class Student {\n    fullName: string;\n    constructor(public firstName: string, public middleInitial: string, public lastName: string) {\n    this.fullName = firstName + \" \" + middleInitial + \" \" + lastName;\n  }\n  }\n\n  interface Person {\n    firstName: string;\n    lastName: string;\n  }\n\n  function greeter(person : Person) {\n    return \"Hello, \" + person.firstName + \" \" + person.lastName;\n  }\n\n  let user = new Student(\"Jane\", \"M.\", \"User\");\n\n  document.body.innerHTML = greeter(user);\n"}]},{"text":"\n"},{"tag":"script","attributes":{"keys":[],"lang":"tsx"},"children":[{"text":"\n  class CommentBox extends React.Component<{ url: string, pollInterval: number}, CommentData> {\n    constructor(){\n      super()\n      this.state = { data: [] };\n    }\n    fetchComments() {\n      $.ajax({\n        url: this.props.url,\n        dataType: 'json',\n        cache: false,\n        success: (data) => this.setState({ data: data }),\n        error: (xhr, status, err) => console.error(status, err)\n      })\n    }\n    componentDidMount() {\n      this.fetchComments();\n      setInterval(this.fetchComments.bind(this), this.props.pollInterval);\n    }\n    render() {\n      let handleCommentSubmit = (comment: { author: string, text: string }) => {\n        console.warn('comment submitted!', comment);\n        const updated = this.state.data.slice(0);\n        updated.push(comment);\n        this.setState({ data: updated });\n      }\n      return (\n        <div className=\"commentBox\">\n        <h1>Comments<\/h1>\n        <CommentList data={this.state.data}\/>\n      <CommentForm onCommentSubmit={handleCommentSubmit} \/>\n      <\/div>\n    );\n    }\n  }\n"}]},{"text":"\n"}]