{"version":3,"file":"view.min.js","sources":["../src/Layout/src/Orientation.ts","../src/Layout/src/Rect.ts","../src/Layout/src/DockLocation.ts","../src/Layout/src/DragDrop.ts","../src/Layout/src/model/Action.ts","../src/Layout/src/model/Actions.ts","../src/Layout/src/Attribute.ts","../src/Layout/src/AttributeDefinitions.ts","../src/Layout/src/DropInfo.ts","../src/Layout/src/Types.ts","../src/Layout/src/model/Node.ts","../src/Layout/src/model/SplitterNode.ts","../src/Layout/src/model/TabNode.ts","../src/Layout/src/model/RowNode.ts","../src/Layout/src/model/TabSetNode.ts","../src/Layout/src/model/Utils.ts","../src/Layout/src/model/BorderNode.ts","../src/Layout/src/I18nLabel.ts","../src/Layout/src/model/ICloseType.ts","../src/Layout/src/view/Utils.tsx","../src/Layout/src/view/BorderButton.tsx","../src/Layout/src/view/TabButtonStamp.tsx","../src/Layout/src/PopupMenu.tsx","../src/Layout/src/view/TabOverflowHook.tsx","../src/Layout/src/view/BorderTabSet.tsx","../src/Layout/src/view/Splitter.tsx","../src/Layout/src/view/ErrorBoundary.tsx","../src/Layout/src/view/Tab.tsx","../src/Layout/src/view/TabButton.tsx","../src/Layout/src/view/TabSet.tsx","../src/Layout/src/view/FloatingWindow.tsx","../src/Layout/src/view/FloatingWindowTab.tsx","../src/Layout/src/view/TabFloating.tsx","../src/Layout/src/view/Icons.tsx","../src/Layout/src/view/Layout.tsx","../src/Layout/src/model/BorderSet.ts","../src/Layout/src/model/Model.ts","../src/model.ts","../src/Editor/index.tsx","../src/Preview/index.tsx","../src/Assets/index.tsx","../src/Location/index.tsx","../src/Library/index.tsx","../src/Support/index.tsx","../src/icons.tsx","../src/Header/index.tsx","../src/index.tsx"],"sourcesContent":["export class Orientation {\n    static HORZ = new Orientation(\"horz\");\n    static VERT = new Orientation(\"vert\");\n\n    static flip(from: Orientation) {\n        if (from === Orientation.HORZ) {\n            return Orientation.VERT;\n        } else {\n            return Orientation.HORZ;\n        }\n    }\n\n    /** @internal */\n    private _name: string;\n\n    /** @internal */\n    private constructor(name: string) {\n        this._name = name;\n    }\n\n    getName() {\n        return this._name;\n    }\n\n    toString() {\n        return this._name;\n    }\n}\n","import { Orientation } from \"./Orientation\";\n\nexport class Rect {\n    static empty() {\n        return new Rect(0, 0, 0, 0);\n    }\n\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n\n    constructor(x: number, y: number, width: number, height: number) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n\n    static fromElement(element: Element) {\n        let { x, y, width, height } = element.getBoundingClientRect();\n        return new Rect(x, y, width, height);\n    }\n\n    clone() {\n        return new Rect(this.x, this.y, this.width, this.height);\n    }\n\n    equals(rect: Rect) {\n        if (this.x === rect.x && this.y === rect.y && this.width === rect.width && this.height === rect.height) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    getBottom() {\n        return this.y + this.height;\n    }\n\n    getRight() {\n        return this.x + this.width;\n    }\n\n    getCenter() {\n        return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n    }\n\n    positionElement(element: HTMLElement, position?: string) {\n        this.styleWithPosition(element.style, position);\n    }\n\n    styleWithPosition(style: Record<string, any>, position: string = \"absolute\") {\n        style.left = this.x + \"px\";\n        style.top = this.y + \"px\";\n        style.width = Math.max(0, this.width) + \"px\"; // need Math.max to prevent -ve, cause error in IE\n        style.height = Math.max(0, this.height) + \"px\";\n        style.position = position;\n        return style;\n    }\n\n    contains(x: number, y: number) {\n        if (this.x <= x && x <= this.getRight() && this.y <= y && y <= this.getBottom()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    removeInsets(insets: { top: number; left: number; bottom: number; right: number }) {\n        return new Rect(this.x + insets.left, this.y + insets.top, Math.max(0, this.width - insets.left - insets.right), Math.max(0, this.height - insets.top - insets.bottom));\n    }\n\n    centerInRect(outerRect: Rect) {\n        this.x = (outerRect.width - this.width) / 2;\n        this.y = (outerRect.height - this.height) / 2;\n    }\n\n    /** @internal */\n    _getSize(orientation: Orientation) {\n        let prefSize = this.width;\n        if (orientation === Orientation.VERT) {\n            prefSize = this.height;\n        }\n        return prefSize;\n    }\n\n    toString() {\n        return \"(Rect: x=\" + this.x + \", y=\" + this.y + \", width=\" + this.width + \", height=\" + this.height + \")\";\n    }\n}\n","import { Orientation } from \"./Orientation\";\nimport { Rect } from \"./Rect\";\n\nexport class DockLocation {\n    static values: Record<string, DockLocation> = {};\n    static TOP = new DockLocation(\"top\", Orientation.VERT, 0);\n    static BOTTOM = new DockLocation(\"bottom\", Orientation.VERT, 1);\n    static LEFT = new DockLocation(\"left\", Orientation.HORZ, 0);\n    static RIGHT = new DockLocation(\"right\", Orientation.HORZ, 1);\n    static CENTER = new DockLocation(\"center\", Orientation.VERT, 0);\n\n    /** @internal */\n    static getByName(name: string): DockLocation {\n        return DockLocation.values[name];\n    }\n\n    /** @internal */\n    static getLocation(rect: Rect, x: number, y: number) {\n        x = (x - rect.x) / rect.width;\n        y = (y - rect.y) / rect.height;\n\n        if (x >= 0.25 && x < 0.75 && y >= 0.25 && y < 0.75) {\n            return DockLocation.CENTER;\n        }\n\n        // Whether or not the point is in the bottom-left half of the rect\n        // +-----+\n        // |\\    |\n        // |x\\   |\n        // |xx\\  |\n        // |xxx\\ |\n        // |xxxx\\|\n        // +-----+\n        const bl = y >= x;\n\n        // Whether or not the point is in the bottom-right half of the rect\n        // +-----+\n        // |    /|\n        // |   /x|\n        // |  /xx|\n        // | /xxx|\n        // |/xxxx|\n        // +-----+\n        const br = y >= 1 - x;\n\n        if (bl) {\n            return br ? DockLocation.BOTTOM : DockLocation.LEFT;\n        } else {\n            return br ? DockLocation.RIGHT : DockLocation.TOP;\n        }\n    }\n\n    /** @internal */\n    _name: string;\n    /** @internal */\n    _orientation: Orientation;\n    /** @internal */\n    _indexPlus: number;\n\n    /** @internal */\n    constructor(name: string, orientation: Orientation, indexPlus: number) {\n        this._name = name;\n        this._orientation = orientation;\n        this._indexPlus = indexPlus;\n        DockLocation.values[this._name] = this;\n    }\n\n    getName() {\n        return this._name;\n    }\n\n    getOrientation() {\n        return this._orientation;\n    }\n\n    /** @internal */\n    getDockRect(r: Rect) {\n        if (this === DockLocation.TOP) {\n            return new Rect(r.x, r.y, r.width, r.height / 2);\n        } else if (this === DockLocation.BOTTOM) {\n            return new Rect(r.x, r.getBottom() - r.height / 2, r.width, r.height / 2);\n        }\n        if (this === DockLocation.LEFT) {\n            return new Rect(r.x, r.y, r.width / 2, r.height);\n        } else if (this === DockLocation.RIGHT) {\n            return new Rect(r.getRight() - r.width / 2, r.y, r.width / 2, r.height);\n        } else {\n            return r.clone();\n        }\n    }\n\n    /** @internal */\n    split(rect: Rect, size: number) {\n        if (this === DockLocation.TOP) {\n            const r1 = new Rect(rect.x, rect.y, rect.width, size);\n            const r2 = new Rect(rect.x, rect.y + size, rect.width, rect.height - size);\n            return { start: r1, end: r2 };\n        } else if (this === DockLocation.LEFT) {\n            const r1 = new Rect(rect.x, rect.y, size, rect.height);\n            const r2 = new Rect(rect.x + size, rect.y, rect.width - size, rect.height);\n            return { start: r1, end: r2 };\n        }\n        if (this === DockLocation.RIGHT) {\n            const r1 = new Rect(rect.getRight() - size, rect.y, size, rect.height);\n            const r2 = new Rect(rect.x, rect.y, rect.width - size, rect.height);\n            return { start: r1, end: r2 };\n        } else {\n            // if (this === DockLocation.BOTTOM) {\n            const r1 = new Rect(rect.x, rect.getBottom() - size, rect.width, size);\n            const r2 = new Rect(rect.x, rect.y, rect.width, rect.height - size);\n            return { start: r1, end: r2 };\n        }\n    }\n\n    /** @internal */\n    reflect() {\n        if (this === DockLocation.TOP) {\n            return DockLocation.BOTTOM;\n        } else if (this === DockLocation.LEFT) {\n            return DockLocation.RIGHT;\n        }\n        if (this === DockLocation.RIGHT) {\n            return DockLocation.LEFT;\n        } else {\n            // if (this === DockLocation.BOTTOM) {\n            return DockLocation.TOP;\n        }\n    }\n\n    toString() {\n        return \"(DockLocation: name=\" + this._name + \", orientation=\" + this._orientation + \")\";\n    }\n}\n","import * as React from \"react\";\nimport { Rect } from \"./Rect\";\n\n/** @internal */\nconst canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n\nexport class DragDrop {\n    static instance = new DragDrop();\n\n    /** @internal */\n    private _fDblClick: ((event: Event) => void) | undefined;\n    /** @internal */\n    private _fClick: ((event: Event) => void) | undefined;\n    /** @internal */\n    private _fDragEnd: ((event: Event) => void) | undefined;\n    /** @internal */\n    private _fDragMove: ((event: React.MouseEvent<Element>) => void) | undefined;\n    /** @internal */\n    private _fDragStart: ((pos: { clientX: number; clientY: number }) => boolean) | undefined;\n    /** @internal */\n    private _fDragCancel: ((wasDragging: boolean) => void) | undefined;\n\n    /** @internal */\n    private _glass: HTMLDivElement | undefined;\n    /** @internal */\n    private _defaultGlassCursor: string;\n    /** @internal */\n    private _glassCursorOverride: string | undefined;\n    /** @internal */\n    private _manualGlassManagement: boolean = false;\n    /** @internal */\n    private _lastClick: number;\n    /** @internal */\n    private _clickX: number;\n    /** @internal */\n    private _clickY: number;\n    /** @internal */\n    private _startX: number = 0;\n    /** @internal */\n    private _startY: number = 0;\n    /** @internal */\n    private _dragDepth: number = 0;\n    /** @internal */\n    private _glassShowing: boolean = false;\n    /** @internal */\n    private _dragging: boolean = false;\n    /** @internal */\n    private _active: boolean = false; // drag and drop is in progress, can be used on ios to prevent body scrolling (see demo)\n    /** @internal */\n    private _document?: HTMLDocument;\n    /** @internal */\n    private _rootElement?: HTMLElement | undefined;\n    /** @internal */\n    private _lastEvent?: Event | React.MouseEvent<HTMLDivElement, MouseEvent> | React.TouchEvent<HTMLDivElement> | React.DragEvent<Element> | undefined;\n\n    /** @internal */\n    private constructor() {\n        if (canUseDOM) {\n            // check for serverside rendering\n            this._glass = document.createElement(\"div\");\n            this._glass.style.zIndex = \"998\";\n            this._glass.style.backgroundColor = \"transparent\";\n            this._glass.style.outline = \"none\";\n        }\n\n        this._defaultGlassCursor = \"default\";\n\n        this._onMouseMove = this._onMouseMove.bind(this);\n        this._onMouseUp = this._onMouseUp.bind(this);\n        this._onKeyPress = this._onKeyPress.bind(this);\n        this._onDragCancel = this._onDragCancel.bind(this);\n        this._onDragEnter = this._onDragEnter.bind(this);\n        this._onDragLeave = this._onDragLeave.bind(this);\n        this.resizeGlass = this.resizeGlass.bind(this);\n\n        this._lastClick = 0;\n        this._clickX = 0;\n        this._clickY = 0;\n    }\n\n    // if you add the glass pane then you should remove it\n    addGlass(fCancel: ((wasDragging: boolean) => void) | undefined) {\n        if (!this._glassShowing) {\n            if (!this._document) {\n                this._document = window.document;\n            }\n            if (!this._rootElement) {\n                this._rootElement = this._document.body;\n            }\n            this.resizeGlass();\n            this._document.defaultView?.addEventListener('resize', this.resizeGlass);\n            this._document.body.appendChild(this._glass!);\n            this._glass!.tabIndex = -1;\n            this._glass!.focus();\n            this._glass!.addEventListener(\"keydown\", this._onKeyPress);\n            this._glass!.addEventListener(\"dragenter\", this._onDragEnter, { passive: false });\n            this._glass!.addEventListener(\"dragover\", this._onMouseMove, { passive: false });\n            this._glass!.addEventListener(\"dragleave\", this._onDragLeave, { passive: false });\n            this._glassShowing = true;\n            this._fDragCancel = fCancel;\n            this._manualGlassManagement = false;\n        } else {\n            // second call to addGlass (via dragstart)\n            this._manualGlassManagement = true;\n        }\n    }\n\n    resizeGlass() {\n        const glassRect = Rect.fromElement(this._rootElement!);\n        glassRect.positionElement(this._glass!, \"fixed\");\n    }\n\n    hideGlass() {\n        if (this._glassShowing) {\n            this._document!.body.removeChild(this._glass!);\n            this._document!.defaultView?.removeEventListener('resize', this.resizeGlass);\n            this._glassShowing = false;\n            this._document = undefined;\n            this._rootElement = undefined;\n            this.setGlassCursorOverride(undefined);\n        }\n    }\n\n    /** @internal */\n    _updateGlassCursor() {\n        this._glass!.style.cursor = this._glassCursorOverride ?? this._defaultGlassCursor;\n    }\n\n    /** @internal */\n    _setDefaultGlassCursor(cursor: string) {\n        this._defaultGlassCursor = cursor;\n        this._updateGlassCursor()\n    }\n\n    setGlassCursorOverride(cursor: string | undefined) {\n        this._glassCursorOverride = cursor;\n        this._updateGlassCursor()\n    }\n\n    startDrag(\n        event: Event | React.MouseEvent<HTMLDivElement, MouseEvent> | React.TouchEvent<HTMLDivElement> | React.DragEvent<Element> | undefined,\n        fDragStart: ((pos: { clientX: number; clientY: number }) => boolean) | undefined,\n        fDragMove: ((event: React.MouseEvent<Element>) => void) | undefined,\n        fDragEnd: ((event: Event) => void) | undefined,\n        fDragCancel?: ((wasDragging: boolean) => void) | undefined,\n        fClick?: ((event: Event) => void) | undefined,\n        fDblClick?: ((event: Event) => void) | undefined,\n        currentDocument?: Document,\n        rootElement?: HTMLDivElement\n    ) {\n        // prevent 'duplicate' action (mouse event for same action as previous touch event (a fix for ios))\n        if (event && this._lastEvent && this._lastEvent.type.startsWith(\"touch\") && event.type.startsWith(\"mouse\") && event.timeStamp - this._lastEvent.timeStamp < 500) {\n            return;\n        }\n\n        this._lastEvent = event;\n\n        if (currentDocument) {\n            this._document = currentDocument;\n        } else {\n            this._document = window.document;\n        }\n        if (rootElement) {\n            this._rootElement = rootElement;\n        } else {\n            this._rootElement = this._document.body;\n        }\n\n        const posEvent = this._getLocationEvent(event);\n        this.addGlass(fDragCancel);\n\n        if (this._dragging) {\n            console.warn(\"this._dragging true on startDrag should never happen\");\n        }\n\n        if (event) {\n            this._startX = posEvent.clientX;\n            this._startY = posEvent.clientY;\n            if (!window.matchMedia || window.matchMedia(\"(pointer: fine)\").matches) {\n                this._setDefaultGlassCursor(getComputedStyle(event.target as Element).cursor);\n            }\n            this._stopPropagation(event);\n            this._preventDefault(event);\n        } else {\n            this._startX = 0;\n            this._startY = 0;\n            this._setDefaultGlassCursor(\"default\");\n        }\n\n        this._dragging = false;\n        this._fDragStart = fDragStart;\n        this._fDragMove = fDragMove;\n        this._fDragEnd = fDragEnd;\n        this._fDragCancel = fDragCancel;\n        this._fClick = fClick;\n        this._fDblClick = fDblClick;\n\n        this._active = true;\n\n        if (event?.type === 'dragenter') {\n            this._dragDepth = 1;\n            this._rootElement.addEventListener(\"dragenter\", this._onDragEnter, { passive: false });\n            this._rootElement.addEventListener(\"dragover\", this._onMouseMove, { passive: false });\n            this._rootElement.addEventListener(\"dragleave\", this._onDragLeave, { passive: false });\n            this._document.addEventListener(\"dragend\", this._onDragCancel, { passive: false });\n            this._document.addEventListener(\"drop\", this._onMouseUp, { passive: false });\n        } else {\n            this._document.addEventListener(\"mouseup\", this._onMouseUp, { passive: false });\n            this._document.addEventListener(\"mousemove\", this._onMouseMove, { passive: false });\n            this._document.addEventListener(\"touchend\", this._onMouseUp, { passive: false });\n            this._document.addEventListener(\"touchmove\", this._onMouseMove, { passive: false });\n        }\n    }\n\n    isDragging() {\n        return this._dragging;\n    }\n\n    isActive() {\n        return this._active;\n    }\n\n    toString() {\n        const rtn = \"(DragDrop: \" + \"startX=\" + this._startX + \", startY=\" + this._startY + \", dragging=\" + this._dragging + \")\";\n\n        return rtn;\n    }\n\n    /** @internal */\n    private _onKeyPress(event: KeyboardEvent) {\n        if (event.keyCode === 27) {\n            // esc\n            this._onDragCancel();\n        }\n    }\n\n    /** @internal */\n    private _onDragCancel() {\n        this._rootElement!.removeEventListener(\"dragenter\", this._onDragEnter);\n        this._rootElement!.removeEventListener(\"dragover\", this._onMouseMove);\n        this._rootElement!.removeEventListener(\"dragleave\", this._onDragLeave);\n        this._document!.removeEventListener(\"dragend\", this._onDragCancel);\n        this._document!.removeEventListener(\"drop\", this._onMouseUp);\n        this._document!.removeEventListener(\"mousemove\", this._onMouseMove);\n        this._document!.removeEventListener(\"mouseup\", this._onMouseUp);\n        this._document!.removeEventListener(\"touchend\", this._onMouseUp);\n        this._document!.removeEventListener(\"touchmove\", this._onMouseMove);\n        this.hideGlass();\n        if (this._fDragCancel !== undefined) {\n            this._fDragCancel(this._dragging);\n        }\n        this._dragging = false;\n        this._active = false;\n    }\n\n    /** @internal */\n    private _getLocationEvent(event: any) {\n        let posEvent: any = event;\n        if (event && event.touches) {\n            posEvent = event.touches[0];\n        }\n        return posEvent;\n    }\n\n    /** @internal */\n    private _getLocationEventEnd(event: any) {\n        let posEvent: any = event;\n        if (event.changedTouches) {\n            posEvent = event.changedTouches[0];\n        }\n        return posEvent;\n    }\n\n    /** @internal */\n    private _stopPropagation(event: Event | React.MouseEvent<HTMLDivElement, MouseEvent> | React.TouchEvent<HTMLDivElement> | React.DragEvent<Element>) {\n        if (event.stopPropagation) {\n            event.stopPropagation();\n        }\n    }\n\n    /** @internal */\n    private _preventDefault(event: Event | React.MouseEvent<HTMLDivElement, MouseEvent> | React.TouchEvent<HTMLDivElement> | React.DragEvent<Element>) {\n        if (event.preventDefault && event.cancelable) {\n            event.preventDefault();\n        }\n        return event;\n    }\n\n    /** @internal */\n    private _onMouseMove(event: Event | React.MouseEvent<HTMLDivElement, MouseEvent> | React.TouchEvent<HTMLDivElement> | React.DragEvent<Element>) {\n        this._lastEvent = event;\n\n        const posEvent = this._getLocationEvent(event);\n        this._stopPropagation(event);\n        this._preventDefault(event);\n\n        if (!this._dragging && (Math.abs(this._startX - posEvent.clientX) > 5 || Math.abs(this._startY - posEvent.clientY) > 5)) {\n            this._dragging = true;\n            if (this._fDragStart) {\n                this._setDefaultGlassCursor(\"move\");\n                this._dragging = this._fDragStart({ clientX: this._startX, clientY: this._startY });\n            }\n        }\n\n        if (this._dragging) {\n            if (this._fDragMove) {\n                this._fDragMove(posEvent);\n            }\n        }\n        return false;\n    }\n\n    /** @internal */\n    private _onMouseUp(event: Event) {\n        this._lastEvent = event;\n\n        const posEvent = this._getLocationEventEnd(event);\n\n        this._stopPropagation(event);\n        this._preventDefault(event);\n\n        this._active = false;\n\n        this._rootElement!.removeEventListener(\"dragenter\", this._onDragEnter);\n        this._rootElement!.removeEventListener(\"dragover\", this._onMouseMove);\n        this._rootElement!.removeEventListener(\"dragleave\", this._onDragLeave);\n        this._document!.removeEventListener(\"dragend\", this._onDragCancel);\n        this._document!.removeEventListener(\"drop\", this._onMouseUp);\n        this._document!.removeEventListener(\"mousemove\", this._onMouseMove);\n        this._document!.removeEventListener(\"mouseup\", this._onMouseUp);\n        this._document!.removeEventListener(\"touchend\", this._onMouseUp);\n        this._document!.removeEventListener(\"touchmove\", this._onMouseMove);\n\n        if (!this._manualGlassManagement) {\n            this.hideGlass();\n        }\n\n        if (this._dragging) {\n            this._dragging = false;\n            if (this._fDragEnd) {\n                this._fDragEnd(event);\n            }\n            // dump(\"set dragging = false\\n\");\n        } else {\n            if (this._fDragCancel) {\n                this._fDragCancel(this._dragging);\n            }\n            if (Math.abs(this._startX - posEvent.clientX) <= 5 && Math.abs(this._startY - posEvent.clientY) <= 5) {\n\n                let isDoubleClick = false;\n                const clickTime = new Date().getTime();\n                // check for double click\n                if (Math.abs(this._clickX - posEvent.clientX) <= 5 && Math.abs(this._clickY - posEvent.clientY) <= 5) {\n                    if (clickTime - this._lastClick < 500) {\n                        if (this._fDblClick) {\n                            this._fDblClick(event);\n                            isDoubleClick = true;\n                        }\n                    }\n                }\n \n                if (!isDoubleClick && this._fClick) {\n                    this._fClick(event);\n                }\n\n                this._lastClick = clickTime;\n                this._clickX = posEvent.clientX;\n                this._clickY = posEvent.clientY;\n            }\n        }\n        return false;\n    }\n\n    /** @internal */\n    private _onDragEnter(event: DragEvent) {\n        this._preventDefault(event);\n        this._stopPropagation(event);\n        this._dragDepth++;\n        return false;\n    }\n\n    /** @internal */\n    private _onDragLeave(event: DragEvent) {\n        this._preventDefault(event);\n        this._stopPropagation(event);\n        this._dragDepth--;\n        if (this._dragDepth <= 0) {\n            this._onDragCancel();\n        }\n        return false;\n    }\n}\n","export class Action {\n    type: string;\n    data: Record<string, any>;\n\n    constructor(type: string, data: Record<string, any>) {\n        this.type = type;\n        this.data = data;\n    }\n}\n","import { DockLocation } from \"../DockLocation\";\nimport { Action } from \"./Action\";\n\n/**\n * The Action creator class for FlexLayout model actions\n */\nexport class Actions {\n    static ADD_NODE = \"FlexLayout_AddNode\";\n    static MOVE_NODE = \"FlexLayout_MoveNode\";\n    static DELETE_TAB = \"FlexLayout_DeleteTab\";\n    static DELETE_TABSET = \"FlexLayout_DeleteTabset\";\n    static RENAME_TAB = \"FlexLayout_RenameTab\";\n    static SELECT_TAB = \"FlexLayout_SelectTab\";\n    static SET_ACTIVE_TABSET = \"FlexLayout_SetActiveTabset\";\n    static ADJUST_SPLIT = \"FlexLayout_AdjustSplit\";\n    static ADJUST_BORDER_SPLIT = \"FlexLayout_AdjustBorderSplit\";\n    static MAXIMIZE_TOGGLE = \"FlexLayout_MaximizeToggle\";\n    static UPDATE_MODEL_ATTRIBUTES = \"FlexLayout_UpdateModelAttributes\";\n    static UPDATE_NODE_ATTRIBUTES = \"FlexLayout_UpdateNodeAttributes\";\n    static FLOAT_TAB = \"FlexLayout_FloatTab\";\n    static UNFLOAT_TAB = \"FlexLayout_UnFloatTab\";\n\n    /**\n     * Adds a tab node to the given tabset node\n     * @param json the json for the new tab node e.g {type:\"tab\", component:\"table\"}\n     * @param toNodeId the new tab node will be added to the tabset with this node id\n     * @param location the location where the new tab will be added, one of the DockLocation enum values.\n     * @param index for docking to the center this value is the index of the tab, use -1 to add to the end.\n     * @param select (optional) whether to select the new tab, overriding autoSelectTab\n     * @returns {Action} the action\n     */\n    static addNode(json: any, toNodeId: string, location: DockLocation, index: number, select?: boolean): Action {\n        return new Action(Actions.ADD_NODE, {\n            json,\n            toNode: toNodeId,\n            location: location.getName(),\n            index,\n            select,\n        });\n    }\n\n    /**\n     * Moves a node (tab or tabset) from one location to another\n     * @param fromNodeId the id of the node to move\n     * @param toNodeId the id of the node to receive the moved node\n     * @param location the location where the moved node will be added, one of the DockLocation enum values.\n     * @param index for docking to the center this value is the index of the tab, use -1 to add to the end.\n     * @param select (optional) whether to select the moved tab(s) in new tabset, overriding autoSelectTab\n     * @returns {Action} the action\n     */\n    static moveNode(fromNodeId: string, toNodeId: string, location: DockLocation, index: number, select?: boolean): Action {\n        return new Action(Actions.MOVE_NODE, {\n            fromNode: fromNodeId,\n            toNode: toNodeId,\n            location: location.getName(),\n            index,\n            select,\n        });\n    }\n\n    /**\n     * Deletes a tab node from the layout\n     * @param tabsetNodeId the id of the tab node to delete\n     * @returns {Action} the action\n     */\n    static deleteTab(tabNodeId: string): Action {\n        return new Action(Actions.DELETE_TAB, { node: tabNodeId });\n    }\n\n    /**\n     * Deletes a tabset node and all it's child tab nodes from the layout\n     * @param tabsetNodeId the id of the tabset node to delete\n     * @returns {Action} the action\n     */\n    static deleteTabset(tabsetNodeId: string): Action {\n        return new Action(Actions.DELETE_TABSET, { node: tabsetNodeId });\n    }\n\n    /**\n     * Change the given nodes tab text\n     * @param tabNodeId the id of the node to rename\n     * @param text the test of the tab\n     * @returns {Action} the action\n     */\n    static renameTab(tabNodeId: string, text: string): Action {\n        return new Action(Actions.RENAME_TAB, { node: tabNodeId, text });\n    }\n\n    /**\n     * Selects the given tab in its parent tabset\n     * @param tabNodeId the id of the node to set selected\n     * @returns {Action} the action\n     */\n    static selectTab(tabNodeId: string): Action {\n        return new Action(Actions.SELECT_TAB, { tabNode: tabNodeId });\n    }\n\n    /**\n     * Set the given tabset node as the active tabset\n     * @param tabsetNodeId the id of the tabset node to set as active\n     * @returns {Action} the action\n     */\n    static setActiveTabset(tabsetNodeId: string): Action {\n        return new Action(Actions.SET_ACTIVE_TABSET, { tabsetNode: tabsetNodeId });\n    }\n\n    /**\n     * Adjust the splitter between two tabsets\n     * @example\n     *  Actions.adjustSplit({node1: \"1\", weight1:30, pixelWidth1:300, node2: \"2\", weight2:70, pixelWidth2:700});\n     *\n     * @param splitSpec an object the defines the new split between two tabsets, see example below.\n     * @returns {Action} the action\n     */\n    static adjustSplit(splitSpec: { node1Id: string; weight1: number; pixelWidth1: number; node2Id: string; weight2: number; pixelWidth2: number }): Action {\n        const node1 = splitSpec.node1Id;\n        const node2 = splitSpec.node2Id;\n\n        return new Action(Actions.ADJUST_SPLIT, {\n            node1,\n            weight1: splitSpec.weight1,\n            pixelWidth1: splitSpec.pixelWidth1,\n            node2,\n            weight2: splitSpec.weight2,\n            pixelWidth2: splitSpec.pixelWidth2,\n        });\n    }\n\n    static adjustBorderSplit(nodeId: string, pos: number): Action {\n        return new Action(Actions.ADJUST_BORDER_SPLIT, { node: nodeId, pos });\n    }\n\n    /**\n     * Maximizes the given tabset\n     * @param tabsetNodeId the id of the tabset to maximize\n     * @returns {Action} the action\n     */\n    static maximizeToggle(tabsetNodeId: string): Action {\n        return new Action(Actions.MAXIMIZE_TOGGLE, { node: tabsetNodeId });\n    }\n\n    /**\n     * Updates the global model jsone attributes\n     * @param attributes the json for the model attributes to update (merge into the existing attributes)\n     * @returns {Action} the action\n     */\n    static updateModelAttributes(attributes: any): Action {\n        return new Action(Actions.UPDATE_MODEL_ATTRIBUTES, { json: attributes });\n    }\n\n    /**\n     * Updates the given nodes json attributes\n     * @param nodeId the id of the node to update\n     * @param attributes the json attributes to update (merge with the existing attributes)\n     * @returns {Action} the action\n     */\n    static updateNodeAttributes(nodeId: string, attributes: any): Action {\n        return new Action(Actions.UPDATE_NODE_ATTRIBUTES, { node: nodeId, json: attributes });\n    }\n\n    static floatTab(nodeId: string): Action {\n        return new Action(Actions.FLOAT_TAB, { node: nodeId });\n    }\n\n    static unFloatTab(nodeId: string): Action {\n        return new Action(Actions.UNFLOAT_TAB, { node: nodeId });\n    }\n}\n","/** @internal */\nexport class Attribute {\n    static NUMBER = \"number\";\n    static STRING = \"string\";\n    static BOOLEAN = \"boolean\";\n\n    name: string;\n    modelName?: string;\n    defaultValue: any;\n    alwaysWriteJson?: boolean;\n    type?: string; \n    required: boolean;\n    fixed: boolean;\n\n    constructor(name: string, modelName: string | undefined, defaultValue: any, alwaysWriteJson?: boolean) {\n        this.name = name;\n        this.modelName = modelName;\n        this.defaultValue = defaultValue;\n        this.alwaysWriteJson = alwaysWriteJson;\n        this.required = false;\n        this.fixed = false;\n\n        this.type = \"any\";\n    }\n\n    setType(value: string) {\n        this.type = value;\n        return this;\n    }\n\n    setRequired() {\n        this.required = true;\n        return this;\n    }\n\n    setFixed() {\n        this.fixed = true;\n        return this;\n    }\n\n}\n","import { Attribute } from \"./Attribute\";\n\n/** @internal */\nexport class AttributeDefinitions {\n    attributes: Attribute[];\n    nameToAttribute: Record<string, Attribute>;\n\n    constructor() {\n        this.attributes = [];\n        this.nameToAttribute = {};\n    }\n\n    addWithAll(name: string, modelName: string | undefined, defaultValue: any, alwaysWriteJson?: boolean) {\n        const attr = new Attribute(name, modelName, defaultValue, alwaysWriteJson);\n        this.attributes.push(attr);\n        this.nameToAttribute[name] = attr;\n        return attr;\n    }\n\n    addInherited(name: string, modelName: string) {\n        return this.addWithAll(name, modelName, undefined, false);\n    }\n\n    add(name: string, defaultValue: any, alwaysWriteJson?: boolean) {\n        return this.addWithAll(name, undefined, defaultValue, alwaysWriteJson);\n    }\n\n    getAttributes() {\n        return this.attributes;\n    }\n\n    getModelName(name: string) {\n        const conversion = this.nameToAttribute[name];\n        if (conversion !== undefined) {\n            return conversion.modelName;\n        }\n        return undefined;\n    }\n\n    toJson(jsonObj: any, obj: any) {\n        for (const attr of this.attributes) {\n            const fromValue = obj[attr.name];\n            if (attr.alwaysWriteJson || fromValue !== attr.defaultValue) {\n                jsonObj[attr.name] = fromValue;\n            }\n        }\n    }\n\n    fromJson(jsonObj: any, obj: any) {\n        for (const attr of this.attributes) {\n            const fromValue = jsonObj[attr.name];\n            if (fromValue === undefined) {\n                obj[attr.name] = attr.defaultValue;\n            } else {\n                obj[attr.name] = fromValue;\n            }\n        }\n    }\n\n    update(jsonObj: any, obj: any) {\n        for (const attr of this.attributes) {\n            if (jsonObj.hasOwnProperty(attr.name)) {\n                const fromValue = jsonObj[attr.name];\n                if (fromValue === undefined) {\n                    delete obj[attr.name];\n                } else {\n                    obj[attr.name] = fromValue;\n                }\n            }\n        }\n    }\n\n    setDefaults(obj: any) {\n        for (const attr of this.attributes) {\n            obj[attr.name] = attr.defaultValue;\n        }\n    }\n\n    toTypescriptInterface(name: string, parentAttributes: AttributeDefinitions | undefined) {\n        const lines = [];\n        const sorted = this.attributes.sort((a, b) => a.name.localeCompare(b.name));\n        // const sorted = this.attributes;\n        lines.push(\"export interface I\" + name + \"Attributes {\");\n        for (let i = 0; i < sorted.length; i++) {\n            const c = sorted[i];\n            let type = c.type;\n            let defaultValue = undefined;\n\n            let attr = c;\n            let inherited = undefined;\n            if (attr.defaultValue !== undefined) {\n                defaultValue = attr.defaultValue;\n            } else if (attr.modelName !== undefined\n                && parentAttributes !== undefined\n                && parentAttributes.nameToAttribute[attr.modelName] !== undefined) {\n                inherited = attr.modelName;\n                attr = parentAttributes.nameToAttribute[attr.modelName];\n                defaultValue = attr.defaultValue;\n                type = attr.type;\n            }\n\n            let defValue = JSON.stringify(defaultValue);\n\n            const required = attr.required || attr.fixed ? \"\" : \"?\";\n\n            if (c.fixed) {\n                lines.push(\"\\t\" + c.name + \": \" + defValue + \";\");\n            } else {\n                const comment = (defaultValue !== undefined ? \"default: \" + defValue : \"\") +\n                    (inherited !== undefined ? \" - inherited from global \" + inherited : \"\");\n\n                lines.push(\"\\t\" + c.name + required + \": \" + type + \";\" +\n                    (comment.length > 0 ? \" // \" + comment : \"\")\n                );\n            }\n        }\n        lines.push(\"}\");\n\n        return lines.join(\"\\n\");\n    }\n}\n","import { DockLocation } from \"./DockLocation\";\nimport { IDropTarget } from \"./model/IDropTarget\";\nimport { Node } from \"./model/Node\";\nimport { Rect } from \"./Rect\";\n\nexport class DropInfo {\n    node: Node & IDropTarget;\n    rect: Rect;\n    location: DockLocation;\n    index: number;\n    className: string;\n\n    constructor(node: Node & IDropTarget, rect: Rect, location: DockLocation, index: number, className: string) {\n        this.node = node;\n        this.rect = rect;\n        this.location = location;\n        this.index = index;\n        this.className = className;\n    }\n}\n","export enum CLASSES {\n    FLEXLAYOUT__BORDER = \"flexlayout__border\",\n    FLEXLAYOUT__BORDER_ = \"flexlayout__border_\",\n\n    FLEXLAYOUT__BORDER_BUTTON = \"flexlayout__border_button\",\n    FLEXLAYOUT__BORDER_BUTTON_ = \"flexlayout__border_button_\",\n    FLEXLAYOUT__BORDER_BUTTON_CONTENT = \"flexlayout__border_button_content\",\n    FLEXLAYOUT__BORDER_BUTTON_LEADING = \"flexlayout__border_button_leading\",\n    FLEXLAYOUT__BORDER_BUTTON_TRAILING = \"flexlayout__border_button_trailing\",\n    FLEXLAYOUT__BORDER_BUTTON__SELECTED = \"flexlayout__border_button--selected\",\n    FLEXLAYOUT__BORDER_BUTTON__UNSELECTED = \"flexlayout__border_button--unselected\",\n    FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_OVERFLOW = \"flexlayout__border_toolbar_button_overflow\",\n    FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_OVERFLOW_ = \"flexlayout__border_toolbar_button_overflow_\",\n\n    FLEXLAYOUT__BORDER_INNER = \"flexlayout__border_inner\",\n    FLEXLAYOUT__BORDER_INNER_ = \"flexlayout__border_inner_\",\n    FLEXLAYOUT__BORDER_INNER_TAB_CONTAINER = \"flexlayout__border_inner_tab_container\",\n    FLEXLAYOUT__BORDER_INNER_TAB_CONTAINER_ = \"flexlayout__border_inner_tab_container_\",\n    FLEXLAYOUT__BORDER_TAB_DIVIDER = \"flexlayout__border_tab_divider\",\n\n    FLEXLAYOUT__BORDER_SIZER = \"flexlayout__border_sizer\",\n\n    FLEXLAYOUT__BORDER_TOOLBAR = \"flexlayout__border_toolbar\",\n    FLEXLAYOUT__BORDER_TOOLBAR_ = \"flexlayout__border_toolbar_\",\n    FLEXLAYOUT__BORDER_TOOLBAR_BUTTON = \"flexlayout__border_toolbar_button\",\n    FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_FLOAT = \"flexlayout__border_toolbar_button-float\",\n\n    FLEXLAYOUT__DRAG_RECT = \"flexlayout__drag_rect\",\n    FLEXLAYOUT__EDGE_RECT = \"flexlayout__edge_rect\",\n\n    FLEXLAYOUT__ERROR_BOUNDARY_CONTAINER = \"flexlayout__error_boundary_container\",\n    FLEXLAYOUT__ERROR_BOUNDARY_CONTENT = \"flexlayout__error_boundary_content\",\n\n    FLEXLAYOUT__FLOATING_WINDOW_CONTENT = \"flexlayout__floating_window_content\",\n    FLEXLAYOUT__FLOATING_WINDOW_TAB = \"flexlayout__floating_window_tab\",\n\n    FLEXLAYOUT__LAYOUT = \"flexlayout__layout\",\n\n    FLEXLAYOUT__OUTLINE_RECT = \"flexlayout__outline_rect\",\n    FLEXLAYOUT__OUTLINE_RECT_EDGE = \"flexlayout__outline_rect_edge\",\n\n    FLEXLAYOUT__SPLITTER = \"flexlayout__splitter\",\n    FLEXLAYOUT__SPLITTER_EXTRA = \"flexlayout__splitter_extra\",\n    FLEXLAYOUT__SPLITTER_ = \"flexlayout__splitter_\",\n    FLEXLAYOUT__SPLITTER_BORDER = \"flexlayout__splitter_border\",\n    FLEXLAYOUT__SPLITTER_DRAG = \"flexlayout__splitter_drag\",\n\n    FLEXLAYOUT__TAB = \"flexlayout__tab\",\n\n    FLEXLAYOUT__TABSET = \"flexlayout__tabset\",\n    FLEXLAYOUT__TABSET_HEADER = \"flexlayout__tabset_header\",\n    FLEXLAYOUT__TABSET_HEADER_SIZER = \"flexlayout__tabset_header_sizer\",\n    FLEXLAYOUT__TABSET_HEADER_CONTENT = \"flexlayout__tabset_header_content\",\n    FLEXLAYOUT__TABSET_MAXIMIZED = \"flexlayout__tabset-maximized\",\n    FLEXLAYOUT__TABSET_SELECTED = \"flexlayout__tabset-selected\",\n    FLEXLAYOUT__TABSET_SIZER = \"flexlayout__tabset_sizer\",\n    FLEXLAYOUT__TABSET_TAB_DIVIDER = \"flexlayout__tabset_tab_divider\",\n\n    FLEXLAYOUT__TABSET_CONTENT = \"flexlayout__tabset_content\",\n    FLEXLAYOUT__TABSET_TABBAR_INNER = \"flexlayout__tabset_tabbar_inner\",\n    FLEXLAYOUT__TABSET_TABBAR_INNER_ = \"flexlayout__tabset_tabbar_inner_\",\n    FLEXLAYOUT__TABSET_TABBAR_INNER_TAB_CONTAINER = \"flexlayout__tabset_tabbar_inner_tab_container\",\n    FLEXLAYOUT__TABSET_TABBAR_INNER_TAB_CONTAINER_ = \"flexlayout__tabset_tabbar_inner_tab_container_\",\n\n    FLEXLAYOUT__TABSET_TABBAR_OUTER = \"flexlayout__tabset_tabbar_outer\",\n    FLEXLAYOUT__TABSET_TABBAR_OUTER_ = \"flexlayout__tabset_tabbar_outer_\",\n\n    FLEXLAYOUT__TAB_BORDER = \"flexlayout__tab_border\",\n    FLEXLAYOUT__TAB_BORDER_ = \"flexlayout__tab_border_\",\n    FLEXLAYOUT__TAB_BUTTON = \"flexlayout__tab_button\",\n    FLEXLAYOUT__TAB_BUTTON_CONTENT = \"flexlayout__tab_button_content\",\n    FLEXLAYOUT__TAB_BUTTON_LEADING = \"flexlayout__tab_button_leading\",\n    FLEXLAYOUT__TAB_BUTTON_OVERFLOW = \"flexlayout__tab_button_overflow\",\n    FLEXLAYOUT__TAB_BUTTON_OVERFLOW_COUNT = \"flexlayout__tab_button_overflow_count\",\n    FLEXLAYOUT__TAB_BUTTON_TEXTBOX = \"flexlayout__tab_button_textbox\",\n    FLEXLAYOUT__TAB_BUTTON_TRAILING = \"flexlayout__tab_button_trailing\",\n    FLEXLAYOUT__TAB_BUTTON_STAMP = \"flexlayout__tab_button_stamp\",\n\n    FLEXLAYOUT__TAB_FLOATING = \"flexlayout__tab_floating\",\n    FLEXLAYOUT__TAB_FLOATING_INNER = \"flexlayout__tab_floating_inner\",\n\n    FLEXLAYOUT__TAB_TOOLBAR = \"flexlayout__tab_toolbar\",\n    FLEXLAYOUT__TAB_TOOLBAR_BUTTON = \"flexlayout__tab_toolbar_button\",\n    FLEXLAYOUT__TAB_TOOLBAR_BUTTON_ = \"flexlayout__tab_toolbar_button-\",\n    FLEXLAYOUT__TAB_TOOLBAR_BUTTON_FLOAT = \"flexlayout__tab_toolbar_button-float\",\n    FLEXLAYOUT__TAB_TOOLBAR_STICKY_BUTTONS_CONTAINER = \"flexlayout__tab_toolbar_sticky_buttons_container\",\n    FLEXLAYOUT__TAB_TOOLBAR_BUTTON_CLOSE = \"flexlayout__tab_toolbar_button-close\",\n\n    FLEXLAYOUT__POPUP_MENU_CONTAINER = \"flexlayout__popup_menu_container\",\n    FLEXLAYOUT__POPUP_MENU_ITEM = \"flexlayout__popup_menu_item\",\n    FLEXLAYOUT__POPUP_MENU = \"flexlayout__popup_menu\",\n}\n","import { AttributeDefinitions } from \"../AttributeDefinitions\";\nimport { DockLocation } from \"../DockLocation\";\nimport { DropInfo } from \"../DropInfo\";\nimport { Orientation } from \"../Orientation\";\nimport { Rect } from \"../Rect\";\nimport { IDraggable } from \"./IDraggable\";\nimport { IJsonBorderNode, IJsonRowNode, IJsonTabNode, IJsonTabSetNode } from \"./IJsonModel\";\nimport { Model, ILayoutMetrics } from \"./Model\";\n\nexport abstract class Node {\n    /** @internal */\n    protected _model: Model;\n    /** @internal */\n    protected _attributes: Record<string, any>;\n    /** @internal */\n    protected _parent?: Node;\n    /** @internal */\n    protected _children: Node[];\n    /** @internal */\n    protected _fixed: boolean;\n    /** @internal */\n    protected _rect: Rect;\n    /** @internal */\n    protected _visible: boolean;\n    /** @internal */\n    protected _listeners: Record<string, (params: any) => void>;\n    /** @internal */\n    protected _dirty: boolean = false;\n    /** @internal */\n    protected _tempSize: number = 0;\n\n    /** @internal */\n    protected constructor(model: Model) {\n        this._model = model;\n        this._attributes = {};\n        this._children = [];\n        this._fixed = false;\n        this._rect = Rect.empty();\n        this._visible = false;\n        this._listeners = {};\n    }\n\n    getId() {\n        let id = this._attributes.id;\n        if (id !== undefined) {\n            return id as string;\n        }\n\n        id = this._model._nextUniqueId();\n        this._setId(id);\n\n        return id as string;\n    }\n\n    getModel() {\n        return this._model;\n    }\n\n    getType() {\n        return this._attributes.type as string;\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    getChildren() {\n        return this._children;\n    }\n\n    getRect() {\n        return this._rect;\n    }\n\n    isVisible() {\n        return this._visible;\n    }\n\n    getOrientation(): Orientation {\n        if (this._parent === undefined) {\n            return this._model.isRootOrientationVertical() ? Orientation.VERT : Orientation.HORZ;\n        } else {\n            return Orientation.flip(this._parent.getOrientation());\n        }\n    }\n\n    // event can be: resize, visibility, maximize (on tabset), close\n    setEventListener(event: string, callback: (params: any) => void) {\n        this._listeners[event] = callback;\n    }\n\n    removeEventListener(event: string) {\n        delete this._listeners[event];\n    }\n\n    abstract toJson(): IJsonRowNode | IJsonBorderNode | IJsonTabSetNode | IJsonTabNode | undefined;\n\n    /** @internal */\n    _setId(id: string) {\n        this._attributes.id = id;\n    }\n\n    /** @internal */\n    _fireEvent(event: string, params: any) {\n        // console.log(this._type, \" fireEvent \" + event + \" \" + JSON.stringify(params));\n        if (this._listeners[event] !== undefined) {\n            this._listeners[event](params);\n        }\n    }\n\n    /** @internal */\n    _getAttr(name: string) {\n        let val = this._attributes[name];\n\n        if (val === undefined) {\n            const modelName = this._getAttributeDefinitions().getModelName(name);\n            if (modelName !== undefined) {\n                val = this._model._getAttribute(modelName);\n            }\n        }\n\n        // console.log(name + \"=\" + val);\n        return val;\n    }\n\n    /** @internal */\n    _forEachNode(fn: (node: Node, level: number) => void, level: number) {\n        fn(this, level);\n        level++;\n        for (const node of this._children) {\n            node._forEachNode(fn, level);\n        }\n    }\n\n    /** @internal */\n    _setVisible(visible: boolean) {\n        if (visible !== this._visible) {\n            this._fireEvent(\"visibility\", { visible });\n            this._visible = visible;\n        }\n    }\n\n    /** @internal */\n    _getDrawChildren(): Node[] | undefined {\n        return this._children;\n    }\n\n    /** @internal */\n    _setParent(parent: Node) {\n        this._parent = parent;\n    }\n\n    /** @internal */\n    _setRect(rect: Rect) {\n        this._rect = rect;\n    }\n\n    /** @internal */\n    _setWeight(weight: number) {\n        this._attributes.weight = weight;\n    }\n\n    /** @internal */\n    _setSelected(index: number) {\n        this._attributes.selected = index;\n    }\n\n    /** @internal */\n    _isFixed() {\n        return this._fixed;\n    }\n\n    /** @internal */\n    _layout(rect: Rect, metrics: ILayoutMetrics) {\n        this._rect = rect;\n    }\n\n    /** @internal */\n    _findDropTargetNode(dragNode: Node & IDraggable, x: number, y: number): DropInfo | undefined {\n        let rtn: DropInfo | undefined;\n        if (this._rect.contains(x, y)) {\n            if (this._model.getMaximizedTabset() !== undefined) {\n                rtn = this._model.getMaximizedTabset()!.canDrop(dragNode, x, y);\n            } else {\n                rtn = this.canDrop(dragNode, x, y);\n                if (rtn === undefined) {\n                    if (this._children.length !== 0) {\n                        for (const child of this._children) {\n                            rtn = child._findDropTargetNode(dragNode, x, y);\n                            if (rtn !== undefined) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return rtn;\n    }\n\n    /** @internal */\n    canDrop(dragNode: Node & IDraggable, x: number, y: number): DropInfo | undefined {\n        return undefined;\n    }\n\n    /** @internal */\n    _canDockInto(dragNode: Node & IDraggable, dropInfo: DropInfo | undefined): boolean {\n        if (dropInfo != null) {\n            if (dropInfo.location === DockLocation.CENTER && dropInfo.node.isEnableDrop() === false) {\n                return false;\n            }\n\n            // prevent named tabset docking into another tabset, since this would lose the header\n            if (dropInfo.location === DockLocation.CENTER && dragNode.getType() === \"tabset\" && dragNode.getName() !== undefined) {\n                return false;\n            }\n\n            if (dropInfo.location !== DockLocation.CENTER && dropInfo.node.isEnableDivide() === false) {\n                return false;\n            }\n\n            // finally check model callback to check if drop allowed\n            if (this._model._getOnAllowDrop()) {\n                return (this._model._getOnAllowDrop() as (dragNode: Node, dropInfo: DropInfo) => boolean)(dragNode, dropInfo);\n            }\n        }\n        return true;\n    }\n\n    /** @internal */\n    _removeChild(childNode: Node) {\n        const pos = this._children.indexOf(childNode);\n        if (pos !== -1) {\n            this._children.splice(pos, 1);\n        }\n        this._dirty = true;\n        return pos;\n    }\n\n    /** @internal */\n    _addChild(childNode: Node, pos?: number) {\n        if (pos != null) {\n            this._children.splice(pos, 0, childNode);\n        } else {\n            this._children.push(childNode);\n            pos = this._children.length - 1;\n        }\n        childNode._parent = this;\n        this._dirty = true;\n        return pos;\n    }\n\n    /** @internal */\n    _removeAll() {\n        this._children = [];\n        this._dirty = true;\n    }\n\n    /** @internal */\n    _styleWithPosition(style?: Record<string, any>) {\n        if (style == null) {\n            style = {};\n        }\n        return this._rect.styleWithPosition(style);\n    }\n\n    /** @internal */\n    _getTempSize() {\n        return this._tempSize;\n    }\n\n    /** @internal */\n    _setTempSize(value: number) {\n        this._tempSize = value;\n    }\n\n    /** @internal */\n    isEnableDivide() {\n        return true;\n    }\n\n    /** @internal */\n    _toAttributeString() {\n        return JSON.stringify(this._attributes, undefined, \"\\t\");\n    }\n\n    // implemented by subclasses\n    /** @internal */\n    abstract _updateAttrs(json: any): void;\n    /** @internal */\n    abstract _getAttributeDefinitions(): AttributeDefinitions;\n}\n","import { AttributeDefinitions } from \"../AttributeDefinitions\";\nimport { Orientation } from \"../Orientation\";\nimport { Model } from \"./Model\";\nimport { Node } from \"./Node\";\n\nexport class SplitterNode extends Node {\n    static readonly TYPE: string = \"splitter\";\n\n    /** @internal */\n    constructor(model: Model) {\n        super(model);\n        this._fixed = true;\n        this._attributes.type = SplitterNode.TYPE;\n        model._addNode(this);\n    }\n\n    /** @internal */\n    getWidth() {\n        return this._model.getSplitterSize();\n    }\n\n    /** @internal */\n    getMinWidth() {\n        if (this.getOrientation() === Orientation.VERT) {\n            return this._model.getSplitterSize();\n        } else {\n            return 0;\n        }\n    }\n\n    /** @internal */\n    getHeight() {\n        return this._model.getSplitterSize();\n    }\n\n    /** @internal */\n    getMinHeight() {\n        if (this.getOrientation() === Orientation.HORZ) {\n            return this._model.getSplitterSize();\n        } else {\n            return 0;\n        }\n    }\n\n    /** @internal */\n    getMinSize(orientation: Orientation) {\n        if (orientation === Orientation.HORZ) {\n            return this.getMinWidth();\n        } else {\n            return this.getMinHeight();\n        }\n    }\n\n    /** @internal */\n    getWeight(): number {\n        return 0;\n    }\n\n    /** @internal */\n    _setWeight(value: number): void { }\n\n    /** @internal */\n    _getPrefSize(orientation: Orientation): number {\n        return this._model.getSplitterSize();\n    }\n\n    /** @internal */\n    _updateAttrs(json: any): void { }\n\n    /** @internal */\n    _getAttributeDefinitions(): AttributeDefinitions {\n        return new AttributeDefinitions();\n    }\n\n    toJson(): undefined {\n        return undefined;\n    }\n}\n","import { Attribute } from \"../Attribute\";\nimport { AttributeDefinitions } from \"../AttributeDefinitions\";\nimport { Rect } from \"../Rect\";\nimport { BorderNode } from \"./BorderNode\";\nimport { IDraggable } from \"./IDraggable\";\nimport { IJsonTabNode } from \"./IJsonModel\";\nimport { Model, ILayoutMetrics } from \"./Model\";\nimport { Node } from \"./Node\";\nimport { TabSetNode } from \"./TabSetNode\";\n\nexport class TabNode extends Node implements IDraggable {\n    static readonly TYPE = \"tab\";\n\n    /** @internal */\n    static _fromJson(json: any, model: Model, addToModel: boolean = true) {\n        const newLayoutNode = new TabNode(model, json, addToModel);\n        return newLayoutNode;\n    }\n    /** @internal */\n    private static _attributeDefinitions: AttributeDefinitions = TabNode._createAttributeDefinitions();\n\n    /** @internal */\n    private static _createAttributeDefinitions(): AttributeDefinitions {\n        const attributeDefinitions = new AttributeDefinitions();\n        attributeDefinitions.add(\"type\", TabNode.TYPE, true).setType(Attribute.STRING);\n        attributeDefinitions.add(\"id\", undefined).setType(Attribute.STRING);\n\n        attributeDefinitions.add(\"name\", \"[Unnamed Tab]\").setType(Attribute.STRING);\n        attributeDefinitions.add(\"altName\", undefined).setType(Attribute.STRING);\n        attributeDefinitions.add(\"helpText\", undefined).setType(Attribute.STRING);\n        attributeDefinitions.add(\"component\", undefined).setType(Attribute.STRING);\n        attributeDefinitions.add(\"config\", undefined).setType(\"any\");\n        attributeDefinitions.add(\"floating\", false).setType(Attribute.BOOLEAN);\n\n        attributeDefinitions.addInherited(\"enableClose\", \"tabEnableClose\").setType(Attribute.BOOLEAN);\n        attributeDefinitions.addInherited(\"closeType\", \"tabCloseType\").setType(\"ICloseType\");\n        attributeDefinitions.addInherited(\"enableDrag\", \"tabEnableDrag\").setType(Attribute.BOOLEAN);\n        attributeDefinitions.addInherited(\"enableRename\", \"tabEnableRename\").setType(Attribute.BOOLEAN);\n        attributeDefinitions.addInherited(\"className\", \"tabClassName\").setType(Attribute.STRING);\n        attributeDefinitions.addInherited(\"icon\", \"tabIcon\").setType(Attribute.STRING);\n        attributeDefinitions.addInherited(\"enableRenderOnDemand\", \"tabEnableRenderOnDemand\").setType(Attribute.BOOLEAN);\n        attributeDefinitions.addInherited(\"enableFloat\", \"tabEnableFloat\").setType(Attribute.BOOLEAN);\n        attributeDefinitions.addInherited(\"borderWidth\", \"tabBorderWidth\").setType(Attribute.NUMBER);\n        attributeDefinitions.addInherited(\"borderHeight\", \"tabBorderHeight\").setType(Attribute.NUMBER);\n        return attributeDefinitions;\n    }\n\n    /** @internal */\n    private _tabRect?: Rect;\n    /** @internal */\n    private _renderedName?: string;\n    /** @internal */\n    private _extra: Record<string, any>;\n    /** @internal */\n    private _window?: Window;\n\n    /** @internal */\n    constructor(model: Model, json: any, addToModel: boolean = true) {\n        super(model);\n\n        this._extra = {}; // extra data added to node not saved in json\n\n        TabNode._attributeDefinitions.fromJson(json, this._attributes);\n        if (addToModel === true) {\n            model._addNode(this);\n        }\n    }\n\n    getWindow() {\n        return this._window;\n    }\n\n    getTabRect() {\n        return this._tabRect;\n    }\n\n    /** @internal */\n    _setTabRect(rect: Rect) {\n        this._tabRect = rect;\n    }\n\n    /** @internal */\n    _setRenderedName(name: string) {\n        this._renderedName = name;\n    }\n\n    /** @internal */\n    _getNameForOverflowMenu() {\n        const altName = this._getAttr(\"altName\") as string;\n        if (altName !== undefined) {\n            return altName;\n        }\n        return this._renderedName;\n    }\n\n    getName() {\n        return this._getAttr(\"name\") as string;\n    }\n\n    getHelpText() {\n        return this._getAttr(\"helpText\") as string | undefined;\n    }\n\n    getComponent() {\n        return this._getAttr(\"component\") as string | undefined;\n    }\n\n    /**\n     * Returns the config attribute that can be used to store node specific data that\n     * WILL be saved to the json. The config attribute should be changed via the action Actions.updateNodeAttributes rather\n     * than directly, for example:\n     * this.state.model.doAction(\n     *   FlexLayout.Actions.updateNodeAttributes(node.getId(), {config:myConfigObject}));\n     */\n    getConfig() {\n        return this._attributes.config;\n    }\n\n    /**\n     * Returns an object that can be used to store transient node specific data that will\n     * NOT be saved in the json.\n     */\n    getExtraData() {\n        return this._extra;\n    }\n\n    isFloating() {\n        return this._getAttr(\"floating\") as boolean;\n    }\n\n    getIcon() {\n        return this._getAttr(\"icon\") as string | undefined;\n    }\n\n    isEnableClose() {\n        return this._getAttr(\"enableClose\") as boolean;\n    }\n\n    getCloseType() {\n        return this._getAttr(\"closeType\") as number;\n    }\n\n    isEnableFloat() {\n        return this._getAttr(\"enableFloat\") as boolean;\n    }\n\n    isEnableDrag() {\n        return this._getAttr(\"enableDrag\") as boolean;\n    }\n\n    isEnableRename() {\n        return this._getAttr(\"enableRename\") as boolean;\n    }\n\n    getClassName() {\n        return this._getAttr(\"className\") as string | undefined;\n    }\n\n    isEnableRenderOnDemand() {\n        return this._getAttr(\"enableRenderOnDemand\") as boolean;\n    }\n\n    /** @internal */\n    _setName(name: string) {\n        this._attributes.name = name;\n        if (this._window && this._window.document) {\n            this._window.document.title = name;\n        }\n    }\n\n    /** @internal */\n    _setFloating(float: boolean) {\n        this._attributes.floating = float;\n    }\n\n    /** @internal */\n    _layout(rect: Rect, metrics: ILayoutMetrics) {\n        if (!rect.equals(this._rect)) {\n            this._fireEvent(\"resize\", { rect });\n        }\n        this._rect = rect;\n    }\n\n    /** @internal */\n    _delete() {\n        (this._parent as TabSetNode | BorderNode)._remove(this);\n        this._fireEvent(\"close\", {});\n    }\n\n    toJson(): IJsonTabNode {\n        const json = {};\n        TabNode._attributeDefinitions.toJson(json, this._attributes);\n        return json;\n    }\n\n    /** @internal */\n    _updateAttrs(json: any) {\n        TabNode._attributeDefinitions.update(json, this._attributes);\n    }\n\n    /** @internal */\n    _getAttributeDefinitions() {\n        return TabNode._attributeDefinitions;\n    }\n\n    /** @internal */\n    _setWindow(window: Window | undefined) {\n        this._window = window;\n    }\n\n    /** @internal */\n    _setBorderWidth(width: number) {\n        this._attributes.borderWidth = width;\n    }\n\n    /** @internal */\n    _setBorderHeight(height: number) {\n        this._attributes.borderHeight = height;\n    }\n\n    /** @internal */\n    static getAttributeDefinitions() {\n        return TabNode._attributeDefinitions;\n    }\n\n}\n","import { TabNode } from \"./TabNode\";\nimport { Attribute } from \"../Attribute\";\nimport { AttributeDefinitions } from \"../AttributeDefinitions\";\nimport { DockLocation } from \"../DockLocation\";\nimport { DropInfo } from \"../DropInfo\";\nimport { Orientation } from \"../Orientation\";\nimport { Rect } from \"../Rect\";\nimport { CLASSES } from \"../Types\";\nimport { BorderNode } from \"./BorderNode\";\nimport { IDraggable } from \"./IDraggable\";\nimport { IDropTarget } from \"./IDropTarget\";\nimport { IJsonRowNode } from \"./IJsonModel\";\nimport { Model, ILayoutMetrics } from \"./Model\";\nimport { Node } from \"./Node\";\nimport { SplitterNode } from \"./SplitterNode\";\nimport { TabSetNode } from \"./TabSetNode\";\n\nexport class RowNode extends Node implements IDropTarget {\n    static readonly TYPE = \"row\";\n\n    /** @internal */\n    static _fromJson(json: any, model: Model) {\n        const newLayoutNode = new RowNode(model, json);\n\n        if (json.children != null) {\n            for (const jsonChild of json.children) {\n                if (jsonChild.type === TabSetNode.TYPE) {\n                    const child = TabSetNode._fromJson(jsonChild, model);\n                    newLayoutNode._addChild(child);\n                } else {\n                    const child = RowNode._fromJson(jsonChild, model);\n                    newLayoutNode._addChild(child);\n                }\n            }\n        }\n\n        return newLayoutNode;\n    }\n    /** @internal */\n    private static _attributeDefinitions: AttributeDefinitions = RowNode._createAttributeDefinitions();\n\n    /** @internal */\n    private static _createAttributeDefinitions(): AttributeDefinitions {\n        const attributeDefinitions = new AttributeDefinitions();\n        attributeDefinitions.add(\"type\", RowNode.TYPE, true).setType(Attribute.STRING).setFixed();\n        attributeDefinitions.add(\"id\", undefined).setType(Attribute.STRING);\n\n        attributeDefinitions.add(\"weight\", 100).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"width\", undefined).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"height\", undefined).setType(Attribute.NUMBER);\n\n        return attributeDefinitions;\n    }\n    /** @internal */\n    private _drawChildren: (TabSetNode | RowNode | SplitterNode)[];\n    /** @internal */\n    private _minHeight: number;\n    /** @internal */\n    private _minWidth: number;\n\n    /** @internal */\n    constructor(model: Model, json: any) {\n        super(model);\n\n        this._dirty = true;\n        this._drawChildren = [];\n        this._minHeight = 0;\n        this._minWidth = 0;\n        RowNode._attributeDefinitions.fromJson(json, this._attributes);\n        model._addNode(this);\n    }\n\n    getWeight() {\n        return this._attributes.weight as number;\n    }\n\n    getWidth() {\n        return this._getAttr(\"width\") as number | undefined;\n    }\n\n    getHeight() {\n        return this._getAttr(\"height\") as number | undefined;\n    }\n\n    /** @internal */\n    _setWeight(weight: number) {\n        this._attributes.weight = weight;\n    }\n\n    /** @internal */\n    _layout(rect: Rect, metrics: ILayoutMetrics) {\n        super._layout(rect, metrics);\n\n        const pixelSize = this._rect._getSize(this.getOrientation());\n\n        let totalWeight = 0;\n        let fixedPixels = 0;\n        let prefPixels = 0;\n        let totalPrefWeight = 0;\n        const drawChildren = this._getDrawChildren() as (RowNode | TabSetNode | SplitterNode)[];\n\n        for (const child of drawChildren) {\n            const prefSize = child._getPrefSize(this.getOrientation());\n            if (child._isFixed()) {\n                if (prefSize !== undefined) {\n                    fixedPixels += prefSize;\n                }\n            } else {\n                if (prefSize === undefined) {\n                    totalWeight += child.getWeight();\n                } else {\n                    prefPixels += prefSize;\n                    totalPrefWeight += child.getWeight();\n                }\n            }\n        }\n\n        let resizePreferred = false;\n        let availablePixels = pixelSize - fixedPixels - prefPixels;\n        if (availablePixels < 0) {\n            availablePixels = pixelSize - fixedPixels;\n            resizePreferred = true;\n            totalWeight += totalPrefWeight;\n        }\n        // assign actual pixel sizes\n        let totalSizeGiven = 0;\n        let variableSize = 0;\n        for (const child of drawChildren) {\n            const prefSize = child._getPrefSize(this.getOrientation());\n            if (child._isFixed()) {\n                if (prefSize !== undefined) {\n                    child._setTempSize(prefSize);\n                }\n            } else {\n                if (prefSize == null || resizePreferred) {\n                    if (totalWeight === 0) {\n                        child._setTempSize(0);\n                    } else {\n                        const minSize = child.getMinSize(this.getOrientation());\n                        const size = Math.floor(availablePixels * (child.getWeight() / totalWeight));\n                        child._setTempSize(Math.max(minSize, size));\n                    }\n                    variableSize += child._getTempSize();\n                } else {\n                    child._setTempSize(prefSize);\n                }\n            }\n\n            totalSizeGiven += child._getTempSize();\n        }\n\n        // adjust sizes to exactly fit\n        if (variableSize > 0) {\n            while (totalSizeGiven < pixelSize) {\n                for (const child of drawChildren) {\n                    if (!(child instanceof SplitterNode)) {\n                        const prefSize = child._getPrefSize(this.getOrientation());\n                        if (!child._isFixed() && (prefSize === undefined || resizePreferred) && totalSizeGiven < pixelSize) {\n                            child._setTempSize(child._getTempSize() + 1);\n                            totalSizeGiven++;\n                        }\n                    }\n                }\n            }\n\n            // decrease size using nodes not at there minimum\n            while (totalSizeGiven > pixelSize) {\n                let changed = false;\n                for (const child of drawChildren) {\n                    if (!(child instanceof SplitterNode)) {\n                        const minSize = child.getMinSize(this.getOrientation());\n                        const size = child._getTempSize();\n                        if (size > minSize && totalSizeGiven > pixelSize) {\n                            child._setTempSize(child._getTempSize() - 1);\n                            totalSizeGiven--;\n                            changed = true;\n                        }\n                    }\n                }\n                if (!changed) {\n                    // all children are at min values\n                    break;\n                }\n            }\n\n            // if still too big then simply reduce all nodes until fits\n            while (totalSizeGiven > pixelSize) {\n                let changed = false;\n                for (const child of drawChildren) {\n                    if (!(child instanceof SplitterNode)) {\n                        const size = child._getTempSize();\n                        if (size > 0 && totalSizeGiven > pixelSize) {\n                            child._setTempSize(child._getTempSize() - 1);\n                            totalSizeGiven--;\n                            changed = true;\n                        }\n                    }\n                }\n                if (!changed) {\n                    // all children are at 0 values\n                    break;\n                }\n            }\n        }\n\n        // layout children\n        let p = 0;\n        for (const child of drawChildren) {\n            if (this.getOrientation() === Orientation.HORZ) {\n                child._layout(new Rect(this._rect.x + p, this._rect.y, child._getTempSize(), this._rect.height), metrics);\n            } else {\n                child._layout(new Rect(this._rect.x, this._rect.y + p, this._rect.width, child._getTempSize()), metrics);\n            }\n            p += child._getTempSize();\n        }\n\n        return true;\n    }\n\n    /** @internal */\n    _getSplitterBounds(splitterNode: SplitterNode, useMinSize: boolean = false) {\n        const pBounds = [0, 0];\n        const drawChildren = this._getDrawChildren() as (RowNode | TabSetNode | SplitterNode)[];\n        const p = drawChildren.indexOf(splitterNode);\n        const node1 = drawChildren[p - 1];\n        const node2 = drawChildren[p + 1];\n        if (this.getOrientation() === Orientation.HORZ) {\n            const minSize1 = useMinSize ? node1.getMinWidth() : 0;\n            const minSize2 = useMinSize ? node2.getMinWidth() : 0;\n            pBounds[0] = node1.getRect().x + minSize1;\n            pBounds[1] = node2.getRect().getRight() - splitterNode.getWidth() - minSize2;\n        } else {\n            const minSize1 = useMinSize ? node1.getMinHeight() : 0;\n            const minSize2 = useMinSize ? node2.getMinHeight() : 0;\n            pBounds[0] = node1.getRect().y + minSize1;\n            pBounds[1] = node2.getRect().getBottom() - splitterNode.getHeight() - minSize2;\n        }\n        return pBounds;\n    }\n\n    /** @internal */\n    _calculateSplit(splitter: SplitterNode, splitterPos: number) {\n        let rtn;\n        const drawChildren = this._getDrawChildren() as (RowNode | TabSetNode | SplitterNode)[];\n        const p = drawChildren.indexOf(splitter);\n        const pBounds = this._getSplitterBounds(splitter);\n\n        const weightedLength = drawChildren[p - 1].getWeight() + drawChildren[p + 1].getWeight();\n\n        const pixelWidth1 = Math.max(0, splitterPos - pBounds[0]);\n        const pixelWidth2 = Math.max(0, pBounds[1] - splitterPos);\n\n        if (pixelWidth1 + pixelWidth2 > 0) {\n            const weight1 = (pixelWidth1 * weightedLength) / (pixelWidth1 + pixelWidth2);\n            const weight2 = (pixelWidth2 * weightedLength) / (pixelWidth1 + pixelWidth2);\n\n            rtn = {\n                node1Id: drawChildren[p - 1].getId(),\n                weight1,\n                pixelWidth1,\n                node2Id: drawChildren[p + 1].getId(),\n                weight2,\n                pixelWidth2,\n            };\n        }\n\n        return rtn;\n    }\n\n    /** @internal */\n    _getDrawChildren(): Node[] | undefined {\n        if (this._dirty) {\n            this._drawChildren = [];\n\n            for (let i = 0; i < this._children.length; i++) {\n                const child = this._children[i] as RowNode | TabSetNode;\n                if (i !== 0) {\n                    const newSplitter = new SplitterNode(this._model);\n                    newSplitter._setParent(this);\n                    this._drawChildren.push(newSplitter);\n                }\n                this._drawChildren.push(child);\n            }\n            this._dirty = false;\n        }\n\n        return this._drawChildren;\n    }\n\n    /** @internal */\n    getMinSize(orientation: Orientation) {\n        if (orientation === Orientation.HORZ) {\n            return this.getMinWidth();\n        } else {\n            return this.getMinHeight();\n        }\n    }\n\n    /** @internal */\n    getMinWidth() {\n        return this._minWidth;\n    }\n\n    /** @internal */\n    getMinHeight() {\n        return this._minHeight;\n    }\n\n    /** @internal */\n    calcMinSize() {\n        this._minHeight = 0;\n        this._minWidth = 0;\n        let first = true;\n        for (const child of this._children) {\n            const c = child as RowNode | TabSetNode;\n            if (c instanceof RowNode) {\n                c.calcMinSize();\n            }\n            if (this.getOrientation() === Orientation.VERT) {\n                this._minHeight += c.getMinHeight();\n                if (!first) {\n                    this._minHeight += this._model.getSplitterSize();\n                }\n                this._minWidth = Math.max(this._minWidth, c.getMinWidth());\n            } else {\n                this._minWidth += c.getMinWidth();\n                if (!first) {\n                    this._minWidth += this._model.getSplitterSize();\n                }\n                this._minHeight = Math.max(this._minHeight, c.getMinHeight());\n            }\n            first = false;\n        }\n    }\n\n    /** @internal */\n    _tidy() {\n        let i = 0;\n        while (i < this._children.length) {\n            const child = this._children[i];\n            if (child instanceof RowNode) {\n                child._tidy();\n\n                const childChildren = child.getChildren();\n                if (childChildren.length === 0) {\n                    this._removeChild(child);\n                } else if (childChildren.length === 1) {\n                    // hoist child/children up to this level\n                    const subchild = childChildren[0];\n                    this._removeChild(child);\n                    if (subchild instanceof RowNode) {\n                        let subChildrenTotal = 0;\n                        const subChildChildren = subchild.getChildren();\n                        for (const ssc of subChildChildren) {\n                            const subsubChild = ssc as RowNode | TabSetNode;\n                            subChildrenTotal += subsubChild.getWeight();\n                        }\n                        for (let j = 0; j < subChildChildren.length; j++) {\n                            const subsubChild = subChildChildren[j] as RowNode | TabSetNode;\n                            subsubChild._setWeight((child.getWeight() * subsubChild.getWeight()) / subChildrenTotal);\n                            this._addChild(subsubChild, i + j);\n                        }\n                    } else {\n                        subchild._setWeight(child.getWeight());\n                        this._addChild(subchild, i);\n                    }\n                } else {\n                    i++;\n                }\n            } else if (child instanceof TabSetNode && child.getChildren().length === 0) {\n                if (child.isEnableDeleteWhenEmpty()) {\n                    this._removeChild(child);\n                    if (child === this._model.getMaximizedTabset()) {\n                        this._model._setMaximizedTabset(undefined);\n                    }\n                } else {\n                    i++;\n                }\n            } else {\n                i++;\n            }\n        }\n\n        // add tabset into empty root\n        if (this === this._model.getRoot() && this._children.length === 0) {\n            const callback = this._model._getOnCreateTabSet();\n            let attrs = callback ? callback() : {};\n            attrs = { ...attrs, selected: -1 };\n            const child = new TabSetNode(this._model, attrs);\n            this._model._setActiveTabset(child);\n            this._addChild(child);\n        }\n\n    }\n\n    /** @internal */\n    canDrop(dragNode: Node & IDraggable, x: number, y: number): DropInfo | undefined {\n        const yy = y - this._rect.y;\n        const xx = x - this._rect.x;\n        const w = this._rect.width;\n        const h = this._rect.height;\n        const margin = 10; // height of edge rect\n        const half = 50; // half width of edge rect\n        let dropInfo;\n\n        if (this._model.isEnableEdgeDock() && this._parent === undefined) {\n            // _root row\n            if (x < this._rect.x + margin && yy > h / 2 - half && yy < h / 2 + half) {\n                const dockLocation = DockLocation.LEFT;\n                const outlineRect = dockLocation.getDockRect(this._rect);\n                outlineRect.width = outlineRect.width / 2;\n                dropInfo = new DropInfo(this, outlineRect, dockLocation, -1, CLASSES.FLEXLAYOUT__OUTLINE_RECT_EDGE);\n            } else if (x > this._rect.getRight() - margin && yy > h / 2 - half && yy < h / 2 + half) {\n                const dockLocation = DockLocation.RIGHT;\n                const outlineRect = dockLocation.getDockRect(this._rect);\n                outlineRect.width = outlineRect.width / 2;\n                outlineRect.x += outlineRect.width;\n                dropInfo = new DropInfo(this, outlineRect, dockLocation, -1, CLASSES.FLEXLAYOUT__OUTLINE_RECT_EDGE);\n            } else if (y < this._rect.y + margin && xx > w / 2 - half && xx < w / 2 + half) {\n                const dockLocation = DockLocation.TOP;\n                const outlineRect = dockLocation.getDockRect(this._rect);\n                outlineRect.height = outlineRect.height / 2;\n                dropInfo = new DropInfo(this, outlineRect, dockLocation, -1, CLASSES.FLEXLAYOUT__OUTLINE_RECT_EDGE);\n            } else if (y > this._rect.getBottom() - margin && xx > w / 2 - half && xx < w / 2 + half) {\n                const dockLocation = DockLocation.BOTTOM;\n                const outlineRect = dockLocation.getDockRect(this._rect);\n                outlineRect.height = outlineRect.height / 2;\n                outlineRect.y += outlineRect.height;\n                dropInfo = new DropInfo(this, outlineRect, dockLocation, -1, CLASSES.FLEXLAYOUT__OUTLINE_RECT_EDGE);\n            }\n\n            if (dropInfo !== undefined) {\n                if (!dragNode._canDockInto(dragNode, dropInfo)) {\n                    return undefined;\n                }\n            }\n        }\n\n        return dropInfo;\n    }\n\n    /** @internal */\n    drop(dragNode: Node & IDraggable, location: DockLocation, index: number): void {\n        const dockLocation = location;\n\n        const parent = dragNode.getParent();\n\n        if (parent) {\n            parent._removeChild(dragNode);\n        }\n\n        if (parent !== undefined && parent!.getType() === TabSetNode.TYPE) {\n            parent._setSelected(0);\n        }\n\n        if (parent !== undefined && parent!.getType() === BorderNode.TYPE) {\n            parent._setSelected(-1);\n        }\n\n        let tabSet: TabSetNode | undefined;\n        if (dragNode instanceof TabSetNode) {\n            tabSet = dragNode;\n        } else {\n            const callback = this._model._getOnCreateTabSet();\n            tabSet = new TabSetNode(this._model, callback ? callback(dragNode as TabNode) : {});\n            tabSet._addChild(dragNode);\n        }\n        let size = this._children.reduce((sum, child) => {\n            return sum + (child as RowNode | TabSetNode).getWeight();\n        }, 0);\n\n        if (size === 0) {\n            size = 100;\n        }\n\n        tabSet._setWeight(size / 3);\n\n        const horz = !this._model.isRootOrientationVertical();\n\n        if (horz && dockLocation === DockLocation.LEFT || !horz && dockLocation === DockLocation.TOP) {\n            this._addChild(tabSet, 0);\n        } else if (horz && dockLocation === DockLocation.RIGHT || !horz && dockLocation === DockLocation.BOTTOM) {\n            this._addChild(tabSet);\n        } else if (horz && dockLocation === DockLocation.TOP || !horz && dockLocation === DockLocation.LEFT) {\n            const vrow = new RowNode(this._model, {});\n            const hrow = new RowNode(this._model, {});\n            hrow._setWeight(75);\n            tabSet._setWeight(25);\n            for (const child of this._children) {\n                hrow._addChild(child);\n            }\n            this._removeAll();\n            vrow._addChild(tabSet);\n            vrow._addChild(hrow);\n            this._addChild(vrow);\n        } else if (horz && dockLocation === DockLocation.BOTTOM || !horz && dockLocation === DockLocation.RIGHT) {\n            const vrow = new RowNode(this._model, {});\n            const hrow = new RowNode(this._model, {});\n            hrow._setWeight(75);\n            tabSet._setWeight(25);\n            for (const child of this._children) {\n                hrow._addChild(child);\n            }\n            this._removeAll();\n            vrow._addChild(hrow);\n            vrow._addChild(tabSet);\n            this._addChild(vrow);\n        }\n\n        this._model._setActiveTabset(tabSet);\n\n        this._model._tidy();\n    }\n\n    toJson(): IJsonRowNode {\n        const json: any = {};\n        RowNode._attributeDefinitions.toJson(json, this._attributes);\n\n        json.children = [];\n        for (const child of this._children) {\n            json.children.push(child.toJson());\n        }\n\n        return json;\n    }\n\n    isEnableDrop() {\n        return true;\n    }\n\n    /** @internal */\n    _getPrefSize(orientation: Orientation) {\n        let prefSize = this.getWidth();\n        if (orientation === Orientation.VERT) {\n            prefSize = this.getHeight();\n        }\n        return prefSize;\n    }\n\n    /** @internal */\n    _getAttributeDefinitions() {\n        return RowNode._attributeDefinitions;\n    }\n\n    /** @internal */\n    _updateAttrs(json: any) {\n        RowNode._attributeDefinitions.update(json, this._attributes);\n    }\n\n    /** @internal */\n    static getAttributeDefinitions() {\n        return RowNode._attributeDefinitions;\n    }\n\n}\n","import { Attribute } from \"../Attribute\";\nimport { AttributeDefinitions } from \"../AttributeDefinitions\";\nimport { DockLocation } from \"../DockLocation\";\nimport { DropInfo } from \"../DropInfo\";\nimport { Orientation } from \"../Orientation\";\nimport { Rect } from \"../Rect\";\nimport { CLASSES } from \"../Types\";\nimport { BorderNode } from \"./BorderNode\";\nimport { IDraggable } from \"./IDraggable\";\nimport { IDropTarget } from \"./IDropTarget\";\nimport { IJsonTabSetNode } from \"./IJsonModel\";\nimport { Model, ILayoutMetrics } from \"./Model\";\nimport { Node } from \"./Node\";\nimport { RowNode } from \"./RowNode\";\nimport { TabNode } from \"./TabNode\";\nimport { adjustSelectedIndex } from \"./Utils\";\n\nexport class TabSetNode extends Node implements IDraggable, IDropTarget {\n    static readonly TYPE = \"tabset\";\n\n    /** @internal */\n    static _fromJson(json: any, model: Model) {\n        const newLayoutNode = new TabSetNode(model, json);\n\n        if (json.children != null) {\n            for (const jsonChild of json.children) {\n                const child = TabNode._fromJson(jsonChild, model);\n                newLayoutNode._addChild(child);\n            }\n        }\n        if (newLayoutNode._children.length === 0) {\n            newLayoutNode._setSelected(-1);\n        }\n\n        if (json.maximized && json.maximized === true) {\n            model._setMaximizedTabset(newLayoutNode);\n        }\n\n        if (json.active && json.active === true) {\n            model._setActiveTabset(newLayoutNode);\n        }\n\n        return newLayoutNode;\n    }\n    /** @internal */\n    private static _attributeDefinitions: AttributeDefinitions = TabSetNode._createAttributeDefinitions();\n\n    /** @internal */\n    private static _createAttributeDefinitions(): AttributeDefinitions {\n        const attributeDefinitions = new AttributeDefinitions();\n        attributeDefinitions.add(\"type\", TabSetNode.TYPE, true).setType(Attribute.STRING).setFixed();\n        attributeDefinitions.add(\"id\", undefined).setType(Attribute.STRING);\n\n        attributeDefinitions.add(\"weight\", 100).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"width\", undefined).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"height\", undefined).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"selected\", 0).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"name\", undefined).setType(Attribute.STRING);\n        attributeDefinitions.add(\"config\", undefined).setType(\"any\");\n\n        attributeDefinitions.addInherited(\"enableDeleteWhenEmpty\", \"tabSetEnableDeleteWhenEmpty\");\n        attributeDefinitions.addInherited(\"enableDrop\", \"tabSetEnableDrop\");\n        attributeDefinitions.addInherited(\"enableDrag\", \"tabSetEnableDrag\");\n        attributeDefinitions.addInherited(\"enableDivide\", \"tabSetEnableDivide\");\n        attributeDefinitions.addInherited(\"enableMaximize\", \"tabSetEnableMaximize\");\n        attributeDefinitions.addInherited(\"enableClose\", \"tabSetEnableClose\");\n        attributeDefinitions.addInherited(\"classNameTabStrip\", \"tabSetClassNameTabStrip\");\n        attributeDefinitions.addInherited(\"classNameHeader\", \"tabSetClassNameHeader\");\n        attributeDefinitions.addInherited(\"enableTabStrip\", \"tabSetEnableTabStrip\");\n        attributeDefinitions.addInherited(\"borderInsets\", \"tabSetBorderInsets\");\n        attributeDefinitions.addInherited(\"marginInsets\", \"tabSetMarginInsets\");\n        attributeDefinitions.addInherited(\"minWidth\", \"tabSetMinWidth\");\n        attributeDefinitions.addInherited(\"minHeight\", \"tabSetMinHeight\");\n\n        attributeDefinitions.addInherited(\"headerHeight\", \"tabSetHeaderHeight\");\n        attributeDefinitions.addInherited(\"tabStripHeight\", \"tabSetTabStripHeight\");\n        attributeDefinitions.addInherited(\"tabLocation\", \"tabSetTabLocation\");\n        attributeDefinitions.addInherited(\"autoSelectTab\", \"tabSetAutoSelectTab\").setType(Attribute.BOOLEAN);\n        return attributeDefinitions;\n    }\n\n    /** @internal */\n    private _contentRect?: Rect;\n    /** @internal */\n    private _tabHeaderRect?: Rect;\n    /** @internal */\n    private _calculatedTabBarHeight: number;\n    /** @internal */\n    private _calculatedHeaderBarHeight: number;\n\n    /** @internal */\n    constructor(model: Model, json: any) {\n        super(model);\n\n        TabSetNode._attributeDefinitions.fromJson(json, this._attributes);\n        model._addNode(this);\n        this._calculatedTabBarHeight = 0;\n        this._calculatedHeaderBarHeight = 0;\n    }\n\n    getName() {\n        return this._getAttr(\"name\") as string | undefined;\n    }\n\n    getSelected() {\n        const selected = this._attributes.selected;\n        if (selected !== undefined) {\n            return selected as number;\n        }\n        return -1;\n    }\n\n    getSelectedNode() {\n        const selected = this.getSelected();\n        if (selected !== -1) {\n            return this._children[selected];\n        }\n        return undefined;\n    }\n\n    getWeight(): number {\n        return this._getAttr(\"weight\") as number;\n    }\n\n    getWidth() {\n        return this._getAttr(\"width\") as number | undefined;\n    }\n\n    getMinWidth() {\n        return this._getAttr(\"minWidth\") as number;\n    }\n\n    getHeight() {\n        return this._getAttr(\"height\") as number | undefined;\n    }\n\n    getMinHeight() {\n        return this._getAttr(\"minHeight\") as number;\n    }\n\n    /** @internal */\n    getMinSize(orientation: Orientation) {\n        if (orientation === Orientation.HORZ) {\n            return this.getMinWidth();\n        } else {\n            return this.getMinHeight();\n        }\n    }\n\n    /**\n     * Returns the config attribute that can be used to store node specific data that\n     * WILL be saved to the json. The config attribute should be changed via the action Actions.updateNodeAttributes rather\n     * than directly, for example:\n     * this.state.model.doAction(\n     *   FlexLayout.Actions.updateNodeAttributes(node.getId(), {config:myConfigObject}));\n     */\n    getConfig() {\n        return this._attributes.config;\n    }\n\n    isMaximized() {\n        return this._model.getMaximizedTabset() === this;\n    }\n\n    isActive() {\n        return this._model.getActiveTabset() === this;\n    }\n\n    isEnableDeleteWhenEmpty() {\n        return this._getAttr(\"enableDeleteWhenEmpty\") as boolean;\n    }\n\n    isEnableDrop() {\n        return this._getAttr(\"enableDrop\") as boolean;\n    }\n\n    isEnableDrag() {\n        return this._getAttr(\"enableDrag\") as boolean;\n    }\n\n    isEnableDivide() {\n        return this._getAttr(\"enableDivide\") as boolean;\n    }\n\n    isEnableMaximize() {\n        return this._getAttr(\"enableMaximize\") as boolean;\n    }\n\n    isEnableClose() {\n        return this._getAttr(\"enableClose\") as boolean;\n    }\n\n    canMaximize() {\n        if (this.isEnableMaximize()) {\n            // always allow maximize toggle if already maximized\n            if (this.getModel().getMaximizedTabset() === this) {\n                return true;\n            }\n            // only one tabset, so disable\n            if (this.getParent() === this.getModel().getRoot() && this.getModel().getRoot().getChildren().length === 1) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    isEnableTabStrip() {\n        return this._getAttr(\"enableTabStrip\") as boolean;\n    }\n\n    isAutoSelectTab() {\n        return this._getAttr(\"autoSelectTab\") as boolean;\n    }\n\n    getClassNameTabStrip() {\n        return this._getAttr(\"classNameTabStrip\") as string | undefined;\n    }\n\n    getClassNameHeader() {\n        return this._getAttr(\"classNameHeader\") as string | undefined;\n    }\n\n    /** @internal */\n    calculateHeaderBarHeight(metrics: ILayoutMetrics) {\n        const headerBarHeight = this._getAttr(\"headerHeight\") as number;\n        if (headerBarHeight !== 0) {\n            // its defined\n            this._calculatedHeaderBarHeight = headerBarHeight;\n        } else {\n            this._calculatedHeaderBarHeight = metrics.headerBarSize;\n        }\n    }\n\n    /** @internal */\n    calculateTabBarHeight(metrics: ILayoutMetrics) {\n        const tabBarHeight = this._getAttr(\"tabStripHeight\") as number;\n        if (tabBarHeight !== 0) {\n            // its defined\n            this._calculatedTabBarHeight = tabBarHeight;\n        } else {\n            this._calculatedTabBarHeight = metrics.tabBarSize;\n        }\n    }\n\n    getHeaderHeight() {\n        return this._calculatedHeaderBarHeight;\n    }\n\n    getTabStripHeight() {\n        return this._calculatedTabBarHeight;\n    }\n\n    getTabLocation() {\n        return this._getAttr(\"tabLocation\") as string;\n    }\n\n    /** @internal */\n    _setWeight(weight: number) {\n        this._attributes.weight = weight;\n    }\n\n    /** @internal */\n    _setSelected(index: number) {\n        this._attributes.selected = index;\n    }\n\n    /** @internal */\n    canDrop(dragNode: Node & IDraggable, x: number, y: number): DropInfo | undefined {\n        let dropInfo;\n\n        if (dragNode === this) {\n            const dockLocation = DockLocation.CENTER;\n            const outlineRect = this._tabHeaderRect;\n            dropInfo = new DropInfo(this, outlineRect!, dockLocation, -1, CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n        } else if (this._contentRect!.contains(x, y)) {\n            let dockLocation = DockLocation.CENTER;\n            if (this._model.getMaximizedTabset() === undefined) {\n                dockLocation = DockLocation.getLocation(this._contentRect!, x, y);\n            }\n            const outlineRect = dockLocation.getDockRect(this._rect);\n            dropInfo = new DropInfo(this, outlineRect, dockLocation, -1, CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n        } else if (this._tabHeaderRect != null && this._tabHeaderRect.contains(x, y)) {\n            let r: Rect;\n            let yy: number;\n            let h: number;\n            if (this._children.length === 0) {\n                r = this._tabHeaderRect.clone();\n                yy = r.y + 3;\n                h = r.height - 4;\n                r.width = 2;\n            } else {\n                let child = this._children[0] as TabNode;\n                r = child.getTabRect()!;\n                yy = r.y;\n                h = r.height;\n                let p = this._tabHeaderRect.x;\n                let childCenter = 0;\n                for (let i = 0; i < this._children.length; i++) {\n                    child = this._children[i] as TabNode;\n                    r = child.getTabRect()!;\n                    childCenter = r.x + r.width / 2;\n                    if (x >= p && x < childCenter) {\n                        const dockLocation = DockLocation.CENTER;\n                        const outlineRect = new Rect(r.x - 2, yy, 3, h);\n                        dropInfo = new DropInfo(this, outlineRect, dockLocation, i, CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n                        break;\n                    }\n                    p = childCenter;\n                }\n            }\n            if (dropInfo == null) {\n                const dockLocation = DockLocation.CENTER;\n                const outlineRect = new Rect(r.getRight() - 2, yy, 3, h);\n                dropInfo = new DropInfo(this, outlineRect, dockLocation, this._children.length, CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n            }\n        }\n\n        if (!dragNode._canDockInto(dragNode, dropInfo)) {\n            return undefined;\n        }\n\n        return dropInfo;\n    }\n\n    /** @internal */\n    _layout(rect: Rect, metrics: ILayoutMetrics) {\n        this.calculateHeaderBarHeight(metrics);\n        this.calculateTabBarHeight(metrics);\n\n        if (this.isMaximized()) {\n            rect = (this._model.getRoot() as Node).getRect();\n        }\n\n        rect = rect.removeInsets(this._getAttr(\"marginInsets\"));\n        this._rect = rect;\n        rect = rect.removeInsets(this._getAttr(\"borderInsets\"));\n\n        const showHeader = this.getName() !== undefined;\n        let y = 0;\n        let h = 0;\n        if (showHeader) {\n            y += this._calculatedHeaderBarHeight;\n            h += this._calculatedHeaderBarHeight;\n        }\n        if (this.isEnableTabStrip()) {\n            if (this.getTabLocation() === \"top\") {\n                this._tabHeaderRect = new Rect(rect.x, rect.y + y, rect.width, this._calculatedTabBarHeight);\n            } else {\n                this._tabHeaderRect = new Rect(rect.x, rect.y + rect.height - this._calculatedTabBarHeight, rect.width, this._calculatedTabBarHeight);\n            }\n            h += this._calculatedTabBarHeight;\n            if (this.getTabLocation() === \"top\") {\n                y += this._calculatedTabBarHeight;\n            }\n        }\n        this._contentRect = new Rect(rect.x, rect.y + y, rect.width, rect.height - h);\n\n        for (let i = 0; i < this._children.length; i++) {\n            const child = this._children[i];\n            child._layout(this._contentRect!, metrics);\n            child._setVisible(i === this.getSelected());\n        }\n    }\n\n    /** @internal */\n    _delete() {\n        (this._parent as RowNode)._removeChild(this);\n    }\n\n    /** @internal */\n    _remove(node: TabNode) {\n        const removedIndex = this._removeChild(node);\n        this._model._tidy();\n\n        adjustSelectedIndex(this, removedIndex);\n    }\n\n    /** @internal */\n    drop(dragNode: Node & IDraggable, location: DockLocation, index: number, select?: boolean) {\n        const dockLocation = location;\n\n        if (this === dragNode) {\n            // tabset drop into itself\n            return; // dock back to itself\n        }\n\n        let dragParent = dragNode.getParent() as BorderNode | TabSetNode | RowNode;\n        let fromIndex = 0;\n        if (dragParent !== undefined) {\n            fromIndex = dragParent._removeChild(dragNode);\n            // if selected node in border is being docked into tabset then deselect border tabs\n            if (dragParent instanceof BorderNode && dragParent.getSelected() === fromIndex) {\n                dragParent._setSelected(-1);\n            } else {\n                adjustSelectedIndex(dragParent, fromIndex);\n            }\n        }\n\n        // if dropping a tab back to same tabset and moving to forward position then reduce insertion index\n        if (dragNode.getType() === TabNode.TYPE && dragParent === this && fromIndex < index && index > 0) {\n            index--;\n        }\n\n        // simple_bundled dock to existing tabset\n        if (dockLocation === DockLocation.CENTER) {\n            let insertPos = index;\n            if (insertPos === -1) {\n                insertPos = this._children.length;\n            }\n\n            if (dragNode.getType() === TabNode.TYPE) {\n                this._addChild(dragNode, insertPos);\n                if (select || (select !== false && this.isAutoSelectTab())) {\n                    this._setSelected(insertPos);\n                }\n                // console.log(\"added child at : \" + insertPos);\n            } else {\n                for (let i = 0; i < dragNode.getChildren().length; i++) {\n                    const child = dragNode.getChildren()[i];\n                    this._addChild(child, insertPos);\n                    // console.log(\"added child at : \" + insertPos);\n                    insertPos++;\n                }\n                if (this.getSelected() === -1 && this._children.length > 0) {\n                    this._setSelected(0);\n                }\n            }\n            this._model._setActiveTabset(this);\n        } else {\n            let tabSet: TabSetNode | undefined;\n            if (dragNode instanceof TabNode) {\n                // create new tabset parent\n                // console.log(\"create a new tabset\");\n                const callback = this._model._getOnCreateTabSet();\n                tabSet = new TabSetNode(this._model, callback ? callback(dragNode as TabNode) : {});\n                tabSet._addChild(dragNode);\n                // console.log(\"added child at end\");\n                dragParent = tabSet;\n            } else {\n                tabSet = dragNode as TabSetNode;\n            }\n\n            const parentRow = this._parent as Node;\n            const pos = parentRow.getChildren().indexOf(this);\n\n            if (parentRow.getOrientation() === dockLocation._orientation) {\n                tabSet._setWeight(this.getWeight() / 2);\n                this._setWeight(this.getWeight() / 2);\n                // console.log(\"added child 50% size at: \" +  pos + dockLocation.indexPlus);\n                parentRow._addChild(tabSet, pos + dockLocation._indexPlus);\n            } else {\n                // create a new row to host the new tabset (it will go in the opposite direction)\n                // console.log(\"create a new row\");\n                const newRow = new RowNode(this._model, {});\n                newRow._setWeight(this.getWeight());\n                newRow._addChild(this);\n                this._setWeight(50);\n                tabSet._setWeight(50);\n                // console.log(\"added child 50% size at: \" +  dockLocation.indexPlus);\n                newRow._addChild(tabSet, dockLocation._indexPlus);\n\n                parentRow._removeChild(this);\n                parentRow._addChild(newRow, pos);\n            }\n            this._model._setActiveTabset(tabSet);\n        }\n        this._model._tidy();\n    }\n\n    toJson(): IJsonTabSetNode {\n        const json: any = {};\n        TabSetNode._attributeDefinitions.toJson(json, this._attributes);\n        json.children = this._children.map((child) => child.toJson());\n\n        if (this.isActive()) {\n            json.active = true;\n        }\n\n        if (this.isMaximized()) {\n            json.maximized = true;\n        }\n\n        return json;\n    }\n\n    /** @internal */\n    _updateAttrs(json: any) {\n        TabSetNode._attributeDefinitions.update(json, this._attributes);\n    }\n\n    /** @internal */\n    _getAttributeDefinitions() {\n        return TabSetNode._attributeDefinitions;\n    }\n\n    /** @internal */\n    _getPrefSize(orientation: Orientation) {\n        let prefSize = this.getWidth();\n        if (orientation === Orientation.VERT) {\n            prefSize = this.getHeight();\n        }\n        return prefSize;\n    }\n\n\n    /** @internal */\n    static getAttributeDefinitions() {\n        return TabSetNode._attributeDefinitions;\n    }\n\n}\n","import { TabSetNode } from \"./TabSetNode\";\nimport { BorderNode } from \"./BorderNode\";\nimport { RowNode } from \"./RowNode\";\nimport { TabNode } from \"./TabNode\";\n\n/** @internal */\nexport function adjustSelectedIndexAfterFloat(node: TabNode) {\n    const parent = node.getParent();\n    if (parent !== null) {\n        if (parent instanceof TabSetNode) {\n            let found = false;\n            let newSelected = 0;\n            const children = parent.getChildren();\n            for (let i = 0; i < children.length; i++) {\n                const child = children[i] as TabNode;\n                if (child === node) {\n                    found = true;\n                } else {\n                    if (!child.isFloating()) {\n                        newSelected = i;\n                        if (found) break;\n                    }\n                }\n            }\n            parent._setSelected(newSelected);\n        } else if (parent instanceof BorderNode) {\n            parent._setSelected(-1);\n        }\n    }\n}\n\n/** @internal */\nexport function adjustSelectedIndexAfterDock(node: TabNode) {\n    const parent = node.getParent();\n    if (parent !== null && (parent instanceof TabSetNode || parent instanceof BorderNode)) {\n        const children = parent.getChildren();\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i] as TabNode;\n            if (child === node) {\n                parent._setSelected(i);\n                return;\n            }\n        }\n    }\n}\n\n/** @internal */\nexport function adjustSelectedIndex(parent: TabSetNode | BorderNode | RowNode, removedIndex: number) {\n    // for the tabset/border being removed from set the selected index\n    if (parent !== undefined && (parent.getType() === TabSetNode.TYPE || parent.getType() === BorderNode.TYPE)) {\n        const selectedIndex = (parent as TabSetNode | BorderNode).getSelected();\n        if (selectedIndex !== -1) {\n            if (removedIndex === selectedIndex && parent.getChildren().length > 0) {\n                if (removedIndex >= parent.getChildren().length) {\n                    // removed last tab; select new last tab\n                    parent._setSelected(parent.getChildren().length - 1);\n                } else {\n                    // leave selected index as is, selecting next tab after this one\n                }\n            } else if (removedIndex < selectedIndex) {\n                parent._setSelected(selectedIndex - 1);\n            } else if (removedIndex > selectedIndex) {\n                // leave selected index as is\n            } else {\n                parent._setSelected(-1);\n            }\n        }\n    }\n}\n\nexport function randomUUID() {\n    // @ts-ignore\n    return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n      (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    );\n  }\n\n\n","import { Attribute } from \"../Attribute\";\nimport { AttributeDefinitions } from \"../AttributeDefinitions\";\nimport { DockLocation } from \"../DockLocation\";\nimport { DropInfo } from \"../DropInfo\";\nimport { Orientation } from \"../Orientation\";\nimport { Rect } from \"../Rect\";\nimport { CLASSES } from \"../Types\";\nimport { IDraggable } from \"./IDraggable\";\nimport { IDropTarget } from \"./IDropTarget\";\nimport { IJsonBorderNode } from \"./IJsonModel\";\nimport { Model, ILayoutMetrics } from \"./Model\";\nimport { Node } from \"./Node\";\nimport { SplitterNode } from \"./SplitterNode\";\nimport { TabNode } from \"./TabNode\";\nimport { TabSetNode } from \"./TabSetNode\";\nimport { adjustSelectedIndex } from \"./Utils\";\n\nexport class BorderNode extends Node implements IDropTarget {\n    static readonly TYPE = \"border\";\n\n    /** @internal */\n    static _fromJson(json: any, model: Model) {\n        const location = DockLocation.getByName(json.location);\n        const border = new BorderNode(location, json, model);\n        if (json.children) {\n            border._children = json.children.map((jsonChild: any) => {\n                const child = TabNode._fromJson(jsonChild, model);\n                child._setParent(border);\n                return child;\n            });\n        }\n\n        return border;\n    }\n    /** @internal */\n    private static _attributeDefinitions: AttributeDefinitions = BorderNode._createAttributeDefinitions();\n\n    /** @internal */\n    private static _createAttributeDefinitions(): AttributeDefinitions {\n        const attributeDefinitions = new AttributeDefinitions();\n        attributeDefinitions.add(\"type\", BorderNode.TYPE, true).setType(Attribute.STRING).setFixed();\n\n        attributeDefinitions.add(\"selected\", -1).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"show\", true).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"config\", undefined).setType(\"any\");\n\n        attributeDefinitions.addInherited(\"barSize\", \"borderBarSize\").setType(Attribute.NUMBER);\n        attributeDefinitions.addInherited(\"enableDrop\", \"borderEnableDrop\").setType(Attribute.BOOLEAN);\n        attributeDefinitions.addInherited(\"className\", \"borderClassName\").setType(Attribute.STRING);\n        attributeDefinitions.addInherited(\"autoSelectTabWhenOpen\", \"borderAutoSelectTabWhenOpen\").setType(Attribute.BOOLEAN);\n        attributeDefinitions.addInherited(\"autoSelectTabWhenClosed\", \"borderAutoSelectTabWhenClosed\").setType(Attribute.BOOLEAN);\n        attributeDefinitions.addInherited(\"size\", \"borderSize\").setType(Attribute.NUMBER);\n        attributeDefinitions.addInherited(\"minSize\", \"borderMinSize\").setType(Attribute.NUMBER);\n        attributeDefinitions.addInherited(\"enableAutoHide\", \"borderEnableAutoHide\").setType(Attribute.BOOLEAN);\n        return attributeDefinitions;\n    }\n\n    /** @internal */\n    private _contentRect?: Rect;\n    /** @internal */\n    private _tabHeaderRect?: Rect;\n    /** @internal */\n    private _location: DockLocation;\n    /** @internal */\n    private _drawChildren: Node[];\n    /** @internal */\n    private _adjustedSize: number = 0;\n    /** @internal */\n    private _calculatedBorderBarSize: number = 0;\n\n    /** @internal */\n    constructor(location: DockLocation, json: any, model: Model) {\n        super(model);\n\n        this._location = location;\n        this._drawChildren = [];\n        this._attributes.id = `border_${location.getName()}`;\n        BorderNode._attributeDefinitions.fromJson(json, this._attributes);\n        model._addNode(this);\n    }\n\n    getLocation() {\n        return this._location;\n    }\n\n    getTabHeaderRect() {\n        return this._tabHeaderRect;\n    }\n\n    getRect() {\n        return this._tabHeaderRect!;\n    }\n\n    getContentRect() {\n        return this._contentRect;\n    }\n\n    isEnableDrop() {\n        return this._getAttr(\"enableDrop\") as boolean;\n    }\n\n    isAutoSelectTab(whenOpen?: boolean) {\n        if (whenOpen == null) {\n            whenOpen = this.getSelected() !== -1;\n        }\n        if (whenOpen) {\n            return this._getAttr(\"autoSelectTabWhenOpen\") as boolean;\n        } else {\n            return this._getAttr(\"autoSelectTabWhenClosed\") as boolean;\n        }\n    }\n\n    getClassName() {\n        return this._getAttr(\"className\") as string | undefined;\n    }\n\n    /** @internal */\n    calcBorderBarSize(metrics: ILayoutMetrics) {\n        const barSize = this._getAttr(\"barSize\") as number;\n        if (barSize !== 0) {\n            // its defined\n            this._calculatedBorderBarSize = barSize;\n        } else {\n            this._calculatedBorderBarSize = metrics.borderBarSize;\n        }\n    }\n\n    getBorderBarSize() {\n        return this._calculatedBorderBarSize;\n    }\n\n    getSize() {\n        const defaultSize = this._getAttr(\"size\") as number;\n        const selected = this.getSelected();\n        if (selected === -1) {\n            return defaultSize;\n        } else {\n            const tabNode = this._children[selected] as TabNode;\n            const tabBorderSize = (this._location._orientation === Orientation.HORZ) ? tabNode._getAttr(\"borderWidth\") : tabNode._getAttr(\"borderHeight\");\n            if (tabBorderSize === -1) {\n                return defaultSize;\n            } else {\n                return tabBorderSize;\n            }\n        }\n    }\n\n    getMinSize() {\n        return this._getAttr(\"minSize\") as number;\n    }\n\n    getSelected(): number {\n        return this._attributes.selected as number;\n    }\n\n    getSelectedNode(): Node | undefined {\n        if (this.getSelected() !== -1) {\n            return this._children[this.getSelected()];\n        }\n        return undefined;\n    }\n\n    getOrientation() {\n        return this._location.getOrientation();\n    }\n\n    /**\n     * Returns the config attribute that can be used to store node specific data that\n     * WILL be saved to the json. The config attribute should be changed via the action Actions.updateNodeAttributes rather\n     * than directly, for example:\n     * this.state.model.doAction(\n     *   FlexLayout.Actions.updateNodeAttributes(node.getId(), {config:myConfigObject}));\n     */\n    getConfig() {\n        return this._attributes.config;\n    }\n\n    isMaximized() {\n        return false;\n    }\n\n    isShowing() {\n        const show = this._attributes.show as boolean;\n        if (show) {\n            if (this._model._getShowHiddenBorder() !== this._location && this.isAutoHide() && this._children.length === 0) {\n                return false;\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    isAutoHide() {\n        return this._getAttr(\"enableAutoHide\") as boolean;\n    }\n\n    /** @internal */\n    _setSelected(index: number) {\n        this._attributes.selected = index;\n    }\n\n    /** @internal */\n    _setSize(pos: number) {\n        const selected = this.getSelected();\n        if (selected === -1) {\n            this._attributes.size = pos;\n        } else {\n            const tabNode = this._children[selected] as TabNode;\n            const tabBorderSize = (this._location._orientation === Orientation.HORZ) ? tabNode._getAttr(\"borderWidth\") : tabNode._getAttr(\"borderHeight\");\n            if (tabBorderSize === -1) {\n                this._attributes.size = pos;\n            } else {\n                if (this._location._orientation === Orientation.HORZ) {\n                    tabNode._setBorderWidth(pos);\n                } else {\n                    tabNode._setBorderHeight(pos);\n                }\n            }\n        }\n    }\n\n    /** @internal */\n    _updateAttrs(json: any) {\n        BorderNode._attributeDefinitions.update(json, this._attributes);\n    }\n\n    /** @internal */\n    _getDrawChildren() {\n        return this._drawChildren;\n    }\n\n    /** @internal */\n    _setAdjustedSize(size: number) {\n        this._adjustedSize = size;\n    }\n\n    /** @internal */\n    _getAdjustedSize() {\n        return this._adjustedSize;\n    }\n\n    /** @internal */\n    _layoutBorderOuter(outer: Rect, metrics: ILayoutMetrics) {\n        this.calcBorderBarSize(metrics);\n        const split1 = this._location.split(outer, this.getBorderBarSize()); // split border outer\n        this._tabHeaderRect = split1.start;\n        return split1.end;\n    }\n\n    /** @internal */\n    _layoutBorderInner(inner: Rect, metrics: ILayoutMetrics) {\n        this._drawChildren = [];\n        const location = this._location;\n\n        const split1 = location.split(inner, this._adjustedSize + this._model.getSplitterSize()); // split off tab contents\n        const split2 = location.reflect().split(split1.start, this._model.getSplitterSize()); // split contents into content and splitter\n\n        this._contentRect = split2.end;\n\n        for (let i = 0; i< this._children.length; i++) {\n            const child = this._children[i];\n            child._layout(this._contentRect!, metrics);\n            child._setVisible(i === this.getSelected());\n            this._drawChildren.push(child);\n        }\n\n        if (this.getSelected() === -1) {\n            return inner;\n        } else {\n            const newSplitter = new SplitterNode(this._model);\n            newSplitter._setParent(this);\n            newSplitter._setRect(split2.start);\n            this._drawChildren.push(newSplitter);\n\n            return split1.end;\n        }\n    }\n\n    /** @internal */\n    _remove(node: TabNode) {\n        const removedIndex = this._removeChild(node);\n        if (this.getSelected() !== -1) {\n            adjustSelectedIndex(this, removedIndex);\n        }\n    }\n\n    /** @internal */\n    canDrop(dragNode: Node & IDraggable, x: number, y: number): DropInfo | undefined {\n        if (dragNode.getType() !== TabNode.TYPE) {\n            return undefined;\n        }\n\n        let dropInfo;\n        const dockLocation = DockLocation.CENTER;\n\n        if (this._tabHeaderRect!.contains(x, y)) {\n            if (this._location._orientation === Orientation.VERT) {\n                if (this._children.length > 0) {\n                    let child = this._children[0];\n                    let childRect = (child as TabNode).getTabRect()!;\n                    const childY = childRect.y;\n\n                    const childHeight = childRect.height;\n\n                    let pos = this._tabHeaderRect!.x;\n                    let childCenter = 0;\n                    for (let i = 0; i < this._children.length; i++) {\n                        child = this._children[i];\n                        childRect = (child as TabNode).getTabRect()!;\n                        childCenter = childRect.x + childRect.width / 2;\n                        if (x >= pos && x < childCenter) {\n                            const outlineRect = new Rect(childRect.x - 2, childY, 3, childHeight);\n                            dropInfo = new DropInfo(this, outlineRect, dockLocation, i, CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n                            break;\n                        }\n                        pos = childCenter;\n                    }\n                    if (dropInfo == null) {\n                        const outlineRect = new Rect(childRect.getRight() - 2, childY, 3, childHeight);\n                        dropInfo = new DropInfo(this, outlineRect, dockLocation, this._children.length, CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n                    }\n                } else {\n                    const outlineRect = new Rect(this._tabHeaderRect!.x + 1, this._tabHeaderRect!.y + 2, 3, 18);\n                    dropInfo = new DropInfo(this, outlineRect, dockLocation, 0, CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n                }\n            } else {\n                if (this._children.length > 0) {\n                    let child = this._children[0];\n                    let childRect = (child as TabNode).getTabRect()!;\n                    const childX = childRect.x;\n                    const childWidth = childRect.width;\n\n                    let pos = this._tabHeaderRect!.y;\n                    let childCenter = 0;\n                    for (let i = 0; i < this._children.length; i++) {\n                        child = this._children[i];\n                        childRect = (child as TabNode).getTabRect()!;\n                        childCenter = childRect.y + childRect.height / 2;\n                        if (y >= pos && y < childCenter) {\n                            const outlineRect = new Rect(childX, childRect.y - 2, childWidth, 3);\n                            dropInfo = new DropInfo(this, outlineRect, dockLocation, i, CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n                            break;\n                        }\n                        pos = childCenter;\n                    }\n                    if (dropInfo == null) {\n                        const outlineRect = new Rect(childX, childRect.getBottom() - 2, childWidth, 3);\n                        dropInfo = new DropInfo(this, outlineRect, dockLocation, this._children.length, CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n                    }\n                } else {\n                    const outlineRect = new Rect(this._tabHeaderRect!.x + 2, this._tabHeaderRect!.y + 1, 18, 3);\n                    dropInfo = new DropInfo(this, outlineRect, dockLocation, 0, CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n                }\n            }\n            if (!dragNode._canDockInto(dragNode, dropInfo)) {\n                return undefined;\n            }\n        } else if (this.getSelected() !== -1 && this._contentRect!.contains(x, y)) {\n            const outlineRect = this._contentRect;\n            dropInfo = new DropInfo(this, outlineRect!, dockLocation, -1, CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n            if (!dragNode._canDockInto(dragNode, dropInfo)) {\n                return undefined;\n            }\n        }\n\n        return dropInfo;\n    }\n\n    /** @internal */\n    drop(dragNode: Node & IDraggable, location: DockLocation, index: number, select?: boolean): void {\n        let fromIndex = 0;\n        const dragParent = dragNode.getParent() as BorderNode | TabSetNode;\n        if (dragParent !== undefined) {\n            fromIndex = dragParent._removeChild(dragNode);\n            // if selected node in border is being docked into a different border then deselect border tabs\n            if (dragParent !== this && dragParent instanceof BorderNode && dragParent.getSelected() === fromIndex) {\n                dragParent._setSelected(-1);\n            } else {\n                adjustSelectedIndex(dragParent, fromIndex);\n            }\n        }\n\n        // if dropping a tab back to same tabset and moving to forward position then reduce insertion index\n        if (dragNode.getType() === TabNode.TYPE && dragParent === this && fromIndex < index && index > 0) {\n            index--;\n        }\n\n        // simple_bundled dock to existing tabset\n        let insertPos = index;\n        if (insertPos === -1) {\n            insertPos = this._children.length;\n        }\n\n        if (dragNode.getType() === TabNode.TYPE) {\n            this._addChild(dragNode, insertPos);\n        }\n\n        if (select || (select !== false && this.isAutoSelectTab())) {\n            this._setSelected(insertPos);\n        }\n\n        this._model._tidy();\n    }\n\n    toJson(): IJsonBorderNode {\n        const json: any = {};\n        BorderNode._attributeDefinitions.toJson(json, this._attributes);\n        json.location = this._location.getName();\n        json.children = this._children.map((child) => (child as TabNode).toJson());\n        return json;\n    }\n\n    /** @internal */\n    _getSplitterBounds(splitter: SplitterNode, useMinSize: boolean = false) {\n        const pBounds = [0, 0];\n        const minSize = useMinSize ? this.getMinSize() : 0;\n        const outerRect = this._model._getOuterInnerRects().outer;\n        const innerRect = this._model._getOuterInnerRects().inner;\n        const rootRow = this._model.getRoot();\n        if (this._location === DockLocation.TOP) {\n            pBounds[0] = outerRect.y + minSize;\n            pBounds[1] = Math.max(pBounds[0], innerRect.getBottom() - splitter.getHeight() - rootRow.getMinHeight());\n        } else if (this._location === DockLocation.LEFT) {\n            pBounds[0] = outerRect.x + minSize;\n            pBounds[1] = Math.max(pBounds[0], innerRect.getRight() - splitter.getWidth() - rootRow.getMinWidth());\n        } else if (this._location === DockLocation.BOTTOM) {\n            pBounds[1] = outerRect.getBottom() - splitter.getHeight() - minSize;\n            pBounds[0] = Math.min(pBounds[1], innerRect.y + rootRow.getMinHeight());\n        } else if (this._location === DockLocation.RIGHT) {\n            pBounds[1] = outerRect.getRight() - splitter.getWidth() - minSize;\n            pBounds[0] = Math.min(pBounds[1], innerRect.x + rootRow.getMinWidth());\n        }\n        return pBounds;\n    }\n\n    /** @internal */\n    _calculateSplit(splitter: SplitterNode, splitterPos: number) {\n        const pBounds = this._getSplitterBounds(splitter);\n        if (this._location === DockLocation.BOTTOM || this._location === DockLocation.RIGHT) {\n            return Math.max(0, pBounds[1] - splitterPos);\n        } else {\n            return Math.max(0, splitterPos - pBounds[0]);\n        }\n    }\n\n    /** @internal */\n    _getAttributeDefinitions() {\n        return BorderNode._attributeDefinitions;\n    }\n\n    /** @internal */\n    static getAttributeDefinitions() {\n        return BorderNode._attributeDefinitions;\n    }\n\n}\n","export enum I18nLabel {\n    Close_Tab = \"Close\",\n    Close_Tabset = \"Close tabset\",\n    Move_Tab = \"Move: \", // no longer used\n    Move_Tabset = \"Move tabset\",\n    Maximize = \"Maximize tabset\",\n    Restore = \"Restore tabset\",\n    Float_Tab = \"Show selected tab in floating window\",\n    Overflow_Menu_Tooltip = \"Hidden tabs\",\n    Floating_Window_Message = \"This panel is shown in a floating window\",\n    Floating_Window_Show_Window = \"Show window\",\n    Floating_Window_Dock_Window = \"Dock window\",\n    Error_rendering_component = \"Error rendering component\",\n}\n","export enum ICloseType {\n    Visible = 1, // close if selected or hovered, i.e. when x is visible (will only close selected on mobile, where css hover is not available)\n    Always = 2, // close always (both selected and unselected when x rect tapped e.g where a custom image has been added for close)\n    Selected = 3, // close only if selected\n}\n","import * as React from \"react\";\nimport { TabNode } from \"../model/TabNode\";\nimport { IconFactory, ILayoutCallbacks, ITitleObject, TitleFactory } from \"./Layout\";\n\n/** @internal */\nexport function getRenderStateEx(\n    layout: ILayoutCallbacks,\n    node: TabNode,\n    iconFactory?: IconFactory,\n    titleFactory?: TitleFactory\n) {\n    let leadingContent = iconFactory ? iconFactory(node) : undefined;\n    let titleContent: React.ReactNode = node.getName();\n    let name = node.getName();\n\n    function isTitleObject(obj: any): obj is ITitleObject {\n        return obj.titleContent !== undefined\n    }\n\n    if (titleFactory !== undefined) {\n        const titleObj = titleFactory(node);\n        if (titleObj !== undefined) {\n            if (typeof titleObj === \"string\") {\n                titleContent = titleObj as string;\n                name = titleObj as string;\n            } else if (isTitleObject(titleObj)) {\n                titleContent = titleObj.titleContent;\n                name = titleObj.name;\n            } else {\n                titleContent = titleObj;\n            }\n        }\n    }\n\n    if (leadingContent === undefined && node.getIcon() !== undefined) {\n        leadingContent = <img style={{ width: \"1em\", height: \"1em\" }} src={node.getIcon()} alt=\"leadingContent\" />;\n    }\n\n    let buttons: any[] = [];\n\n    // allow customization of leading contents (icon) and contents\n    const renderState = { leading: leadingContent, content: titleContent, name, buttons };\n    layout.customizeTab(node, renderState);\n\n    node._setRenderedName(renderState.name);\n\n    return renderState;\n\n}\n\n/** @internal */\nexport function hideElement(style: Record<string, any>, useVisibility: ConstrainBoolean) {\n    if (useVisibility) {\n        style.visibility = \"hidden\";\n    } else {\n        style.display = \"none\";\n    }\n}\n\n\n/** @internal */\nexport function isAuxMouseEvent(event: React.MouseEvent<HTMLDivElement, MouseEvent> | React.TouchEvent<HTMLDivElement>) {\n    let auxEvent = false;\n    if (event.nativeEvent instanceof MouseEvent) {\n        if (event.nativeEvent.button !== 0 || event.ctrlKey || event.altKey || event.metaKey || event.shiftKey) {\n            auxEvent = true;\n        }\n    }\n    return auxEvent;\n}\n\n","import * as React from \"react\";\nimport { I18nLabel } from \"../I18nLabel\";\nimport { Actions } from \"../model/Actions\";\nimport { TabNode } from \"../model/TabNode\";\nimport { Rect } from \"../Rect\";\nimport { IconFactory, IIcons, ILayoutCallbacks, TitleFactory } from \"./Layout\";\nimport { ICloseType } from \"../model/ICloseType\";\nimport { CLASSES } from \"../Types\";\nimport { getRenderStateEx, isAuxMouseEvent } from \"./Utils\";\n\n/** @internal */\nexport interface IBorderButtonProps {\n    layout: ILayoutCallbacks;\n    node: TabNode;\n    selected: boolean;\n    border: string;\n    iconFactory?: IconFactory;\n    titleFactory?: TitleFactory;\n    icons: IIcons;\n    path: string;\n}\n\n/** @internal */\nexport const BorderButton = (props: IBorderButtonProps) => {\n    const { layout, node, selected, border, iconFactory, titleFactory, icons, path } = props;\n    const selfRef = React.useRef<HTMLDivElement | null>(null);\n    const contentRef = React.useRef<HTMLInputElement | null>(null);\n\n    const onMouseDown = (event: React.MouseEvent<HTMLDivElement, MouseEvent> | React.TouchEvent<HTMLDivElement>) => {\n\n        if (!isAuxMouseEvent(event) && !layout.getEditingTab()) {\n            layout.dragStart(event, undefined, node, node.isEnableDrag(), onClick, onDoubleClick);\n        }\n    };\n\n    const onAuxMouseClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        if (isAuxMouseEvent(event)) {\n            layout.auxMouseClick(node, event);\n        }\n    };\n\n    const onContextMenu = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        layout.showContextMenu(node, event);\n    };\n\n    const onClick = () => {\n        layout.doAction(Actions.selectTab(node.getId()));\n    };\n\n    const onDoubleClick = (event: Event) => {\n        // if (node.isEnableRename()) {\n        //     onRename();\n        // }\n    };\n\n    // const onRename = () => {\n    //     layout.setEditingTab(node);\n    //     layout.getCurrentDocument()!.body.addEventListener(\"mousedown\", onEndEdit);\n    //     layout.getCurrentDocument()!.body.addEventListener(\"touchstart\", onEndEdit);\n    // };\n\n    const onEndEdit = (event: Event) => {\n        if (event.target !== contentRef.current!) {\n            layout.getCurrentDocument()!.body.removeEventListener(\"mousedown\", onEndEdit);\n            layout.getCurrentDocument()!.body.removeEventListener(\"touchstart\", onEndEdit);\n            layout.setEditingTab(undefined);\n        }\n    };\n\n    const isClosable = () => {\n        const closeType = node.getCloseType();\n        if (selected || closeType === ICloseType.Always) {\n            return true;\n        }\n        if (closeType === ICloseType.Visible) {\n            // not selected but x should be visible due to hover\n            if (window.matchMedia && window.matchMedia(\"(hover: hover) and (pointer: fine)\").matches) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    const onClose = (event: React.MouseEvent<HTMLDivElement>) => {\n        if (isClosable()) {\n            layout.doAction(Actions.deleteTab(node.getId()));\n        } else {\n            onClick();\n        }\n    };\n\n    const onCloseMouseDown = (event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>) => {\n        event.stopPropagation();\n    };\n\n    React.useLayoutEffect(() => {\n        updateRect();\n        if (layout.getEditingTab() === node) {\n            (contentRef.current! as HTMLInputElement).select();\n        }\n    });\n\n    const updateRect = () => {\n        // record position of tab in node\n        const layoutRect = layout.getDomRect();\n        const r = selfRef.current!.getBoundingClientRect();\n        node._setTabRect(new Rect(r.left - layoutRect.left, r.top - layoutRect.top, r.width, r.height));\n    };\n\n    const onTextBoxMouseDown = (event: React.MouseEvent<HTMLInputElement> | React.TouchEvent<HTMLInputElement>) => {\n        // console.log(\"onTextBoxMouseDown\");\n        event.stopPropagation();\n    };\n\n    const onTextBoxKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        // console.log(event, event.keyCode);\n        if (event.keyCode === 27) {\n            // esc\n            layout.setEditingTab(undefined);\n        } else if (event.keyCode === 13) {\n            // enter\n            layout.setEditingTab(undefined);\n            layout.doAction(Actions.renameTab(node.getId(), (event.target as HTMLInputElement).value));\n        }\n    };\n\n    const cm = layout.getClassName;\n    let classNames = cm(CLASSES.FLEXLAYOUT__BORDER_BUTTON) + \" \" + cm(CLASSES.FLEXLAYOUT__BORDER_BUTTON_ + border);\n\n    if (selected) {\n        classNames += \" \" + cm(CLASSES.FLEXLAYOUT__BORDER_BUTTON__SELECTED);\n    } else {\n        classNames += \" \" + cm(CLASSES.FLEXLAYOUT__BORDER_BUTTON__UNSELECTED);\n    }\n\n    if (node.getClassName() !== undefined) {\n        classNames += \" \" + node.getClassName();\n    }\n\n    const renderState = getRenderStateEx(layout, node, iconFactory, titleFactory);\n\n    let content = renderState.content ? (\n        <div className={cm(CLASSES.FLEXLAYOUT__BORDER_BUTTON_CONTENT)}>\n            {renderState.content}\n        </div>) : null;\n\n    const leading = renderState.leading ? (\n        <div className={cm(CLASSES.FLEXLAYOUT__BORDER_BUTTON_LEADING)}>\n            {renderState.leading}\n        </div>) : null;\n\n    if (layout.getEditingTab() === node) {\n        content = (\n            <input\n                ref={contentRef}\n                className={cm(CLASSES.FLEXLAYOUT__TAB_BUTTON_TEXTBOX)}\n                data-layout-path={path + \"/textbox\"}\n                type=\"text\"\n                autoFocus={true}\n                defaultValue={node.getName()}\n                onKeyDown={onTextBoxKeyPress}\n                onMouseDown={onTextBoxMouseDown}\n                onTouchStart={onTextBoxMouseDown}\n            />\n        );\n    }\n\n    if (node.isEnableClose()) {\n        const closeTitle = layout.i18nName(I18nLabel.Close_Tab);\n        renderState.buttons.push(\n            <div\n                key=\"close\"\n                data-layout-path={path + \"/button/close\"}\n                title={closeTitle}\n                className={cm(CLASSES.FLEXLAYOUT__BORDER_BUTTON_TRAILING)}\n                onMouseDown={onCloseMouseDown}\n                onClick={onClose}\n                onTouchStart={onCloseMouseDown}>\n                {(typeof icons.close === \"function\") ? icons.close(node) : icons.close}\n            </div>\n        );\n    }\n\n    return (\n        <div\n            ref={selfRef}\n            data-layout-path={path}\n            className={classNames}\n            onMouseDown={onMouseDown}\n            onClick={onAuxMouseClick}\n            onAuxClick={onAuxMouseClick}\n            onContextMenu={onContextMenu}\n            onTouchStart={onMouseDown}\n            title={node.getHelpText()}\n        >\n            {leading}\n            {content}\n            {renderState.buttons}\n        </div>\n    );\n};\n","import * as React from \"react\";\nimport { TabNode } from \"../model/TabNode\";\nimport { IconFactory, ILayoutCallbacks, TitleFactory } from \"./Layout\";\nimport { CLASSES } from \"../Types\";\nimport { getRenderStateEx } from \"./Utils\";\n\n/** @internal */\nexport interface ITabButtonStampProps {\n    node: TabNode;\n    layout: ILayoutCallbacks;\n    iconFactory?: IconFactory;\n    titleFactory?: TitleFactory;\n}\n\n/** @internal */\nexport const TabButtonStamp = (props: ITabButtonStampProps) => {\n    const { layout, node, iconFactory, titleFactory } = props;\n    const selfRef = React.useRef<HTMLDivElement | null>(null);\n\n    const cm = layout.getClassName;\n\n    let classNames = cm(CLASSES.FLEXLAYOUT__TAB_BUTTON_STAMP);\n\n    const renderState = getRenderStateEx(layout, node, iconFactory, titleFactory);\n\n    let content = renderState.content ? (\n        <div className={cm(CLASSES.FLEXLAYOUT__TAB_BUTTON_CONTENT)}>\n            {renderState.content}\n        </div>)\n        : node._getNameForOverflowMenu();\n\n    const leading = renderState.leading ? (\n        <div className={cm(CLASSES.FLEXLAYOUT__TAB_BUTTON_LEADING)}>\n            {renderState.leading}\n        </div>) : null;\n\n    return (\n        <div\n            ref={selfRef}\n            className={classNames}\n            title={node.getHelpText()}\n        >\n            {leading}\n            {content}\n        </div>\n    );\n};\n","import * as React from \"react\";\nimport { DragDrop } from \"./DragDrop\";\nimport { TabNode } from \"./model/TabNode\";\nimport { CLASSES } from \"./Types\";\nimport { IconFactory, ILayoutCallbacks, TitleFactory } from \"./view/Layout\";\nimport { TabButtonStamp } from \"./view/TabButtonStamp\";\n\n/** @internal */\nexport function showPopup(\n    triggerElement: Element,\n    items: { index: number; node: TabNode }[],\n    onSelect: (item: { index: number; node: TabNode }) => void,\n    layout: ILayoutCallbacks,\n    iconFactory?: IconFactory,\n    titleFactory?: TitleFactory,\n) {\n    const layoutDiv = layout.getRootDiv();\n    const classNameMapper = layout.getClassName;\n    const currentDocument = triggerElement.ownerDocument;\n    const triggerRect = triggerElement.getBoundingClientRect();\n    const layoutRect = layoutDiv.getBoundingClientRect();\n\n    const elm = currentDocument.createElement(\"div\");\n    elm.className = classNameMapper(CLASSES.FLEXLAYOUT__POPUP_MENU_CONTAINER);\n    if (triggerRect.left < layoutRect.left + layoutRect.width / 2) {\n        elm.style.left = triggerRect.left - layoutRect.left + \"px\";\n    } else {\n        elm.style.right = layoutRect.right - triggerRect.right + \"px\";\n    }\n\n    if (triggerRect.top < layoutRect.top + layoutRect.height / 2) {\n        elm.style.top = triggerRect.top - layoutRect.top + \"px\";\n    } else {\n        elm.style.bottom = layoutRect.bottom - triggerRect.bottom + \"px\";\n    }\n    DragDrop.instance.addGlass(() => onHide());\n    DragDrop.instance.setGlassCursorOverride(\"default\");\n\n    layoutDiv.appendChild(elm);\n\n    const onHide = () => {\n        layout.hidePortal();\n        DragDrop.instance.hideGlass();\n        layoutDiv.removeChild(elm);\n        elm.removeEventListener(\"mousedown\", onElementMouseDown);\n        currentDocument.removeEventListener(\"mousedown\", onDocMouseDown);\n    };\n\n    const onElementMouseDown = (event: Event) => {\n        event.stopPropagation();\n    };\n\n    const onDocMouseDown = (event: Event) => {\n        onHide();\n    };\n\n    elm.addEventListener(\"mousedown\", onElementMouseDown);\n    currentDocument.addEventListener(\"mousedown\", onDocMouseDown);\n\n    layout.showPortal(<PopupMenu\n        currentDocument={currentDocument}\n        onSelect={onSelect}\n        onHide={onHide}\n        items={items}\n        classNameMapper={classNameMapper}\n        layout={layout}\n        iconFactory={iconFactory}\n        titleFactory={titleFactory}\n    />, elm);\n}\n\n/** @internal */\ninterface IPopupMenuProps {\n    items: { index: number; node: TabNode }[];\n    currentDocument: Document;\n    onHide: () => void;\n    onSelect: (item: { index: number; node: TabNode }) => void;\n    classNameMapper: (defaultClassName: string) => string;\n    layout: ILayoutCallbacks;\n    iconFactory?: IconFactory;\n    titleFactory?: TitleFactory;\n}\n\n/** @internal */\nconst PopupMenu = (props: IPopupMenuProps) => {\n    const { items, onHide, onSelect, classNameMapper, layout, iconFactory, titleFactory} = props;\n\n    const onItemClick = (item: { index: number; node: TabNode }, event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        onSelect(item);\n        onHide();\n        event.stopPropagation();\n    };\n\n    const itemElements = items.map((item, i) => (\n        <div key={item.index}\n            className={classNameMapper(CLASSES.FLEXLAYOUT__POPUP_MENU_ITEM)}\n            data-layout-path={\"/popup-menu/tb\" + i}\n            onClick={(event) => onItemClick(item, event)}\n            title={item.node.getHelpText()} >\n            {item.node.getModel().isLegacyOverflowMenu() ? \n            item.node._getNameForOverflowMenu() :\n            <TabButtonStamp \n                node={item.node}\n                layout={layout}\n                iconFactory={iconFactory}\n                titleFactory={titleFactory}\n            />}\n        </div>\n    ));\n\n    return (\n        <div className={classNameMapper(CLASSES.FLEXLAYOUT__POPUP_MENU)}\n        data-layout-path=\"/popup-menu\"\n        >\n            {itemElements}\n        </div>);\n};\n","import * as React from \"react\";\nimport { TabNode } from \"../model/TabNode\";\nimport { Rect } from \"../Rect\";\nimport { TabSetNode } from \"../model/TabSetNode\";\nimport { BorderNode } from \"../model/BorderNode\";\nimport { Orientation } from \"../Orientation\";\n\n/** @internal */\nexport const useTabOverflow = (\n    node: TabSetNode | BorderNode,\n    orientation: Orientation,\n    toolbarRef: React.MutableRefObject<HTMLDivElement | null>,\n    stickyButtonsRef: React.MutableRefObject<HTMLDivElement | null>\n) => {\n    const firstRender = React.useRef<boolean>(true);\n    const tabsTruncated = React.useRef<boolean>(false);\n    const lastRect = React.useRef<Rect>(new Rect(0, 0, 0, 0));\n    const selfRef = React.useRef<HTMLDivElement | null>(null);\n\n    const [position, setPosition] = React.useState<number>(0);\n    const userControlledLeft = React.useRef<boolean>(false);\n    const [hiddenTabs, setHiddenTabs] = React.useState<{ node: TabNode; index: number }[]>([]);\n    const lastHiddenCount = React.useRef<number>(0);\n\n    // if selected node or tabset/border rectangle change then unset usercontrolled (so selected tab will be kept in view)\n    React.useLayoutEffect(() => {\n        userControlledLeft.current = false;\n    }, [node.getSelectedNode(), node.getRect().width, node.getRect().height]);\n\n    React.useLayoutEffect(() => {\n        updateVisibleTabs();\n    });\n\n    React.useEffect(() => {\n        const instance = selfRef.current!;\n        instance.addEventListener('wheel', onWheel, { passive: false });\n        return () => {\n            instance.removeEventListener('wheel', onWheel);\n        }\n    }, []);\n\n    // needed to prevent default mouse wheel over tabset/border (cannot do with react event?)\n    const onWheel = (event: Event) => {\n        event.preventDefault();\n    };\n\n    const getNear = (rect: Rect) => {\n        if (orientation === Orientation.HORZ) {\n            return rect.x;\n        } else {\n            return rect.y;\n        }\n    };\n\n    const getFar = (rect: Rect) => {\n        if (orientation === Orientation.HORZ) {\n            return rect.getRight();\n        } else {\n            return rect.getBottom();\n        }\n    };\n\n    const getSize = (rect: DOMRect | Rect) => {\n        if (orientation === Orientation.HORZ) {\n            return rect.width;\n        } else {\n            return rect.height;\n        }\n    };\n\n    const updateVisibleTabs = () => {\n        const tabMargin = 2;\n        if (firstRender.current === true) {\n            tabsTruncated.current = false;\n        }\n        const nodeRect = node instanceof TabSetNode ? node.getRect() : (node as BorderNode).getTabHeaderRect()!;\n        let lastChild = node.getChildren()[node.getChildren().length - 1] as TabNode;\n        const stickyButtonsSize = stickyButtonsRef.current === null ? 0 : getSize(stickyButtonsRef.current!.getBoundingClientRect());\n\n        if (\n            firstRender.current === true ||\n            (lastHiddenCount.current === 0 && hiddenTabs.length !== 0) ||\n            nodeRect.width !== lastRect.current.width || // incase rect changed between first render and second\n            nodeRect.height !== lastRect.current.height\n        ) {\n            lastHiddenCount.current = hiddenTabs.length;\n            lastRect.current = nodeRect;\n            const enabled = node instanceof TabSetNode ? node.isEnableTabStrip() === true : true;\n            let endPos = getFar(nodeRect) - stickyButtonsSize;\n            if (toolbarRef.current !== null) {\n                endPos -= getSize(toolbarRef.current.getBoundingClientRect());\n            }\n            if (enabled && node.getChildren().length > 0) {\n                if (hiddenTabs.length === 0 && position === 0 && getFar(lastChild.getTabRect()!) + tabMargin < endPos) {\n                    return; // nothing to do all tabs are shown in available space\n                }\n\n                let shiftPos = 0;\n\n                const selectedTab = node.getSelectedNode() as TabNode;\n                if (selectedTab && !userControlledLeft.current) {\n                    const selectedRect = selectedTab.getTabRect()!;\n                    const selectedStart = getNear(selectedRect) - tabMargin;\n                    const selectedEnd = getFar(selectedRect) + tabMargin;\n\n                    // when selected tab is larger than available space then align left\n                    if (getSize(selectedRect) + 2 * tabMargin >= endPos - getNear(nodeRect)) {\n                        shiftPos = getNear(nodeRect) - selectedStart;\n                    } else {\n                        if (selectedEnd > endPos || selectedStart < getNear(nodeRect)) {\n                            if (selectedStart < getNear(nodeRect)) {\n                                shiftPos = getNear(nodeRect) - selectedStart;\n                            }\n                            // use second if statement to prevent tab moving back then forwards if not enough space for single tab\n                            if (selectedEnd + shiftPos > endPos) {\n                                shiftPos = endPos - selectedEnd;\n                            }\n                        }\n                    }\n                }\n\n                const extraSpace = Math.max(0, endPos - (getFar(lastChild.getTabRect()!) + tabMargin + shiftPos));\n                const newPosition = Math.min(0, position + shiftPos + extraSpace);\n\n                // find hidden tabs\n                const diff = newPosition - position;\n                const hidden: { node: TabNode; index: number }[] = [];\n                for (let i = 0; i < node.getChildren().length; i++) {\n                    const child = node.getChildren()[i] as TabNode;\n                    if (getNear(child.getTabRect()!) + diff < getNear(nodeRect!) || getFar(child.getTabRect()!) + diff > endPos) {\n                        hidden.push({ node: child, index: i });\n                    }\n                }\n\n                if (hidden.length > 0) {\n                    tabsTruncated.current = true;\n                }\n\n                firstRender.current = false; // need to do a second render\n                setHiddenTabs(hidden);\n                setPosition(newPosition);\n            }\n        } else {\n            firstRender.current = true;\n        }\n    };\n\n    const onMouseWheel = (event: React.WheelEvent<HTMLDivElement>) => {\n        let delta = 0;\n        if (Math.abs(event.deltaX) > Math.abs(event.deltaY)) {\n            delta = -event.deltaX;\n        } else {\n            delta = -event.deltaY;\n        }\n        if (event.deltaMode === 1) {\n            // DOM_DELTA_LINE\t0x01\tThe delta values are specified in lines.\n            delta *= 40;\n        }\n        setPosition(position + delta);\n        userControlledLeft.current = true;\n        event.stopPropagation();\n    };\n\n    return { selfRef, position, userControlledLeft, hiddenTabs, onMouseWheel, tabsTruncated: tabsTruncated.current };\n};\n","import * as React from \"react\";\nimport { DockLocation } from \"../DockLocation\";\nimport { BorderNode } from \"../model/BorderNode\";\nimport { TabNode } from \"../model/TabNode\";\nimport { BorderButton } from \"./BorderButton\";\nimport { IIcons, ILayoutCallbacks, ITitleObject } from \"./Layout\";\nimport { showPopup } from \"../PopupMenu\";\nimport { Actions } from \"../model/Actions\";\nimport { I18nLabel } from \"../I18nLabel\";\nimport { useTabOverflow } from \"./TabOverflowHook\";\nimport { Orientation } from \"../Orientation\";\nimport { CLASSES } from \"../Types\";\nimport { isAuxMouseEvent } from \"./Utils\";\n\n/** @internal */\nexport interface IBorderTabSetProps {\n    border: BorderNode;\n    layout: ILayoutCallbacks;\n    iconFactory?: (node: TabNode) => (React.ReactNode | undefined);\n    titleFactory?: (node: TabNode) => (ITitleObject | React.ReactNode | undefined);\n    icons: IIcons;\n    path: string;\n}\n\n/** @internal */\nexport const BorderTabSet = (props: IBorderTabSetProps) => {\n    const { border, layout, iconFactory, titleFactory, icons, path } = props;\n\n    const toolbarRef = React.useRef<HTMLDivElement | null>(null);\n    const overflowbuttonRef = React.useRef<HTMLButtonElement | null>(null);\n    const stickyButtonsRef = React.useRef<HTMLDivElement | null>(null);\n\n    const { selfRef, position, userControlledLeft, hiddenTabs, onMouseWheel } = useTabOverflow(border, Orientation.flip(border.getOrientation()), toolbarRef, stickyButtonsRef);\n\n    const onAuxMouseClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        if (isAuxMouseEvent(event)) {\n            layout.auxMouseClick(border, event);\n        }\n    };\n\n    const onContextMenu = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        layout.showContextMenu(border, event);\n    };\n\n    const onInterceptMouseDown = (event: React.MouseEvent<HTMLDivElement, MouseEvent> | React.MouseEvent<HTMLButtonElement, MouseEvent> | React.TouchEvent<HTMLButtonElement>) => {\n        event.stopPropagation();\n    };\n\n    const onOverflowClick = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        const callback = layout.getShowOverflowMenu();\n        if (callback !== undefined) {\n            callback(border, event, hiddenTabs, onOverflowItemSelect);\n        } else {\n            const element = overflowbuttonRef.current!;\n            showPopup(element,\n                hiddenTabs,\n                onOverflowItemSelect,\n                layout,\n                iconFactory,\n                titleFactory);\n        }\n        event.stopPropagation();\n    };\n\n    const onOverflowItemSelect = (item: { node: TabNode; index: number }) => {\n        layout.doAction(Actions.selectTab(item.node.getId()));\n        userControlledLeft.current = false;\n    };\n\n    const onFloatTab = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        const selectedTabNode = border.getChildren()[border.getSelected()] as TabNode;\n        if (selectedTabNode !== undefined) {\n            layout.doAction(Actions.floatTab(selectedTabNode.getId()));\n        }\n        event.stopPropagation();\n    };\n\n    const cm = layout.getClassName;\n\n    let style = border.getTabHeaderRect()!.styleWithPosition({});\n    const tabs: any = [];\n\n    const layoutTab = (i: number) => {\n        let isSelected = border.getSelected() === i;\n        let child = border.getChildren()[i] as TabNode;\n\n        tabs.push(\n            <BorderButton\n                layout={layout}\n                border={border.getLocation().getName()}\n                node={child}\n                path={path + \"/tb\" + i}\n                key={child.getId()}\n                selected={isSelected}\n                iconFactory={iconFactory}\n                titleFactory={titleFactory}\n                icons={icons}\n            />\n        );\n        if (i < border.getChildren().length-1) {\n            tabs.push(\n                <div key={\"divider\" + i} className={cm(CLASSES.FLEXLAYOUT__BORDER_TAB_DIVIDER)}></div>\n            );\n        }\n\n    };\n\n    for (let i = 0; i < border.getChildren().length; i++) {\n        layoutTab(i);\n    }\n\n    let borderClasses = cm(CLASSES.FLEXLAYOUT__BORDER) + \" \" + cm(CLASSES.FLEXLAYOUT__BORDER_ + border.getLocation().getName());\n    if (border.getClassName() !== undefined) {\n        borderClasses += \" \" + border.getClassName();\n    }\n\n    // allow customization of tabset right/bottom buttons\n    let buttons: any[] = [];\n    const renderState = { headerContent: undefined, buttons, stickyButtons: [], headerButtons: [] };\n    layout.customizeTabSet(border, renderState);\n    buttons = renderState.buttons;\n\n    let toolbar;\n\n    if (hiddenTabs.length > 0) {\n        const overflowTitle = layout.i18nName(I18nLabel.Overflow_Menu_Tooltip);\n        let overflowContent;\n        if (typeof icons.more === \"function\") {\n            overflowContent = icons.more(border, hiddenTabs);\n        } else {\n            overflowContent = (<>\n                {icons.more}\n                <div className={cm(CLASSES.FLEXLAYOUT__TAB_BUTTON_OVERFLOW_COUNT)}>{hiddenTabs.length}</div>\n            </>);\n        }\n        buttons.push(\n            <button\n                key=\"overflowbutton\"\n                ref={overflowbuttonRef}\n                className={cm(CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON) + \" \" + cm(CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_OVERFLOW) + \" \" + cm(CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_OVERFLOW_ + border.getLocation().getName())}\n                title={overflowTitle}\n                onClick={onOverflowClick}\n                onMouseDown={onInterceptMouseDown}\n                onTouchStart={onInterceptMouseDown}\n            >\n                {overflowContent}\n            </button>\n        );\n    }\n\n    const selectedIndex = border.getSelected();\n    if (selectedIndex !== -1) {\n        const selectedTabNode = border.getChildren()[selectedIndex] as TabNode;\n        if (selectedTabNode !== undefined && layout.isSupportsPopout() && selectedTabNode.isEnableFloat() && !selectedTabNode.isFloating()) {\n            const floatTitle = layout.i18nName(I18nLabel.Float_Tab);\n            buttons.push(\n                <button\n                    key=\"float\"\n                    title={floatTitle}\n                    className={cm(CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON) + \" \" + cm(CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_BUTTON_FLOAT)}\n                    onClick={onFloatTab}\n                    onMouseDown={onInterceptMouseDown}\n                    onTouchStart={onInterceptMouseDown}\n                >\n                    {(typeof icons.popout === \"function\") ? icons.popout(selectedTabNode) : icons.popout}\n                </button>\n            );\n        }\n    }\n    toolbar = (\n        <div key=\"toolbar\" ref={toolbarRef} className={cm(CLASSES.FLEXLAYOUT__BORDER_TOOLBAR) + \" \" + cm(CLASSES.FLEXLAYOUT__BORDER_TOOLBAR_ + border.getLocation().getName())}>\n            {buttons}\n        </div>\n    );\n\n    style = layout.styleFont(style);\n\n    let innerStyle = {};\n    const borderHeight = border.getBorderBarSize() - 1;\n    if (border.getLocation() === DockLocation.LEFT) {\n        innerStyle = { right: borderHeight, height: borderHeight, top: position };\n    } else if (border.getLocation() === DockLocation.RIGHT) {\n        innerStyle = { left: borderHeight, height: borderHeight, top: position };\n    } else {\n        innerStyle = { height: borderHeight, left: position };\n    }\n\n    return (\n        <div ref={selfRef} dir=\"ltr\" style={style} className={borderClasses}\n            data-layout-path={path}\n            onClick={onAuxMouseClick}\n            onAuxClick={onAuxMouseClick}\n            onContextMenu={onContextMenu}\n            onWheel={onMouseWheel}>\n            <div style={{ height: borderHeight }} className={cm(CLASSES.FLEXLAYOUT__BORDER_INNER) + \" \" + cm(CLASSES.FLEXLAYOUT__BORDER_INNER_ + border.getLocation().getName())}>\n                <div style={innerStyle} className={cm(CLASSES.FLEXLAYOUT__BORDER_INNER_TAB_CONTAINER) + \" \" + cm(CLASSES.FLEXLAYOUT__BORDER_INNER_TAB_CONTAINER_ + border.getLocation().getName())}>\n                    {tabs}\n                </div>\n            </div>\n            {toolbar}\n        </div>\n    );\n};\n","import * as React from \"react\";\nimport { DragDrop } from \"../DragDrop\";\nimport { Actions } from \"../model/Actions\";\nimport { BorderNode } from \"../model/BorderNode\";\nimport { Node } from \"../model/Node\";\nimport { RowNode } from \"../model/RowNode\";\nimport { SplitterNode } from \"../model/SplitterNode\";\nimport { Orientation } from \"../Orientation\";\nimport { CLASSES } from \"../Types\";\nimport { ILayoutCallbacks } from \"./Layout\";\n\n/** @internal */\nexport interface ISplitterProps {\n    layout: ILayoutCallbacks;\n    node: SplitterNode;\n    path: string;\n}\n\n/** @internal */\nexport const Splitter = (props: ISplitterProps) => {\n    const { layout, node, path } = props;\n\n    const pBounds = React.useRef<number[]>([]);\n    const outlineDiv = React.useRef<HTMLDivElement | undefined>(undefined);\n    const parentNode = node.getParent() as RowNode | BorderNode;\n\n    const onMouseDown = (event: Event | React.MouseEvent<HTMLDivElement, MouseEvent> | React.TouchEvent<HTMLDivElement>) => {\n        DragDrop.instance.setGlassCursorOverride(node.getOrientation() === Orientation.HORZ ? \"ns-resize\" : \"ew-resize\");\n        DragDrop.instance.startDrag(event, onDragStart, onDragMove, onDragEnd, onDragCancel, undefined, undefined, layout.getCurrentDocument(), layout.getRootDiv());\n        pBounds.current = parentNode._getSplitterBounds(node, true);\n        const rootdiv = layout.getRootDiv();\n        outlineDiv.current = layout.getCurrentDocument()!.createElement(\"div\");\n        outlineDiv.current.style.position = \"absolute\";\n        outlineDiv.current.className = layout.getClassName(CLASSES.FLEXLAYOUT__SPLITTER_DRAG);\n        outlineDiv.current.style.cursor = node.getOrientation() === Orientation.HORZ ? \"ns-resize\" : \"ew-resize\";\n        const r = node.getRect();\n        if (node.getOrientation() === Orientation.VERT && r.width < 2) {\n            r.width = 2;\n        } else if (node.getOrientation() === Orientation.HORZ && r.height < 2) {\n            r.height = 2;\n        }\n\n        r.positionElement(outlineDiv.current);\n        rootdiv.appendChild(outlineDiv.current);\n    };\n\n    const onDragCancel = (wasDragging: boolean) => {\n        const rootdiv = layout.getRootDiv();\n        rootdiv.removeChild(outlineDiv.current as Element);\n    };\n\n    const onDragStart = () => {\n        return true;\n    };\n\n    const onDragMove = (event: React.MouseEvent<Element, MouseEvent>) => {\n        const clientRect = layout.getDomRect();\n        const pos = {\n            x: event.clientX - clientRect.left,\n            y: event.clientY - clientRect.top,\n        };\n\n        if (outlineDiv) {\n            if (node.getOrientation() === Orientation.HORZ) {\n                outlineDiv.current!.style.top = getBoundPosition(pos.y - 4) + \"px\";\n            } else {\n                outlineDiv.current!.style.left = getBoundPosition(pos.x - 4) + \"px\";\n            }\n        }\n\n        if (layout.isRealtimeResize()) {\n            updateLayout();\n        }\n    };\n\n    const updateLayout = () => {\n        let value = 0;\n        if (outlineDiv) {\n            if (node.getOrientation() === Orientation.HORZ) {\n                value = outlineDiv.current!.offsetTop;\n            } else {\n                value = outlineDiv.current!.offsetLeft;\n            }\n        }\n\n        if (parentNode instanceof BorderNode) {\n            const pos = (parentNode as BorderNode)._calculateSplit(node, value);\n            layout.doAction(Actions.adjustBorderSplit((node.getParent() as Node).getId(), pos));\n        } else {\n            const splitSpec = parentNode._calculateSplit(node, value);\n            if (splitSpec !== undefined) {\n                layout.doAction(Actions.adjustSplit(splitSpec));\n            }\n        }\n    };\n\n    const onDragEnd = () => {\n        updateLayout();\n\n        const rootdiv = layout.getRootDiv();\n        rootdiv.removeChild(outlineDiv.current as HTMLDivElement);\n    };\n\n    const getBoundPosition = (p: number) => {\n        const bounds = pBounds.current as number[];\n        let rtn = p;\n        if (p < bounds[0]) {\n            rtn = bounds[0];\n        }\n        if (p > bounds[1]) {\n            rtn = bounds[1];\n        }\n\n        return rtn;\n    };\n\n    const cm = layout.getClassName;\n    let r = node.getRect();\n    const style = r.styleWithPosition({\n        cursor: node.getOrientation() === Orientation.HORZ ? \"ns-resize\" : \"ew-resize\",\n    });\n    let className = cm(CLASSES.FLEXLAYOUT__SPLITTER) + \" \" + cm(CLASSES.FLEXLAYOUT__SPLITTER_ + node.getOrientation().getName());\n\n    if (parentNode instanceof BorderNode) {\n        className += \" \" + cm(CLASSES.FLEXLAYOUT__SPLITTER_BORDER);\n    } else {\n        if (node.getModel().getMaximizedTabset() !== undefined) {\n            style.display = \"none\";\n        }\n    }\n\n    const extra = node.getModel().getSplitterExtra();\n    if (extra === 0) {\n        return (<div\n            style={style}\n            data-layout-path={path}\n            className={className}\n            onTouchStart={onMouseDown}\n            onMouseDown={onMouseDown}>\n        </div>);\n    } else {\n        // add extended transparent div for hit testing\n        // extends forward only, so as not to interfere with scrollbars\n        let r2 = r.clone();\n        r2.x = 0;\n        r2.y = 0;\n        if (node.getOrientation() === Orientation.VERT) {\n            r2.width += extra;\n        } else {\n            r2.height += extra;\n        }\n        const style2 = r2.styleWithPosition({\n            cursor: node.getOrientation() === Orientation.HORZ ? \"ns-resize\" : \"ew-resize\"\n        });\n\n        const className2 = cm(CLASSES.FLEXLAYOUT__SPLITTER_EXTRA);\n\n        return (\n            <div\n                style={style}\n                data-layout-path={path}\n                className={className}>\n                <div\n                    style={style2}\n                    className={className2}\n                    onTouchStart={onMouseDown}\n                    onMouseDown={onMouseDown}>\n                </div>\n            </div>);\n    }\n\n};\n","import * as React from \"react\";\nimport { ErrorInfo } from \"react\";\nimport { CLASSES } from \"../Types\";\n\n/** @internal */\nexport interface IErrorBoundaryProps {\n    message: string;\n    children: React.ReactNode;\n}\n/** @internal */\nexport interface IErrorBoundaryState {\n    hasError: boolean;\n}\n\n/** @internal */\nexport class ErrorBoundary extends React.Component<IErrorBoundaryProps, IErrorBoundaryState> {\n    constructor(props: IErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    static getDerivedStateFromError(error: Error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n        console.debug(error);\n        console.debug(errorInfo);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <div className={CLASSES.FLEXLAYOUT__ERROR_BOUNDARY_CONTAINER}>\n                    <div className={CLASSES.FLEXLAYOUT__ERROR_BOUNDARY_CONTENT}>{this.props.message}</div>\n                </div>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n","import * as React from \"react\";\nimport { Fragment } from \"react\";\nimport { Actions } from \"../model/Actions\";\nimport { TabNode } from \"../model/TabNode\";\nimport { TabSetNode } from \"../model/TabSetNode\";\nimport { CLASSES } from \"../Types\";\nimport { ILayoutCallbacks } from \"./Layout\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { I18nLabel } from \"../I18nLabel\";\nimport { BorderNode } from \"../model/BorderNode\";\nimport { hideElement } from \"./Utils\";\n\n/** @internal */\nexport interface ITabProps {\n    layout: ILayoutCallbacks;\n    selected: boolean;\n    node: TabNode;\n    factory: (node: TabNode) => React.ReactNode;\n    path: string;\n}\n\n/** @internal */\nexport const Tab = (props: ITabProps) => {\n    const { layout, selected, node, factory, path } = props;\n    const [renderComponent, setRenderComponent] = React.useState<boolean>(!props.node.isEnableRenderOnDemand() || props.selected);\n\n    React.useLayoutEffect(() => {\n        if (!renderComponent && selected) {\n            // load on demand\n            // console.log(\"load on demand: \" + node.getName());\n            setRenderComponent(true);\n        }\n    });\n\n    const onMouseDown = () => {\n        const parent = node.getParent() as TabSetNode;\n        if (parent.getType() === TabSetNode.TYPE) {\n            if (!parent.isActive()) {\n                layout.doAction(Actions.setActiveTabset(parent.getId()));\n            }\n        }\n    };\n\n    const cm = layout.getClassName;\n    const useVisibility = node.getModel().isUseVisibility();\n\n    const parentNode = node.getParent() as TabSetNode | BorderNode;\n    const style: Record<string, any> = node._styleWithPosition();\n    if (!selected) {\n        hideElement(style, useVisibility);\n    }\n\n    if (parentNode instanceof TabSetNode) {\n        if (node.getModel().getMaximizedTabset() !== undefined && !parentNode.isMaximized()) {\n            hideElement(style, useVisibility);\n        }\n    }\n\n    let child;\n    if (renderComponent) {\n        child = factory(node);\n    }\n\n    let className = cm(CLASSES.FLEXLAYOUT__TAB);\n    if (parentNode instanceof BorderNode) {\n        className += \" \" + cm(CLASSES.FLEXLAYOUT__TAB_BORDER);\n        className += \" \" + cm(CLASSES.FLEXLAYOUT__TAB_BORDER_ + parentNode.getLocation().getName());\n    }\n\n    return (\n        <div\n            className={className}\n            data-layout-path={path}\n            onMouseDown={onMouseDown}\n            onTouchStart={onMouseDown}\n            style={style}>\n            <ErrorBoundary message={props.layout.i18nName(I18nLabel.Error_rendering_component)}>\n                <Fragment>{child}</Fragment>\n            </ErrorBoundary>\n        </div>\n    );\n};\n\n\n","import * as React from \"react\";\nimport { I18nLabel } from \"../I18nLabel\";\nimport { Actions } from \"../model/Actions\";\nimport { TabNode } from \"../model/TabNode\";\nimport { TabSetNode } from \"../model/TabSetNode\";\nimport { Rect } from \"../Rect\";\nimport { IconFactory, IIcons, ILayoutCallbacks, TitleFactory } from \"./Layout\";\nimport { ICloseType } from \"../model/ICloseType\";\nimport { CLASSES } from \"../Types\";\nimport { getRenderStateEx, isAuxMouseEvent } from \"./Utils\";\n\n/** @internal */\nexport interface ITabButtonProps {\n    layout: ILayoutCallbacks;\n    node: TabNode;\n    selected: boolean;\n    iconFactory?: IconFactory;\n    titleFactory?: TitleFactory;\n    icons: IIcons;\n    path: string;\n}\n\n/** @internal */\nexport const TabButton = (props: ITabButtonProps) => {\n    const { layout, node, selected, iconFactory, titleFactory, icons, path } = props;\n    const selfRef = React.useRef<HTMLDivElement | null>(null);\n    const contentRef = React.useRef<HTMLInputElement | null>(null);\n\n    const onMouseDown = (event: React.MouseEvent<HTMLDivElement, MouseEvent> | React.TouchEvent<HTMLDivElement>) => {\n\n        if (!isAuxMouseEvent(event) && !layout.getEditingTab()) {\n            layout.dragStart(event, undefined, node, node.isEnableDrag(), onClick, onDoubleClick);\n        }\n    };\n\n    const onAuxMouseClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        if (isAuxMouseEvent(event)) {\n            layout.auxMouseClick(node, event);\n        }\n    };\n\n    const onContextMenu = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        layout.showContextMenu(node, event);\n    };\n\n    const onClick = () => {\n        layout.doAction(Actions.selectTab(node.getId()));\n    };\n\n    const onDoubleClick = (event: Event) => {\n        if (node.isEnableRename()) {\n            onRename();\n        }\n    };\n\n    const onRename = () => {\n        layout.setEditingTab(node);\n        layout.getCurrentDocument()!.body.addEventListener(\"mousedown\", onEndEdit);\n        layout.getCurrentDocument()!.body.addEventListener(\"touchstart\", onEndEdit);\n    };\n\n    const onEndEdit = (event: Event) => {\n        if (event.target !== contentRef.current!) {\n            layout.getCurrentDocument()!.body.removeEventListener(\"mousedown\", onEndEdit);\n            layout.getCurrentDocument()!.body.removeEventListener(\"touchstart\", onEndEdit);\n            layout.setEditingTab(undefined);\n        }\n    };\n\n    const isClosable = () => {\n        const closeType = node.getCloseType();\n        if (selected || closeType === ICloseType.Always) {\n            return true;\n        }\n        if (closeType === ICloseType.Visible) {\n            // not selected but x should be visible due to hover\n            if (window.matchMedia && window.matchMedia(\"(hover: hover) and (pointer: fine)\").matches) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    const onClose = (event: React.MouseEvent<HTMLDivElement>) => {\n        if (isClosable()) {\n            layout.doAction(Actions.deleteTab(node.getId()));\n        } else {\n            onClick();\n        }\n    };\n\n    const onCloseMouseDown = (event: React.MouseEvent<HTMLDivElement> | React.TouchEvent<HTMLDivElement>) => {\n        event.stopPropagation();\n    };\n\n    React.useLayoutEffect(() => {\n        updateRect();\n        if (layout.getEditingTab() === node) {\n            (contentRef.current! as HTMLInputElement).select();\n        }\n    });\n\n    const updateRect = () => {\n        // record position of tab in node\n        const layoutRect = layout.getDomRect();\n        const r = selfRef.current!.getBoundingClientRect();\n        node._setTabRect(new Rect(r.left - layoutRect.left, r.top - layoutRect.top, r.width, r.height));\n    };\n\n    const onTextBoxMouseDown = (event: React.MouseEvent<HTMLInputElement> | React.TouchEvent<HTMLInputElement>) => {\n        // console.log(\"onTextBoxMouseDown\");\n        event.stopPropagation();\n    };\n\n    const onTextBoxKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        // console.log(event, event.keyCode);\n        if (event.keyCode === 27) {\n            // esc\n            layout.setEditingTab(undefined);\n        } else if (event.keyCode === 13) {\n            // enter\n            layout.setEditingTab(undefined);\n            layout.doAction(Actions.renameTab(node.getId(), (event.target as HTMLInputElement).value));\n        }\n    };\n\n    const cm = layout.getClassName;\n    const parentNode = node.getParent() as TabSetNode;\n\n    let baseClassName = CLASSES.FLEXLAYOUT__TAB_BUTTON;\n    let classNames = cm(baseClassName);\n    classNames += \" \" + cm(baseClassName + \"_\" + parentNode.getTabLocation());\n\n    if (selected) {\n        classNames += \" \" + cm(baseClassName + \"--selected\");\n    } else {\n        classNames += \" \" + cm(baseClassName + \"--unselected\");\n    }\n\n    if (node.getClassName() !== undefined) {\n        classNames += \" \" + node.getClassName();\n    }\n\n    const renderState = getRenderStateEx(layout, node, iconFactory, titleFactory);\n\n    let content = renderState.content ? (\n        <div className={cm(CLASSES.FLEXLAYOUT__TAB_BUTTON_CONTENT)}>\n            {renderState.content}\n        </div>) : null;\n\n    const leading = renderState.leading ? (\n        <div className={cm(CLASSES.FLEXLAYOUT__TAB_BUTTON_LEADING)}>\n            {renderState.leading}\n        </div>) : null;\n\n    if (layout.getEditingTab() === node) {\n        content = (\n            <input\n                ref={contentRef}\n                className={cm(CLASSES.FLEXLAYOUT__TAB_BUTTON_TEXTBOX)}\n                data-layout-path={path + \"/textbox\"}\n                type=\"text\"\n                autoFocus={true}\n                defaultValue={node.getName()}\n                onKeyDown={onTextBoxKeyPress}\n                onMouseDown={onTextBoxMouseDown}\n                onTouchStart={onTextBoxMouseDown}\n            />\n        );\n    }\n\n    if (node.isEnableClose()) {\n        const closeTitle = layout.i18nName(I18nLabel.Close_Tab);\n        renderState.buttons.push(\n            <div\n                key=\"close\"\n                data-layout-path={path + \"/button/close\"}\n                title={closeTitle}\n                className={cm(CLASSES.FLEXLAYOUT__TAB_BUTTON_TRAILING)}\n                onMouseDown={onCloseMouseDown}\n                onClick={onClose}\n                onTouchStart={onCloseMouseDown}>\n                {(typeof icons.close === \"function\") ? icons.close(node) : icons.close}\n            </div>\n        );\n    }\n\n    return (\n        <div\n            ref={selfRef}\n            data-layout-path={path}\n            className={classNames}\n            onMouseDown={onMouseDown}\n            onClick={onAuxMouseClick}\n            onAuxClick={onAuxMouseClick}\n            onContextMenu={onContextMenu}\n            onTouchStart={onMouseDown}\n            title={node.getHelpText()}\n        >\n            {leading}\n            {content}\n            {renderState.buttons}\n        </div>\n    );\n};\n","import * as React from \"react\";\nimport { I18nLabel } from \"../I18nLabel\";\nimport { Actions } from \"../model/Actions\";\nimport { TabNode } from \"../model/TabNode\";\nimport { TabSetNode } from \"../model/TabSetNode\";\nimport { showPopup } from \"../PopupMenu\";\nimport { IIcons, ILayoutCallbacks, ITitleObject } from \"./Layout\";\nimport { TabButton } from \"./TabButton\";\nimport { useTabOverflow } from \"./TabOverflowHook\";\nimport { Orientation } from \"../Orientation\";\nimport { CLASSES } from \"../Types\";\nimport { hideElement, isAuxMouseEvent } from \"./Utils\";\n\n/** @internal */\nexport interface ITabSetProps {\n    layout: ILayoutCallbacks;\n    node: TabSetNode;\n    iconFactory?: (node: TabNode) => (React.ReactNode | undefined);\n    titleFactory?: (node: TabNode) => (ITitleObject | React.ReactNode | undefined);\n    icons: IIcons;\n    editingTab?: TabNode;\n    path?: string;\n}\n\n/** @internal */\nexport const TabSet = (props: ITabSetProps) => {\n    const { node, layout, iconFactory, titleFactory, icons, path } = props;\n\n    const toolbarRef = React.useRef<HTMLDivElement | null>(null);\n    const overflowbuttonRef = React.useRef<HTMLButtonElement | null>(null);\n    const tabbarInnerRef = React.useRef<HTMLDivElement | null>(null);\n    const stickyButtonsRef = React.useRef<HTMLDivElement | null>(null);\n\n    const { selfRef, position, userControlledLeft, hiddenTabs, onMouseWheel, tabsTruncated } = useTabOverflow(node, Orientation.HORZ, toolbarRef, stickyButtonsRef);\n\n    const onOverflowClick = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        const callback = layout.getShowOverflowMenu();\n        if (callback !== undefined) {\n            callback(node, event, hiddenTabs, onOverflowItemSelect);\n        } else {\n            const element = overflowbuttonRef.current!;\n            showPopup(\n                element,\n                hiddenTabs,\n                onOverflowItemSelect,\n                layout,\n                iconFactory,\n                titleFactory,\n            );\n        }\n        event.stopPropagation();\n    };\n\n    const onOverflowItemSelect = (item: { node: TabNode; index: number }) => {\n        layout.doAction(Actions.selectTab(item.node.getId()));\n        userControlledLeft.current = false;\n    };\n\n    const onMouseDown = (event: React.MouseEvent<HTMLDivElement, MouseEvent> | React.TouchEvent<HTMLDivElement>) => {\n        if (!isAuxMouseEvent(event)) {\n            let name = node.getName();\n            if (name === undefined) {\n                name = \"\";\n            } else {\n                name = \": \" + name;\n            }\n            layout.doAction(Actions.setActiveTabset(node.getId()));\n            if (!layout.getEditingTab()) {\n                const message = layout.i18nName(I18nLabel.Move_Tabset, name);\n                if (node.getModel().getMaximizedTabset() !== undefined) {\n                    layout.dragStart(event, message, node, false, (event2: Event) => undefined, onDoubleClick);\n                } else {\n                    layout.dragStart(event, message, node, node.isEnableDrag(), (event2: Event) => undefined, onDoubleClick);\n                }\n            }\n        }\n    };\n\n    const onAuxMouseClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        if (isAuxMouseEvent(event)) {\n            layout.auxMouseClick(node, event);\n        }\n    };\n\n    const onContextMenu = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        layout.showContextMenu(node, event);\n    };\n\n    const onInterceptMouseDown = (event: React.MouseEvent | React.TouchEvent) => {\n        event.stopPropagation();\n    };\n\n    const onMaximizeToggle = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        if (node.canMaximize()) {\n            layout.maximize(node);\n        }\n        event.stopPropagation();\n    };\n\n    const onClose = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        layout.doAction(Actions.deleteTabset(node.getId()));\n        event.stopPropagation();\n    };\n\n    const onFloatTab = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        if (selectedTabNode !== undefined) {\n            layout.doAction(Actions.floatTab(selectedTabNode.getId()));\n        }\n        event.stopPropagation();\n    };\n\n    const onDoubleClick = (event: Event) => {\n        if (node.canMaximize()) {\n            layout.maximize(node);\n        }\n    };\n\n    // Start Render\n    const cm = layout.getClassName;\n\n    // tabbar inner can get shifted left via tab rename, this resets scrollleft to 0\n    if (tabbarInnerRef.current !== null && tabbarInnerRef.current!.scrollLeft !== 0) {\n        tabbarInnerRef.current.scrollLeft = 0;\n    }\n\n    const selectedTabNode: TabNode = node.getSelectedNode() as TabNode;\n    let style = node._styleWithPosition();\n\n    if (node.getModel().getMaximizedTabset() !== undefined && !node.isMaximized()) {\n        hideElement(style, node.getModel().isUseVisibility())\n    }\n\n    const tabs = [];\n    if (node.isEnableTabStrip()) {\n        for (let i = 0; i < node.getChildren().length; i++) {\n            const child = node.getChildren()[i] as TabNode;\n            let isSelected = node.getSelected() === i;\n            tabs.push(\n                <TabButton\n                    layout={layout}\n                    node={child}\n                    path={path + \"/tb\" + i}\n                    key={child.getId()}\n                    selected={isSelected}\n                    iconFactory={iconFactory}\n                    titleFactory={titleFactory}\n                    icons={icons}\n                />);\n                if (i < node.getChildren().length-1) {\n                    tabs.push(\n                        <div  key={\"divider\" + i} className={cm(CLASSES.FLEXLAYOUT__TABSET_TAB_DIVIDER)}></div>\n                    );\n                }\n        }\n    }\n\n    const showHeader = node.getName() !== undefined;\n    let stickyButtons: React.ReactNode[] = [];\n    let buttons: React.ReactNode[] = [];\n    let headerButtons: React.ReactNode[] = [];\n\n    // allow customization of header contents and buttons\n    const renderState = { headerContent: node.getName(), stickyButtons, buttons, headerButtons };\n    layout.customizeTabSet(node, renderState);\n    const headerContent = renderState.headerContent;\n    stickyButtons = renderState.stickyButtons;\n    buttons = renderState.buttons;\n    headerButtons = renderState.headerButtons;\n\n    if (stickyButtons.length > 0) {\n        if (tabsTruncated) {\n            buttons = [...stickyButtons, ...buttons];\n        } else {\n            tabs.push(<div\n                ref={stickyButtonsRef}\n                key=\"sticky_buttons_container\"\n                onMouseDown={onInterceptMouseDown}\n                onTouchStart={onInterceptMouseDown}\n                onDragStart={(e) => { e.preventDefault() }}\n                className={cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR_STICKY_BUTTONS_CONTAINER)}\n            >\n                {stickyButtons}\n            </div>);\n        }\n    }\n\n    let toolbar;\n    if (hiddenTabs.length > 0) {\n        const overflowTitle = layout.i18nName(I18nLabel.Overflow_Menu_Tooltip);\n        let overflowContent;\n        if (typeof icons.more === \"function\") {\n            overflowContent = icons.more(node, hiddenTabs);\n        } else {\n            overflowContent = (<>\n                {icons.more}\n                <div className={cm(CLASSES.FLEXLAYOUT__TAB_BUTTON_OVERFLOW_COUNT)}>{hiddenTabs.length}</div>\n            </>);\n        }\n        buttons.push(\n            <button\n                key=\"overflowbutton\"\n                data-layout-path={path + \"/button/overflow\"}\n\n                ref={overflowbuttonRef}\n                className={cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON) + \" \" + cm(CLASSES.FLEXLAYOUT__TAB_BUTTON_OVERFLOW)}\n                title={overflowTitle}\n                onClick={onOverflowClick}\n                onMouseDown={onInterceptMouseDown}\n                onTouchStart={onInterceptMouseDown}\n            >\n                {overflowContent}\n            </button>\n        );\n    }\n\n    if (selectedTabNode !== undefined && layout.isSupportsPopout() && selectedTabNode.isEnableFloat() && !selectedTabNode.isFloating()) {\n        const floatTitle = layout.i18nName(I18nLabel.Float_Tab);\n        buttons.push(\n            <button\n                key=\"float\"\n                data-layout-path={path + \"/button/float\"}\n                title={floatTitle}\n                className={cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON) + \" \" + cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON_FLOAT)}\n                onClick={onFloatTab}\n                onMouseDown={onInterceptMouseDown}\n                onTouchStart={onInterceptMouseDown}\n            >\n                {(typeof icons.popout === \"function\") ? icons.popout(selectedTabNode) : icons.popout}\n            </button>\n        );\n    }\n    if (node.canMaximize()) {\n        const minTitle = layout.i18nName(I18nLabel.Restore);\n        const maxTitle = layout.i18nName(I18nLabel.Maximize);\n        const btns = showHeader ? headerButtons : buttons;\n        btns.push(\n            <button\n                key=\"max\"\n                data-layout-path={path + \"/button/max\"}\n                title={node.isMaximized() ? minTitle : maxTitle}\n                className={cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON) + \" \" + cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON_ + (node.isMaximized() ? \"max\" : \"min\"))}\n                onClick={onMaximizeToggle}\n                onMouseDown={onInterceptMouseDown}\n                onTouchStart={onInterceptMouseDown}\n            >\n                {node.isMaximized() ?\n                    (typeof icons.restore === \"function\") ? icons.restore(node) : icons.restore :\n                    (typeof icons.maximize === \"function\") ? icons.maximize(node) : icons.maximize}\n            </button>\n        );\n    }\n\n    if (!node.isMaximized() && node.isEnableClose()) {\n        const title = layout.i18nName(I18nLabel.Close_Tabset);\n        const btns = showHeader ? headerButtons : buttons;\n        btns.push(\n            <button\n                key=\"close\"\n                data-layout-path={path + \"/button/close\"}\n                title={title}\n                className={cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON) + \" \" + cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR_BUTTON_CLOSE)}\n                onClick={onClose}\n                onMouseDown={onInterceptMouseDown}\n                onTouchStart={onInterceptMouseDown}\n            >\n                {(typeof icons.closeTabset === \"function\") ? icons.closeTabset(node) : icons.closeTabset}\n            </button>\n        );\n    }\n\n    toolbar = (\n        <div key=\"toolbar\" ref={toolbarRef}\n            className={cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR)}\n            onMouseDown={onInterceptMouseDown}\n            onTouchStart={onInterceptMouseDown}\n            onDragStart={(e) => { e.preventDefault() }}\n        >\n            {buttons}\n        </div>\n    );\n\n    let header;\n    let tabStrip;\n\n    let tabStripClasses = cm(CLASSES.FLEXLAYOUT__TABSET_TABBAR_OUTER);\n    if (node.getClassNameTabStrip() !== undefined) {\n        tabStripClasses += \" \" + node.getClassNameTabStrip();\n    }\n    tabStripClasses += \" \" + CLASSES.FLEXLAYOUT__TABSET_TABBAR_OUTER_ + node.getTabLocation();\n\n    if (node.isActive() && !showHeader) {\n        tabStripClasses += \" \" + cm(CLASSES.FLEXLAYOUT__TABSET_SELECTED);\n    }\n\n    if (node.isMaximized() && !showHeader) {\n        tabStripClasses += \" \" + cm(CLASSES.FLEXLAYOUT__TABSET_MAXIMIZED);\n    }\n\n    if (showHeader) {\n\n        const headerToolbar = (\n            <div key=\"toolbar\" ref={toolbarRef}\n                className={cm(CLASSES.FLEXLAYOUT__TAB_TOOLBAR)}\n                onMouseDown={onInterceptMouseDown}\n                onTouchStart={onInterceptMouseDown}\n                onDragStart={(e) => { e.preventDefault() }}\n            >\n                {headerButtons}\n            </div>\n        );\n\n        let tabHeaderClasses = cm(CLASSES.FLEXLAYOUT__TABSET_HEADER);\n        if (node.isActive()) {\n            tabHeaderClasses += \" \" + cm(CLASSES.FLEXLAYOUT__TABSET_SELECTED);\n        }\n        if (node.isMaximized()) {\n            tabHeaderClasses += \" \" + cm(CLASSES.FLEXLAYOUT__TABSET_MAXIMIZED);\n        }\n        if (node.getClassNameHeader() !== undefined) {\n            tabHeaderClasses += \" \" + node.getClassNameHeader();\n        }\n\n        header = (\n            <div className={tabHeaderClasses} style={{ height: node.getHeaderHeight() + \"px\" }}\n                data-layout-path={path + \"/header\"}\n                onMouseDown={onMouseDown}\n                onContextMenu={onContextMenu}\n                onClick={onAuxMouseClick}\n                onAuxClick={onAuxMouseClick}\n                onTouchStart={onMouseDown}>\n                <div className={cm(CLASSES.FLEXLAYOUT__TABSET_HEADER_CONTENT)}>{headerContent}</div>\n                {headerToolbar}\n            </div>\n        );\n    }\n\n    const tabStripStyle: { [key: string]: string } = { height: node.getTabStripHeight() + \"px\" };\n    tabStrip = (\n        <div className={tabStripClasses} style={tabStripStyle}\n            data-layout-path={path + \"/tabstrip\"}\n            onMouseDown={onMouseDown}\n            onContextMenu={onContextMenu}\n            onClick={onAuxMouseClick}\n            onAuxClick={onAuxMouseClick}\n            onTouchStart={onMouseDown}>\n            <div ref={tabbarInnerRef} className={cm(CLASSES.FLEXLAYOUT__TABSET_TABBAR_INNER) + \" \" + cm(CLASSES.FLEXLAYOUT__TABSET_TABBAR_INNER_ + node.getTabLocation())}>\n                <div\n                    style={{ left: position }}\n                    className={cm(CLASSES.FLEXLAYOUT__TABSET_TABBAR_INNER_TAB_CONTAINER) + \" \" + cm(CLASSES.FLEXLAYOUT__TABSET_TABBAR_INNER_TAB_CONTAINER_ + node.getTabLocation())}\n                >\n                    {tabs}\n                </div>\n            </div>\n            {toolbar}\n        </div>\n    );\n\n    style = layout.styleFont(style);\n\n    var placeHolder: React.ReactNode = undefined;\n    if (node.getChildren().length === 0) {\n        const placeHolderCallback = layout.getTabSetPlaceHolderCallback();\n        if (placeHolderCallback) {\n            placeHolder = placeHolderCallback(node);\n        }\n    }\n\n    const center = <div className={cm(CLASSES.FLEXLAYOUT__TABSET_CONTENT)}>\n        {placeHolder}\n    </div>\n\n    var content;\n    if (node.getTabLocation() === \"top\") {\n        content = <>{header}{tabStrip}{center}</>;\n    } else {\n        content = <>{header}{center}{tabStrip}</>;\n    }\n\n    return (\n        <div ref={selfRef}\n            dir=\"ltr\"\n            data-layout-path={path}\n            style={style}\n            className={cm(CLASSES.FLEXLAYOUT__TABSET)}\n            onWheel={onMouseWheel}>\n            {content}\n        </div>\n    );\n};\n\n\n","import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { Rect } from \"../Rect\";\nimport { CLASSES } from \"../Types\";\n\n/** @internal */\nexport interface IFloatingWindowProps {\n    title: string;\n    id: string;\n    url: string;\n    rect: Rect;\n    onCloseWindow: (id: string) => void;\n    onSetWindow: (id: string, window: Window) => void;\n}\n\ninterface IStyleSheet {\n    href: string | null;\n    type: string;\n    rules: string[] | null;\n}\n\n/** @internal */\nexport const FloatingWindow = (props: React.PropsWithChildren<IFloatingWindowProps>) => {\n    const { title, id, url, rect, onCloseWindow, onSetWindow, children } = props;\n    const popoutWindow = React.useRef<Window | null>(null);\n    const timerId = React.useRef<any>(null);\n    const [content, setContent] = React.useState<HTMLElement | undefined>(undefined);\n\n    React.useLayoutEffect(() => {\n        if (timerId.current) {\n            clearTimeout(timerId.current);\n        }\n        const r = rect;\n        // Make a local copy of the styles from the current window which will be passed into\n        // the floating window. window.document.styleSheets is mutable and we can't guarantee\n        // the styles will exist when 'popoutWindow.load' is called below.\n        const styles = Array.from(window.document.styleSheets).reduce((result, styleSheet) => {\n            let rules: CSSRuleList | undefined = undefined;\n            try {\n                rules = styleSheet.cssRules;\n            } catch (e) {\n                // styleSheet.cssRules can throw security exception\n            }\n\n            try {\n                return [\n                    ...result,\n                    {\n                        href: styleSheet.href,\n                        type: styleSheet.type,\n                        rules: rules ? Array.from(rules).map(rule => rule.cssText) : null,\n                    }\n                ];\n            } catch (e) {\n                return result;\n            }\n        }, [] as IStyleSheet[]);\n        popoutWindow.current = window.open(url, id, `left=${r.x},top=${r.y},width=${r.width},height=${r.height}`);\n        if (popoutWindow.current !== null) {\n            onSetWindow(id, popoutWindow.current);\n\n            // listen for parent unloading to remove all popouts\n            window.addEventListener(\"beforeunload\", () => {\n                if (popoutWindow.current) {\n                    popoutWindow.current.close();\n                    popoutWindow.current = null;\n                }\n            });\n\n            popoutWindow.current.addEventListener(\"load\", () => {\n                const popoutDocument = popoutWindow.current!.document;\n                popoutDocument.title = title;\n                const popoutContent = popoutDocument.createElement(\"div\");\n                popoutContent.className = CLASSES.FLEXLAYOUT__FLOATING_WINDOW_CONTENT;\n                popoutDocument.body.appendChild(popoutContent);\n                copyStyles(popoutDocument, styles).then(() => {\n                    setContent(popoutContent);\n                });\n\n                // listen for popout unloading (needs to be after load for safari)\n                popoutWindow.current!.addEventListener(\"beforeunload\", () => {\n                    onCloseWindow(id);\n                });\n            });\n        } else {\n            console.warn(`Unable to open window ${url}`);\n            onCloseWindow(id);\n        }\n\n        return () => {\n            // delay so refresh will close window\n            timerId.current = setTimeout(() => {\n                if (popoutWindow.current) {\n                    popoutWindow.current.close();\n                    popoutWindow.current = null;\n                }\n            }, 0);\n        };\n    }, []);\n\n    if (content !== undefined) {\n        return createPortal(children, content!);\n    } else {\n        return null;\n    }\n};\n\n/** @internal */\nfunction copyStyles(doc: Document, styleSheets: IStyleSheet[]): Promise<boolean[]> {\n    const head = doc.head;\n    const promises: Promise<boolean>[] = [];\n    for (const styleSheet of styleSheets) {\n        if (styleSheet.href) {\n            // prefer links since they will keep paths to images etc\n            const styleElement = doc.createElement(\"link\");\n            styleElement.type = styleSheet.type;\n            styleElement.rel = \"stylesheet\";\n            styleElement.href = styleSheet.href!;\n            head.appendChild(styleElement);\n            promises.push(\n                new Promise((resolve, reject) => {\n                    styleElement.onload = () => resolve(true);\n                })\n            );\n        } else {\n            if (styleSheet.rules) {\n                const style = doc.createElement(\"style\");\n                for (const rule of styleSheet.rules) {\n                    style.appendChild(doc.createTextNode(rule));\n                }\n                head.appendChild(style);\n            }\n        }\n    }\n    return Promise.all(promises);\n}\n","import * as React from \"react\";\nimport { TabNode } from \"../model/TabNode\";\nimport { ILayoutCallbacks } from \"./Layout\";\nimport { ErrorBoundary } from \"./ErrorBoundary\";\nimport { I18nLabel } from \"../I18nLabel\";\nimport { Fragment } from \"react\";\nimport { CLASSES } from \"../Types\";\n\n/** @internal */\nexport interface IFloatingWindowTabProps {\n    layout: ILayoutCallbacks;\n    node: TabNode;\n    factory: (node: TabNode) => React.ReactNode;\n}\n\n/** @internal */\nexport const FloatingWindowTab = (props: IFloatingWindowTabProps) => {\n    const { layout, node, factory } = props;\n    const cm = layout.getClassName;\n    const child = factory(node);\n\n    return (\n        <div className={cm(CLASSES.FLEXLAYOUT__FLOATING_WINDOW_TAB)}>\n            <ErrorBoundary message={props.layout.i18nName(I18nLabel.Error_rendering_component)}>\n                <Fragment>{child}</Fragment>\n            </ErrorBoundary>\n        </div>\n    );\n};\n","import * as React from \"react\";\nimport { Actions } from \"../model/Actions\";\nimport { TabNode } from \"../model/TabNode\";\nimport { TabSetNode } from \"../model/TabSetNode\";\nimport { CLASSES } from \"../Types\";\nimport { ILayoutCallbacks } from \"./Layout\";\nimport { I18nLabel } from \"../I18nLabel\";\nimport { hideElement } from \"./Utils\";\nimport { BorderNode } from \"../model/BorderNode\";\n\n/** @internal */\nexport interface ITabFloatingProps {\n    layout: ILayoutCallbacks;\n    selected: boolean;\n    node: TabNode;\n    path: string;\n}\n\n/** @internal */\nexport const TabFloating = (props: ITabFloatingProps) => {\n    const { layout, selected, node, path } = props;\n\n    const showPopout = () => {\n        if (node.getWindow()) {\n            node.getWindow()!.focus();\n        }\n    }\n\n    const dockPopout = () => {\n        layout.doAction(Actions.unFloatTab(node.getId()));\n    }\n\n    const onMouseDown = () => {\n        const parent = node.getParent() as TabSetNode;\n        if (parent.getType() === TabSetNode.TYPE) {\n            if (!parent.isActive()) {\n                layout.doAction(Actions.setActiveTabset(parent.getId()));\n            }\n        }\n    };\n\n    const onClickFocus = (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n        event.preventDefault();\n        showPopout();\n    };\n\n    const onClickDock = (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n        event.preventDefault();\n        dockPopout();\n    };\n\n    const cm = layout.getClassName;\n\n\n    const parentNode = node.getParent() as TabSetNode | BorderNode;\n    const style: Record<string, any> = node._styleWithPosition();\n    if (!selected) {\n        hideElement(style, node.getModel().isUseVisibility());\n    }\n\n    if (parentNode instanceof TabSetNode) {\n        if (node.getModel().getMaximizedTabset() !== undefined && !parentNode.isMaximized()) {\n            hideElement(style, node.getModel().isUseVisibility());\n        }\n    }\n\n    const message = layout.i18nName(I18nLabel.Floating_Window_Message);\n    const showMessage = layout.i18nName(I18nLabel.Floating_Window_Show_Window);\n    const dockMessage = layout.i18nName(I18nLabel.Floating_Window_Dock_Window);\n\n    const customRenderCallback = layout.getOnRenderFloatingTabPlaceholder();\n    if (customRenderCallback) {\n        return (\n            <div className={cm(CLASSES.FLEXLAYOUT__TAB_FLOATING)} onMouseDown={onMouseDown} onTouchStart={onMouseDown} style={style}>\n                {customRenderCallback(dockPopout, showPopout)}\n            </div>\n        );\n    } else {\n        return (\n            <div className={cm(CLASSES.FLEXLAYOUT__TAB_FLOATING)}\n                data-layout-path={path}\n                onMouseDown={onMouseDown}\n                onTouchStart={onMouseDown}\n                style={style}>\n                <div className={cm(CLASSES.FLEXLAYOUT__TAB_FLOATING_INNER)}>\n                    <div>{message}</div>\n                    <div>\n                        <a href=\"#\" onClick={onClickFocus}>\n                            {showMessage}\n                        </a>\n                    </div>\n                    <div>\n                        <a href=\"#\" onClick={onClickDock}>\n                            {dockMessage}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n","import * as React from \"react\";\n\nconst style = { width: \"1em\", height: \"1em\", display: \"flex\", alignItems: \"center\" };\n\nexport const CloseIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={style} viewBox=\"0 0 24 24\" >\n            <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n            <path stroke=\"var(--color-icon)\" fill=\"var(--color-icon)\" d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n        </svg>\n    );\n}\n\nexport const MaximizeIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={style} viewBox=\"0 0 24 24\" fill=\"var(--color-icon)\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path stroke=\"var(--color-icon)\" d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\" /></svg>\n    );\n}\n\nexport const OverflowIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={style} viewBox=\"0 0 24 24\" fill=\"var(--color-icon)\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path stroke=\"var(--color-icon)\" d=\"M7 10l5 5 5-5z\" /></svg>\n    );\n}\n\nexport const PopoutIcon = () => {\n    return (\n        // <svg xmlns=\"http://www.w3.org/2000/svg\"  style={style}  viewBox=\"0 0 24 24\" fill=\"var(--color-icon)\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path stroke=\"var(--color-icon)\" d=\"M9 5v2h6.59L4 18.59 5.41 20 17 8.41V15h2V5z\"/></svg>\n        \n        // <svg xmlns=\"http://www.w3.org/2000/svg\" style={style} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"var(--color-icon)\" stroke-width=\"2\">\n        //     <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n        // </svg>\n\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={style} viewBox=\"0 0 20 20\" fill=\"var(--color-icon)\">\n            <path d=\"M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z\" />\n            <path d=\"M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z\" />\n        </svg>\n\n    );\n}\n\nexport const RestoreIcon = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={style} viewBox=\"0 0 24 24\" fill=\"var(--color-icon)\"><path d=\"M0 0h24v24H0z\" fill=\"none\" /><path stroke=\"var(--color-icon)\" d=\"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\" /></svg>\n    );\n}\n","import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { DockLocation } from \"../DockLocation\";\nimport { DragDrop } from \"../DragDrop\";\nimport { DropInfo } from \"../DropInfo\";\nimport { I18nLabel } from \"../I18nLabel\";\nimport { Action } from \"../model/Action\";\nimport { Actions } from \"../model/Actions\";\nimport { BorderNode } from \"../model/BorderNode\";\nimport { BorderSet } from \"../model/BorderSet\";\nimport { IDraggable } from \"../model/IDraggable\";\nimport { Model, ILayoutMetrics } from \"../model/Model\";\nimport { Node } from \"../model/Node\";\nimport { RowNode } from \"../model/RowNode\";\nimport { SplitterNode } from \"../model/SplitterNode\";\nimport { TabNode } from \"../model/TabNode\";\nimport { TabSetNode } from \"../model/TabSetNode\";\nimport { Rect } from \"../Rect\";\nimport { CLASSES } from \"../Types\";\nimport { BorderTabSet } from \"./BorderTabSet\";\nimport { Splitter } from \"./Splitter\";\nimport { Tab } from \"./Tab\";\nimport { TabSet } from \"./TabSet\";\nimport { FloatingWindow } from \"./FloatingWindow\";\nimport { FloatingWindowTab } from \"./FloatingWindowTab\";\nimport { TabFloating } from \"./TabFloating\";\nimport { IJsonTabNode } from \"../model/IJsonModel\";\nimport { Orientation } from \"../Orientation\";\nimport { CloseIcon, MaximizeIcon, OverflowIcon, PopoutIcon, RestoreIcon } from \"./Icons\";\nimport { TabButtonStamp } from \"./TabButtonStamp\";\n\nexport type CustomDragCallback = (dragging: TabNode | IJsonTabNode, over: TabNode, x: number, y: number, location: DockLocation) => void;\nexport type DragRectRenderCallback = (content: React.ReactElement | undefined, node?: Node, json?: IJsonTabNode) => React.ReactElement | undefined;\nexport type FloatingTabPlaceholderRenderCallback = (dockPopout: () => void, showPopout: () => void) => React.ReactElement | undefined;\nexport type NodeMouseEvent = (node: TabNode | TabSetNode | BorderNode, event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\nexport type ShowOverflowMenuCallback = (\n    node: TabSetNode | BorderNode,\n    mouseEvent: React.MouseEvent<HTMLElement, MouseEvent>,\n    items: { index: number; node: TabNode }[],\n    onSelect: (item: { index: number; node: TabNode }) => void,\n) => void;\nexport type TabSetPlaceHolderCallback = (node: TabSetNode) => React.ReactNode;\nexport type IconFactory = (node: TabNode) => React.ReactNode;\nexport type TitleFactory = (node: TabNode) => ITitleObject | React.ReactNode;\n\nexport interface ILayoutProps {\n    model: Model;\n    factory: (node: TabNode) => React.ReactNode;\n    font?: IFontValues;\n    fontFamily?: string;\n    iconFactory?: IconFactory;\n    titleFactory?: TitleFactory;\n    icons?: IIcons;\n    onAction?: (action: Action) => Action | undefined;\n    onRenderTab?: (\n        node: TabNode,\n        renderValues: ITabRenderValues, // change the values in this object as required\n    ) => void;\n    onRenderTabSet?: (\n        tabSetNode: TabSetNode | BorderNode,\n        renderValues: ITabSetRenderValues, // change the values in this object as required\n    ) => void;\n    onModelChange?: (model: Model, action: Action) => void;\n    onExternalDrag?: (event: React.DragEvent<HTMLDivElement>) => undefined | {\n        dragText: string,\n        json: any,\n        onDrop?: (node?: Node, event?: Event) => void\n    };\n    classNameMapper?: (defaultClassName: string) => string;\n    i18nMapper?: (id: I18nLabel, param?: string) => string | undefined;\n    supportsPopout?: boolean | undefined;\n    popoutURL?: string | undefined;\n    realtimeResize?: boolean | undefined;\n    onTabDrag?: (dragging: TabNode | IJsonTabNode, over: TabNode, x: number, y: number, location: DockLocation, refresh: () => void) => undefined | {\n        x: number,\n        y: number,\n        width: number,\n        height: number,\n        callback: CustomDragCallback,\n        // Called once when `callback` is not going to be called anymore (user canceled the drag, moved mouse and you returned a different callback, etc)\n        invalidated?: () => void,\n        cursor?: string | undefined\n    };\n    onRenderDragRect?: DragRectRenderCallback;\n    onRenderFloatingTabPlaceholder?: FloatingTabPlaceholderRenderCallback;\n    onContextMenu?: NodeMouseEvent;\n    onAuxMouseClick?: NodeMouseEvent;\n    onShowOverflowMenu?: ShowOverflowMenuCallback;\n    onTabSetPlaceHolder?: TabSetPlaceHolderCallback;\n}\nexport interface IFontValues {\n    size?: string;\n    family?: string;\n    style?: string;\n    weight?: string;\n}\n\nexport interface ITabSetRenderValues {\n    headerContent?: React.ReactNode;\n    centerContent?: React.ReactNode;\n    stickyButtons: React.ReactNode[];\n    buttons: React.ReactNode[];\n    headerButtons: React.ReactNode[];\n}\n\nexport interface ITabRenderValues {\n    leading: React.ReactNode;\n    content: React.ReactNode;\n    name: string;\n    buttons: React.ReactNode[];\n}\n\nexport interface ITitleObject {\n    titleContent: React.ReactNode;\n    name: string;\n}\n\nexport interface ILayoutState {\n    rect: Rect;\n    calculatedHeaderBarSize: number;\n    calculatedTabBarSize: number;\n    calculatedBorderBarSize: number;\n    editingTab?: TabNode;\n    showHiddenBorder: DockLocation;\n    portal?: React.ReactPortal;\n    showEdges?: boolean;\n}\n\nexport interface IIcons {\n    close?: (React.ReactNode | ((tabNode: TabNode) => React.ReactNode));\n    closeTabset?: (React.ReactNode | ((tabSetNode: TabSetNode) => React.ReactNode));\n    popout?: (React.ReactNode | ((tabNode: TabNode) => React.ReactNode));\n    maximize?: (React.ReactNode | ((tabSetNode: TabSetNode) => React.ReactNode));\n    restore?: (React.ReactNode | ((tabSetNode: TabSetNode) => React.ReactNode));\n    more?: (React.ReactNode | ((tabSetNode: (TabSetNode | BorderNode), hiddenTabs: { node: TabNode; index: number }[]) => React.ReactNode));\n}\n\nconst defaultIcons = {\n    close: <CloseIcon />,\n    closeTabset: <CloseIcon />,\n    popout: <PopoutIcon />,\n    maximize: <MaximizeIcon />,\n    restore: <RestoreIcon />,\n    more: <OverflowIcon />,\n};\n\nexport interface ICustomDropDestination {\n    rect: Rect;\n    callback: CustomDragCallback;\n    invalidated: (() => void) | undefined;\n    dragging: TabNode | IJsonTabNode;\n    over: TabNode;\n    x: number;\n    y: number;\n    location: DockLocation;\n    cursor: string | undefined;\n}\n\n/** @internal */\nexport interface ILayoutCallbacks {\n    i18nName(id: I18nLabel, param?: string): string;\n    maximize(tabsetNode: TabSetNode): void;\n    getPopoutURL(): string;\n    isSupportsPopout(): boolean;\n    isRealtimeResize(): boolean;\n    getCurrentDocument(): HTMLDocument | undefined;\n    getClassName(defaultClassName: string): string;\n    doAction(action: Action): Node | undefined;\n    getDomRect(): any;\n    getRootDiv(): HTMLDivElement;\n    dragStart(\n        event: Event | React.MouseEvent<HTMLDivElement, MouseEvent> | React.TouchEvent<HTMLDivElement> | React.DragEvent<HTMLDivElement> | undefined,\n        dragDivText: string | undefined,\n        node: Node & IDraggable,\n        allowDrag: boolean,\n        onClick?: (event: Event) => void,\n        onDoubleClick?: (event: Event) => void\n    ): void;\n    customizeTab(\n        tabNode: TabNode,\n        renderValues: ITabRenderValues,\n    ): void;\n    customizeTabSet(\n        tabSetNode: TabSetNode | BorderNode,\n        renderValues: ITabSetRenderValues,\n    ): void;\n    styleFont: (style: Record<string, string>) => Record<string, string>;\n    setEditingTab(tabNode?: TabNode): void;\n    getEditingTab(): TabNode | undefined;\n    getOnRenderFloatingTabPlaceholder(): FloatingTabPlaceholderRenderCallback | undefined;\n    showContextMenu(node: TabNode | TabSetNode | BorderNode, event: React.MouseEvent<HTMLElement, MouseEvent>): void;\n    auxMouseClick(node: TabNode | TabSetNode | BorderNode, event: React.MouseEvent<HTMLElement, MouseEvent>): void;\n    showPortal: (portal: React.ReactNode, portalDiv: HTMLDivElement) => void;\n    hidePortal: () => void;\n    getShowOverflowMenu(): ShowOverflowMenuCallback | undefined;\n    getTabSetPlaceHolderCallback(): TabSetPlaceHolderCallback | undefined;\n}\n\n// Popout windows work in latest browsers based on webkit (Chrome, Opera, Safari, latest Edge) and Firefox. They do\n// not work on any version if IE or the original Edge browser\n// Assume any recent desktop browser not IE or original Edge will work\n/** @internal */\n// @ts-ignore\nconst isIEorEdge = typeof window !== \"undefined\" && (window.document.documentMode || /Edge\\//.test(window.navigator.userAgent));\n/** @internal */\nconst isDesktop = typeof window !== \"undefined\" && window.matchMedia && window.matchMedia(\"(hover: hover) and (pointer: fine)\").matches;\n/** @internal */\nconst defaultSupportsPopout: boolean = isDesktop && !isIEorEdge;\n\n/**\n * A React component that hosts a multi-tabbed layout\n */\nexport class Layout extends React.Component<ILayoutProps, ILayoutState> {\n\n    /** @internal */\n    private selfRef: React.RefObject<HTMLDivElement>;\n    /** @internal */\n    private findHeaderBarSizeRef: React.RefObject<HTMLDivElement>;\n    /** @internal */\n    private findTabBarSizeRef: React.RefObject<HTMLDivElement>;\n    /** @internal */\n    private findBorderBarSizeRef: React.RefObject<HTMLDivElement>;\n    /** @internal */\n    private previousModel?: Model;\n    /** @internal */\n    private centerRect?: Rect;\n\n    /** @internal */\n    // private start: number = 0;\n    /** @internal */\n    // private layoutTime: number = 0;\n\n    /** @internal */\n    private tabIds: string[];\n    /** @internal */\n    private newTabJson: IJsonTabNode | undefined;\n    /** @internal */\n    private firstMove: boolean = false;\n    /** @internal */\n    private dragNode?: Node & IDraggable;\n    /** @internal */\n    private dragDiv?: HTMLDivElement;\n    /** @internal */\n    private dragRectRendered: boolean = true;\n    /** @internal */\n    private dragDivText: string | undefined = undefined;\n    /** @internal */\n    private dropInfo: DropInfo | undefined;\n    /** @internal */\n    private customDrop: ICustomDropDestination | undefined;\n    /** @internal */\n    private outlineDiv?: HTMLDivElement;\n    /** @internal */\n    private edgeRectLength = 100;\n    /** @internal */\n    private edgeRectWidth = 10;\n    /** @internal */\n    private fnNewNodeDropped?: (node?: Node, event?: Event) => void;\n    /** @internal */\n    private currentDocument?: HTMLDocument;\n    /** @internal */\n    private currentWindow?: Window;\n    /** @internal */\n    private supportsPopout: boolean;\n    /** @internal */\n    private popoutURL: string;\n    /** @internal */\n    private icons: IIcons;\n    /** @internal */\n    private resizeObserver?: ResizeObserver;\n\n    constructor(props: ILayoutProps) {\n        super(props);\n        this.props.model._setChangeListener(this.onModelChange);\n        this.tabIds = [];\n        this.selfRef = React.createRef<HTMLDivElement>();\n        this.findHeaderBarSizeRef = React.createRef<HTMLDivElement>();\n        this.findTabBarSizeRef = React.createRef<HTMLDivElement>();\n        this.findBorderBarSizeRef = React.createRef<HTMLDivElement>();\n        this.supportsPopout = props.supportsPopout !== undefined ? props.supportsPopout : defaultSupportsPopout;\n        this.popoutURL = props.popoutURL ? props.popoutURL : \"popout.html\";\n        this.icons = { ...defaultIcons, ...props.icons };\n\n        this.state = {\n            rect: new Rect(0, 0, 0, 0),\n            calculatedHeaderBarSize: 25,\n            calculatedTabBarSize: 26,\n            calculatedBorderBarSize: 30,\n            editingTab: undefined,\n            showHiddenBorder: DockLocation.CENTER,\n            showEdges: false,\n        };\n\n        this.onDragEnter = this.onDragEnter.bind(this);\n    }\n\n    /** @internal */\n    styleFont(style: Record<string, string>): Record<string, string> {\n        if (this.props.font) {\n            if (this.selfRef.current) {\n                if (this.props.font.size) {\n                    this.selfRef.current.style.setProperty(\"--font-size\", this.props.font.size);\n                }\n                if (this.props.font.family) {\n                    this.selfRef.current.style.setProperty(\"--font-family\", this.props.font.family);\n                }\n            }\n            if (this.props.font.style) {\n                style.fontStyle = this.props.font.style;\n            }\n            if (this.props.font.weight) {\n                style.fontWeight = this.props.font.weight;\n            }\n        }\n        return style;\n    }\n\n    /** @internal */\n    onModelChange = (action: Action) => {\n        this.forceUpdate();\n        if (this.props.onModelChange) {\n            this.props.onModelChange(this.props.model, action);\n        }\n    };\n\n    /** @internal */\n    doAction(action: Action): Node | undefined {\n        if (this.props.onAction !== undefined) {\n            const outcome = this.props.onAction(action);\n            if (outcome !== undefined) {\n                return this.props.model.doAction(outcome);\n            }\n            return undefined;\n        } else {\n            return this.props.model.doAction(action);\n        }\n    }\n\n    /** @internal */\n    componentDidMount() {\n        this.updateRect();\n        this.updateLayoutMetrics();\n\n        // need to re-render if size changes\n        this.currentDocument = (this.selfRef.current as HTMLDivElement).ownerDocument;\n        this.currentWindow = this.currentDocument.defaultView!;\n        this.resizeObserver = new ResizeObserver(entries => {\n            this.updateRect(entries[0].contentRect);\n        });\n        this.resizeObserver.observe(this.selfRef.current!);\n    }\n\n    /** @internal */\n    componentDidUpdate() {\n        this.updateLayoutMetrics();\n        if (this.props.model !== this.previousModel) {\n            if (this.previousModel !== undefined) {\n                this.previousModel._setChangeListener(undefined); // stop listening to old model\n            }\n            this.props.model._setChangeListener(this.onModelChange);\n            this.previousModel = this.props.model;\n        }\n        // console.log(\"Layout time: \" + this.layoutTime + \"ms Render time: \" + (Date.now() - this.start) + \"ms\");\n    }\n\n    /** @internal */\n    updateRect = (domRect: DOMRectReadOnly = this.getDomRect()) => {\n        const rect = new Rect(0, 0, domRect.width, domRect.height);\n        if (!rect.equals(this.state.rect) && rect.width !== 0 && rect.height !== 0) {\n            this.setState({ rect });\n        }\n    };\n\n    /** @internal */\n    updateLayoutMetrics = () => {\n        if (this.findHeaderBarSizeRef.current) {\n            const headerBarSize = this.findHeaderBarSizeRef.current.getBoundingClientRect().height;\n            if (headerBarSize !== this.state.calculatedHeaderBarSize) {\n                this.setState({ calculatedHeaderBarSize: headerBarSize });\n            }\n        }\n        if (this.findTabBarSizeRef.current) {\n            const tabBarSize = this.findTabBarSizeRef.current.getBoundingClientRect().height;\n            if (tabBarSize !== this.state.calculatedTabBarSize) {\n                this.setState({ calculatedTabBarSize: tabBarSize });\n            }\n        }\n        if (this.findBorderBarSizeRef.current) {\n            const borderBarSize = this.findBorderBarSizeRef.current.getBoundingClientRect().height;\n            if (borderBarSize !== this.state.calculatedBorderBarSize) {\n                this.setState({ calculatedBorderBarSize: borderBarSize });\n            }\n        }\n    };\n\n    /** @internal */\n    getClassName = (defaultClassName: string) => {\n        if (this.props.classNameMapper === undefined) {\n            return defaultClassName;\n        } else {\n            return this.props.classNameMapper(defaultClassName);\n        }\n    };\n\n    /** @internal */\n    getCurrentDocument() {\n        return this.currentDocument;\n    }\n\n    /** @internal */\n    getDomRect() {\n        return this.selfRef.current!.getBoundingClientRect();\n    }\n\n    /** @internal */\n    getRootDiv() {\n        return this.selfRef.current!;\n    }\n\n    /** @internal */\n    isSupportsPopout() {\n        return this.supportsPopout;\n    }\n\n    /** @internal */\n    isRealtimeResize() {\n        return this.props.realtimeResize ?? false;\n    }\n\n    /** @internal */\n    onTabDrag(...args: Parameters<Required<ILayoutProps>['onTabDrag']>) {\n        return this.props.onTabDrag?.(...args);\n    }\n\n    /** @internal */\n    getPopoutURL() {\n        return this.popoutURL;\n    }\n\n    /** @internal */\n    componentWillUnmount() {\n        this.resizeObserver?.unobserve(this.selfRef.current!)\n    }\n\n    /** @internal */\n    setEditingTab(tabNode?: TabNode) {\n        this.setState({ editingTab: tabNode });\n    }\n\n    /** @internal */\n    getEditingTab() {\n        return this.state.editingTab;\n    }\n\n    /** @internal */\n    render() {\n        // first render will be used to find the size (via selfRef)\n        if (!this.selfRef.current) {\n            return (\n                <div ref={this.selfRef} className={this.getClassName(CLASSES.FLEXLAYOUT__LAYOUT)}>\n                    {this.metricsElements()}\n                </div>\n            );\n        }\n\n        this.props.model._setPointerFine(window && window.matchMedia && window.matchMedia(\"(pointer: fine)\").matches);\n        // this.start = Date.now();\n        const borderComponents: React.ReactNode[] = [];\n        const tabSetComponents: React.ReactNode[] = [];\n        const floatingWindows: React.ReactNode[] = [];\n        const tabComponents: Record<string, React.ReactNode> = {};\n        const splitterComponents: React.ReactNode[] = [];\n\n        const metrics: ILayoutMetrics = {\n            headerBarSize: this.state.calculatedHeaderBarSize,\n            tabBarSize: this.state.calculatedTabBarSize,\n            borderBarSize: this.state.calculatedBorderBarSize\n        };\n        this.props.model._setShowHiddenBorder(this.state.showHiddenBorder);\n\n        this.centerRect = this.props.model._layout(this.state.rect, metrics);\n\n        this.renderBorder(this.props.model.getBorderSet(), borderComponents, tabComponents, floatingWindows, splitterComponents);\n        this.renderChildren(\"\", this.props.model.getRoot(), tabSetComponents, tabComponents, floatingWindows, splitterComponents);\n\n        const nextTopIds: string[] = [];\n        const nextTopIdsMap: Record<string, string> = {};\n\n        // Keep any previous tabs in the same DOM order as before, removing any that have been deleted\n        for (const t of this.tabIds) {\n            if (tabComponents[t]) {\n                nextTopIds.push(t);\n                nextTopIdsMap[t] = t;\n            }\n        }\n        this.tabIds = nextTopIds;\n\n        // Add tabs that have been added to the DOM\n        for (const t of Object.keys(tabComponents)) {\n            if (!nextTopIdsMap[t]) {\n                this.tabIds.push(t);\n            }\n        }\n\n        const edges: React.ReactNode[] = [];\n        if (this.state.showEdges) {\n            const r = this.centerRect;\n            const length = this.edgeRectLength;\n            const width = this.edgeRectWidth;\n            const offset = this.edgeRectLength / 2;\n            const className = this.getClassName(CLASSES.FLEXLAYOUT__EDGE_RECT);\n            const radius = 50;\n            edges.push(<div key=\"North\" style={{ top: r.y, left: r.x + r.width / 2 - offset, width: length, height: width, borderBottomLeftRadius: radius, borderBottomRightRadius: radius }} className={className}></div>)\n            edges.push(<div key=\"West\" style={{ top: r.y + r.height / 2 - offset, left: r.x, width: width, height: length, borderTopRightRadius: radius, borderBottomRightRadius: radius }} className={className}></div>)\n            edges.push(<div key=\"South\" style={{ top: r.y + r.height - width, left: r.x + r.width / 2 - offset, width: length, height: width, borderTopLeftRadius: radius, borderTopRightRadius: radius }} className={className}></div>)\n            edges.push(<div key=\"East\" style={{ top: r.y + r.height / 2 - offset, left: r.x + r.width - width, width: width, height: length, borderTopLeftRadius: radius, borderBottomLeftRadius: radius }} className={className}></div>)\n        }\n\n        // this.layoutTime = (Date.now() - this.start);\n\n        return (\n            <div ref={this.selfRef} className={this.getClassName(CLASSES.FLEXLAYOUT__LAYOUT)} onDragEnter={this.props.onExternalDrag ? this.onDragEnter : undefined}>\n                {tabSetComponents}\n                {this.tabIds.map((t) => {\n                    return tabComponents[t];\n                })}\n                {borderComponents}\n                {splitterComponents}\n                {edges}\n                {floatingWindows}\n                {this.metricsElements()}\n                {this.state.portal}\n            </div>\n        );\n    }\n\n    /** @internal */\n    metricsElements() {\n        // used to measure the tab and border tab sizes\n        const fontStyle = this.styleFont({ visibility: \"hidden\" });\n        return (\n            <React.Fragment>\n                <div key=\"findHeaderBarSize\" ref={this.findHeaderBarSizeRef} style={fontStyle} className={this.getClassName(CLASSES.FLEXLAYOUT__TABSET_HEADER_SIZER)}>\n                    FindHeaderBarSize\n                </div>\n                <div key=\"findTabBarSize\" ref={this.findTabBarSizeRef} style={fontStyle} className={this.getClassName(CLASSES.FLEXLAYOUT__TABSET_SIZER)}>\n                    FindTabBarSize\n                </div>\n                <div key=\"findBorderBarSize\" ref={this.findBorderBarSizeRef} style={fontStyle} className={this.getClassName(CLASSES.FLEXLAYOUT__BORDER_SIZER)}>\n                    FindBorderBarSize\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    /** @internal */\n    onCloseWindow = (id: string) => {\n        this.doAction(Actions.unFloatTab(id));\n        try {\n            (this.props.model.getNodeById(id) as TabNode)._setWindow(undefined);\n        } catch (e) {\n            // catch incase it was a model change\n        }\n    };\n\n    /** @internal */\n    onSetWindow = (id: string, window: Window) => {\n        (this.props.model.getNodeById(id) as TabNode)._setWindow(window);\n    };\n\n    /** @internal */\n    renderBorder(borderSet: BorderSet, borderComponents: React.ReactNode[], tabComponents: Record<string, React.ReactNode>, floatingWindows: React.ReactNode[], splitterComponents: React.ReactNode[]) {\n        for (const border of borderSet.getBorders()) {\n            const borderPath = `/border/${border.getLocation().getName()}`;\n            if (border.isShowing()) {\n                borderComponents.push(\n                    <BorderTabSet\n                        key={`border_${border.getLocation().getName()}`}\n                        path={borderPath}\n                        border={border}\n                        layout={this}\n                        iconFactory={this.props.iconFactory}\n                        titleFactory={this.props.titleFactory}\n                        icons={this.icons}\n                    />\n                );\n                const drawChildren = border._getDrawChildren();\n                let i = 0;\n                let tabCount = 0;\n                for (const child of drawChildren) {\n                    if (child instanceof SplitterNode) {\n                        let path = borderPath + \"/s\";\n                        splitterComponents.push(<Splitter key={child.getId()} layout={this} node={child} path={path} />);\n                    } else if (child instanceof TabNode) {\n                        let path = borderPath + \"/t\" + tabCount++;\n                        if (this.supportsPopout && child.isFloating()) {\n                            const rect = this._getScreenRect(child);\n                            floatingWindows.push(\n                                <FloatingWindow\n                                    key={child.getId()}\n                                    url={this.popoutURL}\n                                    rect={rect}\n                                    title={child.getName()}\n                                    id={child.getId()}\n                                    onSetWindow={this.onSetWindow}\n                                    onCloseWindow={this.onCloseWindow}\n                                >\n                                    <FloatingWindowTab layout={this} node={child} factory={this.props.factory} />\n                                </FloatingWindow>\n                            );\n                            tabComponents[child.getId()] = <TabFloating key={child.getId()}\n                                layout={this}\n                                path={path}\n                                node={child}\n                                selected={i === border.getSelected()\n                                } />;\n                        } else {\n                            tabComponents[child.getId()] = <Tab key={child.getId()}\n                                layout={this}\n                                path={path}\n                                node={child}\n                                selected={i === border.getSelected()}\n                                factory={this.props.factory} />;\n                        }\n                    }\n                    i++;\n                }\n            }\n        }\n    }\n\n    /** @internal */\n    renderChildren(path: string, node: RowNode | TabSetNode, tabSetComponents: React.ReactNode[], tabComponents: Record<string, React.ReactNode>, floatingWindows: React.ReactNode[], splitterComponents: React.ReactNode[]) {\n        const drawChildren = node._getDrawChildren();\n        let splitterCount = 0;\n        let tabCount = 0;\n        let rowCount = 0;\n\n        for (const child of drawChildren!) {\n            if (child instanceof SplitterNode) {\n                const newPath = path + \"/s\" + (splitterCount++);\n                splitterComponents.push(<Splitter key={child.getId()} layout={this} path={newPath} node={child} />);\n            } else if (child instanceof TabSetNode) {\n                const newPath = path + \"/ts\" + (rowCount++);\n                tabSetComponents.push(<TabSet key={child.getId()} layout={this} path={newPath} node={child} iconFactory={this.props.iconFactory} titleFactory={this.props.titleFactory} icons={this.icons} />);\n                this.renderChildren(newPath, child, tabSetComponents, tabComponents, floatingWindows, splitterComponents);\n            } else if (child instanceof TabNode) {\n                const newPath = path + \"/t\" + (tabCount++);\n                const selectedTab = child.getParent()!.getChildren()[(child.getParent() as TabSetNode).getSelected()];\n                if (selectedTab === undefined) {\n                    // this should not happen!\n                    console.warn(\"undefined selectedTab should not happen\");\n                }\n                if (this.supportsPopout && child.isFloating()) {\n                    const rect = this._getScreenRect(child);\n                    floatingWindows.push(\n                        <FloatingWindow\n                            key={child.getId()}\n                            url={this.popoutURL}\n                            rect={rect}\n                            title={child.getName()}\n                            id={child.getId()}\n                            onSetWindow={this.onSetWindow}\n                            onCloseWindow={this.onCloseWindow}\n                        >\n                            <FloatingWindowTab layout={this} node={child} factory={this.props.factory} />\n                        </FloatingWindow>\n                    );\n                    tabComponents[child.getId()] = <TabFloating key={child.getId()} layout={this} path={newPath} node={child} selected={child === selectedTab} />;\n                } else {\n                    tabComponents[child.getId()] = <Tab key={child.getId()} layout={this} path={newPath} node={child} selected={child === selectedTab} factory={this.props.factory} />;\n                }\n            } else {\n                // is row\n                const newPath = path + ((child.getOrientation() === Orientation.HORZ) ? \"/r\" : \"/c\") + (rowCount++);\n                this.renderChildren(newPath, child as RowNode, tabSetComponents, tabComponents, floatingWindows, splitterComponents);\n            }\n        }\n    }\n\n    /** @internal */\n    _getScreenRect(node: TabNode) {\n        const rect = node!.getRect()!.clone();\n        const bodyRect: DOMRect = this.selfRef.current!.getBoundingClientRect();\n        const navHeight = Math.min(80, this.currentWindow!.outerHeight - this.currentWindow!.innerHeight);\n        const navWidth = Math.min(80, this.currentWindow!.outerWidth - this.currentWindow!.innerWidth);\n        rect.x = rect.x + bodyRect.x + this.currentWindow!.screenX + navWidth;\n        rect.y = rect.y + bodyRect.y + this.currentWindow!.screenY + navHeight;\n        return rect;\n    }\n\n    /**\n     * Adds a new tab to the given tabset\n     * @param tabsetId the id of the tabset where the new tab will be added\n     * @param json the json for the new tab node\n     */\n    addTabToTabSet(tabsetId: string, json: IJsonTabNode) {\n        const tabsetNode = this.props.model.getNodeById(tabsetId);\n        if (tabsetNode !== undefined) {\n            this.doAction(Actions.addNode(json, tabsetId, DockLocation.CENTER, -1));\n        }\n    }\n\n    /**\n     * Adds a new tab to the active tabset (if there is one)\n     * @param json the json for the new tab node\n     */\n    addTabToActiveTabSet(json: IJsonTabNode) {\n        const tabsetNode = this.props.model.getActiveTabset();\n        if (tabsetNode !== undefined) {\n            this.doAction(Actions.addNode(json, tabsetNode.getId(), DockLocation.CENTER, -1));\n        }\n    }\n\n    /**\n     * Adds a new tab by dragging a labeled panel to the drop location, dragging starts immediatelly\n     * @param dragText the text to show on the drag panel\n     * @param json the json for the new tab node\n     * @param onDrop a callback to call when the drag is complete (node and event will be undefined if the drag was cancelled)\n     */\n    addTabWithDragAndDrop(dragText: string | undefined, json: IJsonTabNode, onDrop?: (node?: Node, event?: Event) => void) {\n        this.fnNewNodeDropped = onDrop;\n        this.newTabJson = json;\n        this.dragStart(undefined, dragText, TabNode._fromJson(json, this.props.model, false), true, undefined, undefined);\n    }\n\n    /**\n     * Move a tab/tabset using drag and drop\n     * @param node the tab or tabset to drag\n     * @param dragText the text to show on the drag panel\n     */\n    moveTabWithDragAndDrop(node: (TabNode | TabSetNode), dragText?: string) {\n        this.dragStart(undefined, dragText, node, true, undefined, undefined);\n    }\n\n    /**\n     * Adds a new tab by dragging a labeled panel to the drop location, dragging starts when you\n     * mouse down on the panel\n     *\n     * @param dragText the text to show on the drag panel\n     * @param json the json for the new tab node\n     * @param onDrop a callback to call when the drag is complete (node and event will be undefined if the drag was cancelled)\n     */\n    addTabWithDragAndDropIndirect(dragText: string | undefined, json: IJsonTabNode, onDrop?: (node?: Node, event?: Event) => void) {\n        this.fnNewNodeDropped = onDrop;\n        this.newTabJson = json;\n\n        DragDrop.instance.addGlass(this.onCancelAdd);\n\n        this.dragDivText = dragText;\n        this.dragDiv = this.currentDocument!.createElement(\"div\");\n        this.dragDiv.className = this.getClassName(CLASSES.FLEXLAYOUT__DRAG_RECT);\n        this.dragDiv.addEventListener(\"mousedown\", this.onDragDivMouseDown);\n        this.dragDiv.addEventListener(\"touchstart\", this.onDragDivMouseDown, { passive: false });\n\n        this.dragRectRender(this.dragDivText, undefined, this.newTabJson, () => {\n            if (this.dragDiv) {\n                // now it's been rendered into the dom it can be centered\n                this.dragDiv.style.visibility = \"visible\";\n                const domRect = this.dragDiv.getBoundingClientRect();\n                const r = new Rect(0, 0, domRect?.width, domRect?.height);\n                r.centerInRect(this.state.rect);\n                this.dragDiv.setAttribute(\"data-layout-path\", \"/drag-rectangle\");\n                this.dragDiv.style.left = r.x + \"px\";\n                this.dragDiv.style.top = r.y + \"px\";\n            }\n        });\n\n        const rootdiv = this.selfRef.current;\n        rootdiv!.appendChild(this.dragDiv);\n    }\n\n    /** @internal */\n    onCancelAdd = () => {\n        const rootdiv = this.selfRef.current;\n        rootdiv!.removeChild(this.dragDiv!);\n        this.dragDiv = undefined;\n        this.hidePortal();\n        if (this.fnNewNodeDropped != null) {\n            this.fnNewNodeDropped();\n            this.fnNewNodeDropped = undefined;\n        }\n\n        try {\n            this.customDrop?.invalidated?.()\n        } catch (e) {\n            console.error(e)\n        }\n\n        DragDrop.instance.hideGlass();\n        this.newTabJson = undefined;\n        this.customDrop = undefined;\n    };\n\n    /** @internal */\n    onCancelDrag = (wasDragging: boolean) => {\n        if (wasDragging) {\n            const rootdiv = this.selfRef.current!;\n\n            try {\n                rootdiv.removeChild(this.outlineDiv!);\n            } catch (e) { }\n\n            try {\n                rootdiv.removeChild(this.dragDiv!);\n            } catch (e) { }\n\n            this.dragDiv = undefined;\n            this.hidePortal();\n            this.setState({ showEdges: false });\n            if (this.fnNewNodeDropped != null) {\n                this.fnNewNodeDropped();\n                this.fnNewNodeDropped = undefined;\n            }\n\n            try {\n                this.customDrop?.invalidated?.()\n            } catch (e) {\n                console.error(e)\n            }\n\n            DragDrop.instance.hideGlass();\n            this.newTabJson = undefined;\n            this.customDrop = undefined;\n        }\n        this.setState({ showHiddenBorder: DockLocation.CENTER });\n\n    };\n\n    /** @internal */\n    onDragDivMouseDown = (event: Event) => {\n        event.preventDefault();\n        this.dragStart(event, this.dragDivText, TabNode._fromJson(this.newTabJson, this.props.model, false), true, undefined, undefined);\n    };\n\n    /** @internal */\n    dragStart = (\n        event: Event | React.MouseEvent<HTMLDivElement, MouseEvent> | React.TouchEvent<HTMLDivElement> | React.DragEvent<HTMLDivElement> | undefined,\n        dragDivText: string | undefined,\n        node: Node & IDraggable,\n        allowDrag: boolean,\n        onClick?: (event: Event) => void,\n        onDoubleClick?: (event: Event) => void\n    ) => {\n        if (!allowDrag) {\n            DragDrop.instance.startDrag(event, undefined, undefined, undefined, undefined, onClick, onDoubleClick, this.currentDocument, this.selfRef.current!);\n        } else {\n            this.dragNode = node;\n            this.dragDivText = dragDivText;\n            DragDrop.instance.startDrag(event, this.onDragStart, this.onDragMove, this.onDragEnd, this.onCancelDrag, onClick, onDoubleClick, this.currentDocument, this.selfRef.current!);\n        }\n    };\n\n    /** @internal */\n    dragRectRender = (text: String | undefined, node?: Node, json?: IJsonTabNode, onRendered?: () => void) => {\n        let content: React.ReactElement | undefined;\n\n        if (text !== undefined) {\n            content = <div style={{ whiteSpace: \"pre\" }}>{text.replace(\"<br>\", \"\\n\")}</div>;\n        } else {\n            if (node && node instanceof TabNode) {\n                content = (<TabButtonStamp\n                    node={node}\n                    layout={this}\n                    iconFactory={this.props.iconFactory}\n                    titleFactory={this.props.titleFactory}\n                />);\n            }\n        }\n\n        if (this.props.onRenderDragRect !== undefined) {\n            const customContent = this.props.onRenderDragRect(content, node, json);\n            if (customContent !== undefined) {\n                content = customContent;\n            }\n        }\n\n        // hide div until the render is complete\n        this.dragDiv!.style.visibility = \"hidden\";\n        this.dragRectRendered = false;\n        this.showPortal(\n            <DragRectRenderWrapper\n                // wait for it to be rendered\n                onRendered={() => {\n                    this.dragRectRendered = true;\n                    onRendered?.();\n                }}>\n                {content}\n            </DragRectRenderWrapper>,\n            this.dragDiv!);\n    };\n\n    /** @internal */\n    showPortal = (control: React.ReactNode, element: HTMLElement) => {\n        const portal = createPortal(control, element) as React.ReactPortal;\n        this.setState({ portal });\n    };\n\n    /** @internal */\n    hidePortal = () => {\n        this.setState({ portal: undefined });\n    };\n\n    /** @internal */\n    onDragStart = () => {\n        this.dropInfo = undefined;\n        this.customDrop = undefined;\n        const rootdiv = this.selfRef.current!;\n        this.outlineDiv = this.currentDocument!.createElement(\"div\");\n        this.outlineDiv.className = this.getClassName(CLASSES.FLEXLAYOUT__OUTLINE_RECT);\n        this.outlineDiv.style.visibility = \"hidden\";\n        rootdiv.appendChild(this.outlineDiv);\n\n        if (this.dragDiv == null) {\n            this.dragDiv = this.currentDocument!.createElement(\"div\");\n            this.dragDiv.className = this.getClassName(CLASSES.FLEXLAYOUT__DRAG_RECT);\n            this.dragDiv.setAttribute(\"data-layout-path\", \"/drag-rectangle\");\n            this.dragRectRender(this.dragDivText, this.dragNode, this.newTabJson);\n\n            rootdiv.appendChild(this.dragDiv);\n        }\n        // add edge indicators\n        if (this.props.model.getMaximizedTabset() === undefined) {\n            this.setState({ showEdges: true });\n        }\n\n        if (this.dragNode !== undefined && this.dragNode instanceof TabNode && this.dragNode.getTabRect() !== undefined) {\n            this.dragNode.getTabRect()!.positionElement(this.outlineDiv);\n        }\n        this.firstMove = true;\n\n        return true;\n    };\n\n    /** @internal */\n    onDragMove = (event: React.MouseEvent<Element>) => {\n        if (this.firstMove === false) {\n            const speed = this.props.model._getAttribute(\"tabDragSpeed\") as number;\n            this.outlineDiv!.style.transition = `top ${speed}s, left ${speed}s, width ${speed}s, height ${speed}s`;\n        }\n        this.firstMove = false;\n        const clientRect = this.selfRef.current!.getBoundingClientRect();\n        const pos = {\n            x: event.clientX - clientRect.left,\n            y: event.clientY - clientRect.top,\n        };\n\n        this.checkForBorderToShow(pos.x, pos.y);\n\n        // keep it between left & right\n        const dragRect = this.dragDiv!.getBoundingClientRect();\n        let newLeft = pos.x - dragRect.width / 2;\n        if (newLeft + dragRect.width > clientRect.width) {\n            newLeft = clientRect.width - dragRect.width;\n        }\n        newLeft = Math.max(0, newLeft);\n\n        this.dragDiv!.style.left = newLeft + \"px\";\n        this.dragDiv!.style.top = pos.y + 5 + \"px\";\n        if (this.dragRectRendered && this.dragDiv!.style.visibility === \"hidden\") {\n            // make visible once the drag rect has been rendered\n            this.dragDiv!.style.visibility = \"visible\";\n        }\n\n        let dropInfo = this.props.model._findDropTargetNode(this.dragNode!, pos.x, pos.y);\n        if (dropInfo) {\n            if (this.props.onTabDrag) {\n                this.handleCustomTabDrag(dropInfo, pos, event);\n            } else {\n                this.dropInfo = dropInfo;\n                this.outlineDiv!.className = this.getClassName(dropInfo.className);\n                dropInfo.rect.positionElement(this.outlineDiv!);\n                this.outlineDiv!.style.visibility = \"visible\";\n            }\n        }\n    };\n\n    /** @internal */\n    onDragEnd = (event: Event) => {\n        const rootdiv = this.selfRef.current!;\n        rootdiv.removeChild(this.outlineDiv!);\n        rootdiv.removeChild(this.dragDiv!);\n        this.dragDiv = undefined;\n        this.hidePortal();\n\n        this.setState({ showEdges: false });\n        DragDrop.instance.hideGlass();\n\n        if (this.dropInfo) {\n            if (this.customDrop) {\n                this.newTabJson = undefined;\n\n                try {\n                    const { callback, dragging, over, x, y, location } = this.customDrop;\n                    callback(dragging, over, x, y, location);\n                    if (this.fnNewNodeDropped != null) {\n                        this.fnNewNodeDropped();\n                        this.fnNewNodeDropped = undefined;\n                    }\n                } catch (e) {\n                    console.error(e)\n                }\n            } else if (this.newTabJson !== undefined) {\n                const newNode = this.doAction(Actions.addNode(this.newTabJson, this.dropInfo.node.getId(), this.dropInfo.location, this.dropInfo.index));\n\n                if (this.fnNewNodeDropped != null) {\n                    this.fnNewNodeDropped(newNode, event);\n                    this.fnNewNodeDropped = undefined;\n                }\n                this.newTabJson = undefined;\n            } else if (this.dragNode !== undefined) {\n                this.doAction(Actions.moveNode(this.dragNode.getId(), this.dropInfo.node.getId(), this.dropInfo.location, this.dropInfo.index));\n            }\n        }\n        this.setState({ showHiddenBorder: DockLocation.CENTER });\n    };\n\n    /** @internal */\n    private handleCustomTabDrag(dropInfo: DropInfo, pos: { x: number; y: number; }, event: React.MouseEvent<Element, MouseEvent>) {\n        let invalidated = this.customDrop?.invalidated;\n        const currentCallback = this.customDrop?.callback;\n        this.customDrop = undefined;\n\n        const dragging = this.newTabJson || (this.dragNode instanceof TabNode ? this.dragNode : undefined);\n        if (dragging && (dropInfo.node instanceof TabSetNode || dropInfo.node instanceof BorderNode) && dropInfo.index === -1) {\n            const selected = dropInfo.node.getSelectedNode() as TabNode | undefined;\n            const tabRect = selected?.getRect();\n\n            if (selected && tabRect?.contains(pos.x, pos.y)) {\n                let customDrop: ICustomDropDestination | undefined = undefined;\n\n                try {\n                    const dest = this.onTabDrag(dragging, selected, pos.x - tabRect.x, pos.y - tabRect.y, dropInfo.location, () => this.onDragMove(event));\n\n                    if (dest) {\n                        customDrop = {\n                            rect: new Rect(dest.x + tabRect.x, dest.y + tabRect.y, dest.width, dest.height),\n                            callback: dest.callback,\n                            invalidated: dest.invalidated,\n                            dragging: dragging,\n                            over: selected,\n                            x: pos.x - tabRect.x,\n                            y: pos.y - tabRect.y,\n                            location: dropInfo.location,\n                            cursor: dest.cursor\n                        };\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n\n                if (customDrop?.callback === currentCallback) {\n                    invalidated = undefined;\n                }\n\n                this.customDrop = customDrop;\n            }\n        }\n\n        this.dropInfo = dropInfo;\n        this.outlineDiv!.className = this.getClassName(this.customDrop ? CLASSES.FLEXLAYOUT__OUTLINE_RECT : dropInfo.className);\n\n        if (this.customDrop) {\n            this.customDrop.rect.positionElement(this.outlineDiv!);\n        } else {\n            dropInfo.rect.positionElement(this.outlineDiv!);\n        }\n\n        DragDrop.instance.setGlassCursorOverride(this.customDrop?.cursor);\n        this.outlineDiv!.style.visibility = \"visible\";\n\n        try {\n            invalidated?.();\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    /** @internal */\n    onDragEnter(event: React.DragEvent<HTMLDivElement>) {\n        // DragDrop keeps track of number of dragenters minus the number of\n        // dragleaves. Only start a new drag if there isn't one already.\n        if (DragDrop.instance.isDragging())\n            return;\n        const drag = this.props.onExternalDrag!(event);\n        if (drag) {\n            // Mimic addTabWithDragAndDrop, but pass in DragEvent\n            this.fnNewNodeDropped = drag.onDrop;\n            this.newTabJson = drag.json;\n            this.dragStart(event, drag.dragText, TabNode._fromJson(drag.json, this.props.model, false), true, undefined, undefined);\n        }\n    }\n\n\n    /** @internal */\n    checkForBorderToShow(x: number, y: number) {\n        const r = this.props.model._getOuterInnerRects().outer;\n        const c = r.getCenter();\n        const margin = this.edgeRectWidth;\n        const offset = this.edgeRectLength / 2;\n\n        let overEdge = false;\n        if (this.props.model.isEnableEdgeDock() && this.state.showHiddenBorder === DockLocation.CENTER) {\n            if ((y > c.y - offset && y < c.y + offset) ||\n                (x > c.x - offset && x < c.x + offset)) {\n                overEdge = true;\n            }\n        }\n\n        let location = DockLocation.CENTER;\n        if (!overEdge) {\n            if (x <= r.x + margin) {\n                location = DockLocation.LEFT;\n            } else if (x >= r.getRight() - margin) {\n                location = DockLocation.RIGHT;\n            } else if (y <= r.y + margin) {\n                location = DockLocation.TOP;\n            } else if (y >= r.getBottom() - margin) {\n                location = DockLocation.BOTTOM;\n            }\n        }\n\n        if (location !== this.state.showHiddenBorder) {\n            this.setState({ showHiddenBorder: location });\n        }\n    }\n\n    /** @internal */\n    maximize(tabsetNode: TabSetNode) {\n        this.doAction(Actions.maximizeToggle(tabsetNode.getId()));\n    }\n\n    /** @internal */\n    customizeTab(\n        tabNode: TabNode,\n        renderValues: ITabRenderValues,\n    ) {\n        if (this.props.onRenderTab) {\n            this.props.onRenderTab(tabNode, renderValues);\n        }\n    }\n\n    /** @internal */\n    customizeTabSet(\n        tabSetNode: TabSetNode | BorderNode,\n        renderValues: ITabSetRenderValues,\n    ) {\n        if (this.props.onRenderTabSet) {\n            this.props.onRenderTabSet(tabSetNode, renderValues);\n        }\n    }\n\n    /** @internal */\n    i18nName(id: I18nLabel, param?: string) {\n        let message;\n        if (this.props.i18nMapper) {\n            message = this.props.i18nMapper(id, param);\n        }\n        if (message === undefined) {\n            message = id + (param === undefined ? \"\" : param);\n        }\n        return message;\n    }\n\n    /** @internal */\n    getOnRenderFloatingTabPlaceholder() {\n        return this.props.onRenderFloatingTabPlaceholder;\n    }\n\n    /** @internal */\n    getShowOverflowMenu() {\n        return this.props.onShowOverflowMenu;\n    }\n\n    /** @internal */\n    getTabSetPlaceHolderCallback() {\n        return this.props.onTabSetPlaceHolder;\n    }\n    /** @internal */\n    showContextMenu(node: TabNode | TabSetNode | BorderNode, event: React.MouseEvent<HTMLElement, MouseEvent>) {\n        if (this.props.onContextMenu) {\n            this.props.onContextMenu(node, event);\n        }\n    }\n\n    /** @internal */\n    auxMouseClick(node: TabNode | TabSetNode | BorderNode, event: React.MouseEvent<HTMLElement, MouseEvent>) {\n        if (this.props.onAuxMouseClick) {\n            this.props.onAuxMouseClick(node, event);\n        }\n    }\n}\n\n// wrapper round the drag rect renderer that can call\n// a method once the rendering is written to the dom\n\n/** @internal */\ninterface IDragRectRenderWrapper {\n    onRendered?: () => void;\n    children: React.ReactNode;\n}\n\n/** @internal */\nconst DragRectRenderWrapper = (props: IDragRectRenderWrapper) => {\n    React.useEffect(() => {\n        props.onRendered?.();\n    }, [props]);\n\n    return (<React.Fragment>\n        {props.children}\n    </React.Fragment>)\n}\n","import { DropInfo } from \"../DropInfo\";\nimport { Orientation } from \"../Orientation\";\nimport { Rect } from \"../Rect\";\nimport { BorderNode } from \"./BorderNode\";\nimport { IDraggable } from \"./IDraggable\";\nimport { Model, ILayoutMetrics } from \"./Model\";\nimport { Node } from \"./Node\";\n\nexport class BorderSet {\n    /** @internal */\n    static _fromJson(json: any, model: Model) {\n        const borderSet = new BorderSet(model);\n        borderSet._borders = json.map((borderJson: any) => BorderNode._fromJson(borderJson, model));\n        return borderSet;\n    }\n    /** @internal */\n    private _model: Model;\n    /** @internal */\n    private _borders: BorderNode[];\n\n    /** @internal */\n    constructor(model: Model) {\n        this._model = model;\n        this._borders = [];\n    }\n\n    getBorders() {\n        return this._borders;\n    }\n\n    /** @internal */\n    _forEachNode(fn: (node: Node, level: number) => void) {\n        for (const borderNode of this._borders) {\n            fn(borderNode, 0);\n            for (const node of borderNode.getChildren()) {\n                node._forEachNode(fn, 1);\n            }\n        }\n    }\n\n    /** @internal */\n    _toJson() {\n        return this._borders.map((borderNode) => borderNode.toJson());\n    }\n\n    /** @internal */\n    _layoutBorder(outerInnerRects: { inner: Rect; outer: Rect }, metrics: ILayoutMetrics) {\n        const rect = outerInnerRects.outer;\n        const rootRow = this._model.getRoot();\n        let height = Math.max(0, rect.height - rootRow.getMinHeight());\n        let width = Math.max(0, rect.width - rootRow.getMinWidth());\n        let sumHeight = 0;\n        let sumWidth = 0;\n        let adjustableHeight = 0;\n        let adjustableWidth = 0;\n\n        const showingBorders = this._borders.filter((border) => border.isShowing());\n\n        // sum size of borders to see they will fit\n        for (const border of showingBorders) {\n            border._setAdjustedSize(border.getSize());\n            const visible = border.getSelected() !== -1;\n            if (border.getLocation().getOrientation() === Orientation.HORZ) {\n                sumWidth += border.getBorderBarSize();\n                if (visible) {\n                    width -= this._model.getSplitterSize();\n                    sumWidth += border.getSize();\n                    adjustableWidth += border.getSize();\n                }\n            } else {\n                sumHeight += border.getBorderBarSize();\n                if (visible) {\n                    height -= this._model.getSplitterSize();\n                    sumHeight += border.getSize();\n                    adjustableHeight += border.getSize();\n                }\n            }\n        }\n\n        // adjust border sizes if too large\n        let j = 0;\n        let adjusted = false;\n        while ((sumWidth > width && adjustableWidth > 0) || (sumHeight > height && adjustableHeight > 0)) {\n            const border = showingBorders[j];\n            if (border.getSelected() !== -1) {\n                // visible\n                const size = border._getAdjustedSize();\n                if (sumWidth > width && adjustableWidth > 0 && border.getLocation().getOrientation() === Orientation.HORZ && size > 0\n                    && size > border.getMinSize()) {\n                    border._setAdjustedSize(size - 1);\n                    sumWidth--;\n                    adjustableWidth--;\n                    adjusted = true;\n                } else if (sumHeight > height && adjustableHeight > 0 && border.getLocation().getOrientation() === Orientation.VERT && size > 0\n                    && size > border.getMinSize()) {\n                    border._setAdjustedSize(size - 1);\n                    sumHeight--;\n                    adjustableHeight--;\n                    adjusted = true;\n                }\n            }\n            j = (j + 1) % showingBorders.length;\n            if (j === 0) {\n                if (adjusted) {\n                    adjusted = false;\n                } else {\n                    break;\n                }\n            }\n        }\n\n        for (const border of showingBorders) {\n            outerInnerRects.outer = border._layoutBorderOuter(outerInnerRects.outer, metrics);\n        }\n\n        outerInnerRects.inner = outerInnerRects.outer;\n\n        for (const border of showingBorders) {\n            outerInnerRects.inner = border._layoutBorderInner(outerInnerRects.inner, metrics);\n        }\n        return outerInnerRects;\n    }\n\n    /** @internal */\n    _findDropTargetNode(dragNode: Node & IDraggable, x: number, y: number): DropInfo | undefined {\n        for (const border of this._borders) {\n            if (border.isShowing()) {\n                const dropInfo = border.canDrop(dragNode, x, y);\n                if (dropInfo !== undefined) {\n                    return dropInfo;\n                }\n            }\n        }\n        return undefined;\n    }\n}\n","import { Attribute } from \"../Attribute\";\nimport { AttributeDefinitions } from \"../AttributeDefinitions\";\nimport { DockLocation } from \"../DockLocation\";\nimport { DropInfo } from \"../DropInfo\";\nimport { Orientation } from \"../Orientation\";\nimport { Rect } from \"../Rect\";\nimport { Action } from \"./Action\";\nimport { Actions } from \"./Actions\";\nimport { BorderNode } from \"./BorderNode\";\nimport { BorderSet } from \"./BorderSet\";\nimport { IDraggable } from \"./IDraggable\";\nimport { IDropTarget } from \"./IDropTarget\";\nimport { IJsonModel, ITabSetAttributes } from \"./IJsonModel\";\nimport { Node } from \"./Node\";\nimport { RowNode } from \"./RowNode\";\nimport { TabNode } from \"./TabNode\";\nimport { TabSetNode } from \"./TabSetNode\";\nimport { adjustSelectedIndexAfterDock, adjustSelectedIndexAfterFloat, randomUUID } from \"./Utils\";\n\n/** @internal */\nexport interface ILayoutMetrics {\n    headerBarSize: number;\n    tabBarSize: number;\n    borderBarSize: number;\n}\n\n/**\n * Class containing the Tree of Nodes used by the FlexLayout component\n */\nexport class Model {\n    /**\n     * Loads the model from the given json object\n     * @param json the json model to load\n     * @returns {Model} a new Model object\n     */\n    static fromJson(json: IJsonModel) {\n        const model = new Model();\n        Model._attributeDefinitions.fromJson(json.global, model._attributes);\n\n        if (json.borders) {\n            model._borders = BorderSet._fromJson(json.borders, model);\n        }\n        model._root = RowNode._fromJson(json.layout, model);\n        model._tidy(); // initial tidy of node tree\n        return model;\n    }\n    /** @internal */\n    private static _attributeDefinitions: AttributeDefinitions = Model._createAttributeDefinitions();\n\n    /** @internal */\n    private static _createAttributeDefinitions(): AttributeDefinitions {\n        const attributeDefinitions = new AttributeDefinitions();\n\n        attributeDefinitions.add(\"legacyOverflowMenu\", false).setType(Attribute.BOOLEAN);\n\n        // splitter\n        attributeDefinitions.add(\"splitterSize\", -1).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"splitterExtra\", 0).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"enableEdgeDock\", true).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"rootOrientationVertical\", false).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"marginInsets\", { top: 0, right: 0, bottom: 0, left: 0 })\n            .setType(\"IInsets\");\n        attributeDefinitions.add(\"enableUseVisibility\", false).setType(Attribute.BOOLEAN);\n\n        // tab\n        attributeDefinitions.add(\"tabEnableClose\", true).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"tabCloseType\", 1).setType(\"ICloseType\");\n        attributeDefinitions.add(\"tabEnableFloat\", false).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"tabEnableDrag\", true).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"tabEnableRename\", true).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"tabClassName\", undefined).setType(Attribute.STRING);\n        attributeDefinitions.add(\"tabIcon\", undefined).setType(Attribute.STRING);\n        attributeDefinitions.add(\"tabEnableRenderOnDemand\", true).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"tabDragSpeed\", 0.3).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"tabBorderWidth\", -1).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"tabBorderHeight\", -1).setType(Attribute.NUMBER);\n\n        // tabset\n        attributeDefinitions.add(\"tabSetEnableDeleteWhenEmpty\", true).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"tabSetEnableDrop\", true).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"tabSetEnableDrag\", true).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"tabSetEnableDivide\", true).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"tabSetEnableMaximize\", true).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"tabSetEnableClose\", false).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"tabSetAutoSelectTab\", true).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"tabSetClassNameTabStrip\", undefined).setType(Attribute.STRING);\n        attributeDefinitions.add(\"tabSetClassNameHeader\", undefined).setType(Attribute.STRING);\n        attributeDefinitions.add(\"tabSetEnableTabStrip\", true).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"tabSetHeaderHeight\", 0).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"tabSetTabStripHeight\", 0).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"tabSetMarginInsets\", { top: 0, right: 0, bottom: 0, left: 0 })\n            .setType(\"IInsets\");\n        attributeDefinitions.add(\"tabSetBorderInsets\", { top: 0, right: 0, bottom: 0, left: 0 })\n            .setType(\"IInsets\");\n        attributeDefinitions.add(\"tabSetTabLocation\", \"top\").setType(\"ITabLocation\");\n        attributeDefinitions.add(\"tabSetMinWidth\", 0).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"tabSetMinHeight\", 0).setType(Attribute.NUMBER);\n\n        // border\n        attributeDefinitions.add(\"borderSize\", 200).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"borderMinSize\", 0).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"borderBarSize\", 0).setType(Attribute.NUMBER);\n        attributeDefinitions.add(\"borderEnableDrop\", true).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"borderAutoSelectTabWhenOpen\", true).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"borderAutoSelectTabWhenClosed\", false).setType(Attribute.BOOLEAN);\n        attributeDefinitions.add(\"borderClassName\", undefined).setType(Attribute.STRING);\n        attributeDefinitions.add(\"borderEnableAutoHide\", false).setType(Attribute.BOOLEAN);\n\n        return attributeDefinitions;\n    }\n\n    /** @internal */\n    private _attributes: Record<string, any>;\n    /** @internal */\n    private _idMap: Record<string, Node>;\n    /** @internal */\n    private _changeListener?: (action: Action) => void;\n    /** @internal */\n    private _root?: RowNode;\n    /** @internal */\n    private _borders: BorderSet;\n    /** @internal */\n    private _onAllowDrop?: (dragNode: Node, dropInfo: DropInfo) => boolean;\n    /** @internal */\n    private _maximizedTabSet?: TabSetNode;\n    /** @internal */\n    private _activeTabSet?: TabSetNode;\n    /** @internal */\n    private _borderRects: { inner: Rect; outer: Rect } = { inner: Rect.empty(), outer: Rect.empty() };\n    /** @internal */\n    private _pointerFine: boolean;\n    /** @internal */\n    private _onCreateTabSet?: (tabNode?: TabNode) => ITabSetAttributes;\n    /** @internal */\n    private _showHiddenBorder: DockLocation;\n\n\n    /**\n     * 'private' constructor. Use the static method Model.fromJson(json) to create a model\n     *  @internal\n     */\n\n    private constructor() {\n        this._attributes = {};\n        this._idMap = {};\n        this._borders = new BorderSet(this);\n        this._pointerFine = true;\n        this._showHiddenBorder = DockLocation.CENTER;\n    }\n\n    /** @internal */\n    _setChangeListener(listener: ((action: Action) => void) | undefined) {\n        this._changeListener = listener;\n    }\n\n    /**\n     * Get the currently active tabset node\n     */\n    getActiveTabset() {\n        if (this._activeTabSet && this.getNodeById(this._activeTabSet.getId())) {\n            return this._activeTabSet;\n        } else {\n            return undefined;\n        }\n    }\n\n    /** @internal */\n    _getShowHiddenBorder() {\n        return this._showHiddenBorder;\n    }\n\n    /** @internal */\n    _setShowHiddenBorder(location: DockLocation) {\n        this._showHiddenBorder = location;\n    }\n\n    /** @internal */\n    _setActiveTabset(tabsetNode: TabSetNode | undefined) {\n        this._activeTabSet = tabsetNode;\n    }\n\n    /**\n     * Get the currently maximized tabset node\n     */\n    getMaximizedTabset() {\n        return this._maximizedTabSet;\n    }\n\n    /** @internal */\n    _setMaximizedTabset(tabsetNode: (TabSetNode | undefined)) {\n        this._maximizedTabSet = tabsetNode;\n    }\n\n    /**\n     * Gets the root RowNode of the model\n     * @returns {RowNode}\n     */\n    getRoot() {\n        return this._root as RowNode;\n    }\n\n    isRootOrientationVertical() {\n        return this._attributes.rootOrientationVertical as boolean;\n    }\n\n    isUseVisibility() {\n        return this._attributes.enableUseVisibility as boolean;\n    }\n\n    /**\n     * Gets the\n     * @returns {BorderSet|*}\n     */\n    getBorderSet() {\n        return this._borders;\n    }\n\n    /** @internal */\n    _getOuterInnerRects() {\n        return this._borderRects;\n    }\n\n    /** @internal */\n    _getPointerFine() {\n        return this._pointerFine;\n    }\n\n    /** @internal */\n    _setPointerFine(pointerFine: boolean) {\n        this._pointerFine = pointerFine;\n    }\n\n    /**\n     * Visits all the nodes in the model and calls the given function for each\n     * @param fn a function that takes visited node and a integer level as parameters\n     */\n    visitNodes(fn: (node: Node, level: number) => void) {\n        this._borders._forEachNode(fn);\n        (this._root as RowNode)._forEachNode(fn, 0);\n    }\n\n    /**\n     * Gets a node by its id\n     * @param id the id to find\n     */\n    getNodeById(id: string): Node | undefined {\n        return this._idMap[id];\n    }\n\n    /**\n     * Update the node tree by performing the given action,\n     * Actions should be generated via static methods on the Actions class\n     * @param action the action to perform\n     * @returns added Node for Actions.addNode; undefined otherwise\n     */\n    doAction(action: Action): Node | undefined {\n        let returnVal = undefined;\n        // console.log(action);\n        switch (action.type) {\n            case Actions.ADD_NODE: {\n                const newNode = new TabNode(this, action.data.json, true);\n                const toNode = this._idMap[action.data.toNode] as Node & IDraggable;\n                if (toNode instanceof TabSetNode || toNode instanceof BorderNode || toNode instanceof RowNode) {\n                    toNode.drop(newNode, DockLocation.getByName(action.data.location), action.data.index, action.data.select);\n                    returnVal = newNode;\n                }\n                break;\n            }\n            case Actions.MOVE_NODE: {\n                const fromNode = this._idMap[action.data.fromNode] as Node & IDraggable;\n                if (fromNode instanceof TabNode || fromNode instanceof TabSetNode) {\n                    const toNode = this._idMap[action.data.toNode] as Node & IDropTarget;\n                    if (toNode instanceof TabSetNode || toNode instanceof BorderNode || toNode instanceof RowNode) {\n                        toNode.drop(fromNode, DockLocation.getByName(action.data.location), action.data.index, action.data.select);\n                    }\n                }\n                break;\n            }\n            case Actions.DELETE_TAB: {\n                const node = this._idMap[action.data.node];\n                if (node instanceof TabNode) {\n                    node._delete();\n                }\n                break;\n            }\n            case Actions.DELETE_TABSET: {\n                const node = this._idMap[action.data.node];\n\n                if (node instanceof TabSetNode) {\n                    // first delete all child tabs that are closeable\n                    const children = [...node.getChildren()];\n                    for (let i = 0; i < children.length; i++) {\n                        const child = children[i];\n                        if ((child as TabNode).isEnableClose()) {\n                            (child as TabNode)._delete();\n                        }\n                    }\n\n                    if (node.getChildren().length === 0) {\n                        node._delete();\n                    }\n                    this._tidy();\n                }\n                break;\n            }\n            case Actions.FLOAT_TAB: {\n                const node = this._idMap[action.data.node];\n                if (node instanceof TabNode) {\n                    node._setFloating(true);\n                    adjustSelectedIndexAfterFloat(node);\n                }\n                break;\n            }\n            case Actions.UNFLOAT_TAB: {\n                const node = this._idMap[action.data.node];\n                if (node instanceof TabNode) {\n                    node._setFloating(false);\n                    adjustSelectedIndexAfterDock(node);\n                }\n                break;\n            }\n            case Actions.RENAME_TAB: {\n                const node = this._idMap[action.data.node];\n                if (node instanceof TabNode) {\n                    node._setName(action.data.text);\n                }\n                break;\n            }\n            case Actions.SELECT_TAB: {\n                const tabNode = this._idMap[action.data.tabNode];\n                if (tabNode instanceof TabNode) {\n                    const parent = tabNode.getParent() as Node;\n                    const pos = parent.getChildren().indexOf(tabNode);\n\n                    if (parent instanceof BorderNode) {\n                        if (parent.getSelected() === pos) {\n                            parent._setSelected(-1);\n                        } else {\n                            parent._setSelected(pos);\n                        }\n                    } else if (parent instanceof TabSetNode) {\n                        if (parent.getSelected() !== pos) {\n                            parent._setSelected(pos);\n                        }\n                        this._activeTabSet = parent;\n                    }\n                }\n                break;\n            }\n            case Actions.SET_ACTIVE_TABSET: {\n                const tabsetNode = this._idMap[action.data.tabsetNode];\n                if (tabsetNode instanceof TabSetNode) {\n                    this._activeTabSet = tabsetNode;\n                }\n                break;\n            }\n            case Actions.ADJUST_SPLIT: {\n                const node1 = this._idMap[action.data.node1];\n                const node2 = this._idMap[action.data.node2];\n\n                if ((node1 instanceof TabSetNode || node1 instanceof RowNode) && (node2 instanceof TabSetNode || node2 instanceof RowNode)) {\n                    this._adjustSplitSide(node1, action.data.weight1, action.data.pixelWidth1);\n                    this._adjustSplitSide(node2, action.data.weight2, action.data.pixelWidth2);\n                }\n                break;\n            }\n            case Actions.ADJUST_BORDER_SPLIT: {\n                const node = this._idMap[action.data.node];\n                if (node instanceof BorderNode) {\n                    node._setSize(action.data.pos);\n                }\n                break;\n            }\n            case Actions.MAXIMIZE_TOGGLE: {\n                const node = this._idMap[action.data.node];\n                if (node instanceof TabSetNode) {\n                    if (node === this._maximizedTabSet) {\n                        this._maximizedTabSet = undefined;\n                    } else {\n                        this._maximizedTabSet = node;\n                        this._activeTabSet = node;\n                    }\n                }\n\n                break;\n            }\n            case Actions.UPDATE_MODEL_ATTRIBUTES: {\n                this._updateAttrs(action.data.json);\n                break;\n            }\n\n            case Actions.UPDATE_NODE_ATTRIBUTES: {\n                const node = this._idMap[action.data.node];\n                node._updateAttrs(action.data.json);\n                break;\n            }\n            default:\n                break;\n        }\n\n        this._updateIdMap();\n\n        if (this._changeListener !== undefined) {\n            this._changeListener(action);\n        }\n\n        return returnVal;\n    }\n\n    /** @internal */\n    _updateIdMap() {\n        // regenerate idMap to stop it building up\n        this._idMap = {};\n        this.visitNodes((node) => (this._idMap[node.getId()] = node));\n        // console.log(JSON.stringify(Object.keys(this._idMap)));\n    }\n\n    /** @internal */\n    _adjustSplitSide(node: TabSetNode | RowNode, weight: number, pixels: number) {\n        node._setWeight(weight);\n        if (node.getWidth() != null && node.getOrientation() === Orientation.VERT) {\n            node._updateAttrs({ width: pixels });\n        } else if (node.getHeight() != null && node.getOrientation() === Orientation.HORZ) {\n            node._updateAttrs({ height: pixels });\n        }\n    }\n\n    /**\n     * Converts the model to a json object\n     * @returns {IJsonModel} json object that represents this model\n     */\n    toJson(): IJsonModel {\n        const global: any = {};\n        Model._attributeDefinitions.toJson(global, this._attributes);\n\n        // save state of nodes\n        this.visitNodes((node) => {\n            node._fireEvent(\"save\", undefined);\n        });\n\n        return { global, borders: this._borders._toJson(), layout: (this._root as RowNode).toJson() };\n    }\n\n    getSplitterSize() {\n        let splitterSize = this._attributes.splitterSize as number;\n        if (splitterSize === -1) {\n            // use defaults\n            splitterSize = this._pointerFine ? 8 : 12; // larger for mobile\n        }\n        return splitterSize;\n    }\n\n    isLegacyOverflowMenu() {\n        return this._attributes.legacyOverflowMenu as boolean;\n    }\n\n    getSplitterExtra() {\n        return this._attributes.splitterExtra as number;\n    }\n\n    isEnableEdgeDock() {\n        return this._attributes.enableEdgeDock as boolean;\n    }\n\n    /** @internal */\n    _addNode(node: Node) {\n        const id = node.getId();\n        if (this._idMap[id] !== undefined) {\n            throw new Error(`Error: each node must have a unique id, duplicate id:${node.getId()}`);\n        }\n\n        if (node.getType() !== \"splitter\") {\n            this._idMap[id] = node;\n        }\n    }\n\n    /** @internal */\n    _layout(rect: Rect, metrics: ILayoutMetrics) {\n        // let start = Date.now();\n        this._borderRects = this._borders._layoutBorder({ outer: rect, inner: rect }, metrics);\n        rect = this._borderRects.inner.removeInsets(this._getAttribute(\"marginInsets\"));\n\n        this._root?.calcMinSize();\n        (this._root as RowNode)._layout(rect, metrics);\n        // console.log(\"layout time: \" + (Date.now() - start));\n        return rect;\n    }\n\n    /** @internal */\n    _findDropTargetNode(dragNode: Node & IDraggable, x: number, y: number) {\n        let node = (this._root as RowNode)._findDropTargetNode(dragNode, x, y);\n        if (node === undefined) {\n            node = this._borders._findDropTargetNode(dragNode, x, y);\n        }\n        return node;\n    }\n\n    /** @internal */\n    _tidy() {\n        // console.log(\"before _tidy\", this.toString());\n        (this._root as RowNode)._tidy();\n        // console.log(\"after _tidy\", this.toString());\n    }\n\n    /** @internal */\n    _updateAttrs(json: any) {\n        Model._attributeDefinitions.update(json, this._attributes);\n    }\n\n    /** @internal */\n    _nextUniqueId() {\n        return '#' + randomUUID();\n    }\n\n    /** @internal */\n    _getAttribute(name: string): any {\n        return this._attributes[name];\n    }\n\n    /**\n     * Sets a function to allow/deny dropping a node\n     * @param onAllowDrop function that takes the drag node and DropInfo and returns true if the drop is allowed\n     */\n    setOnAllowDrop(onAllowDrop: (dragNode: Node, dropInfo: DropInfo) => boolean) {\n        this._onAllowDrop = onAllowDrop;\n    }\n\n    /** @internal */\n    _getOnAllowDrop() {\n        return this._onAllowDrop;\n    }\n\n    /**\n     * set callback called when a new TabSet is created.\n     * The tabNode can be undefined if it's the auto created first tabset in the root row (when the last\n     * tab is deleted, the root tabset can be recreated)\n     * @param onCreateTabSet \n     */\n    setOnCreateTabSet(onCreateTabSet: (tabNode?: TabNode) => ITabSetAttributes) {\n        this._onCreateTabSet = onCreateTabSet;\n    }\n\n    /** @internal */\n    _getOnCreateTabSet() {\n        return this._onCreateTabSet;\n    }\n\n    static toTypescriptInterfaces() {\n        console.log(Model._attributeDefinitions.toTypescriptInterface(\"Global\", undefined));\n        console.log(RowNode.getAttributeDefinitions().toTypescriptInterface(\"Row\", Model._attributeDefinitions));\n        console.log(TabSetNode.getAttributeDefinitions().toTypescriptInterface(\"TabSet\", Model._attributeDefinitions));\n        console.log(TabNode.getAttributeDefinitions().toTypescriptInterface(\"Tab\", Model._attributeDefinitions));\n        console.log(BorderNode.getAttributeDefinitions().toTypescriptInterface(\"Border\", Model._attributeDefinitions));\n    }\n\n    toString() {\n        return JSON.stringify(this.toJson());\n    }\n}\n\n","import { IBorderLocation } from \"./Layout\";\n\nexport default {\n  global: {\n    // https://github.com/caplin/FlexLayout#global-config-attributes\n    enableEdgeDock: false,\n\n    splitterSize: 5,\n\n    tabEnableClose: false,\n    tabEnableRename: false,\n    tabEnableFloat: false,\n    tabEnableRenderOnDemand: true,\n    tabEnableDrag: true,\n\n    tabSetEnableClose: false,\n    tabSetEnableMaximize: false,\n    tabSetEnableDrop: true,\n  },\n  borders: [\n    {\n      type: \"border\",\n      location: \"right\" as IBorderLocation,\n      size: 320,\n      barSize: -1, // Hide border tabset header\n      // selected: 0, // Open\n      children: [\n        {\n            type: \"tab\",\n            id: 'library',\n            name: \"Library\",\n            component: '',\n        },\n        {\n          type: \"tab\",\n          id: 'support',\n          name: \"Support\",\n          component: '',\n        },\n      ]\n    },\n  ],\n  layout: {\n    type: 'row',\n    weight: 100,\n    children: [\n      {\n        type: 'row',\n        weight: 50,\n        children: [\n          {\n            type: 'tabset',\n            weight: 20,\n            children: [\n              {\n                  type: \"tab\",\n                  name: \"Overview\",\n                  component: \"grid\",\n              },\n            ]\n          },\n          {\n            type: 'tabset',\n            weight: 80,\n            children: [\n              {\n                type: 'tab',\n                name: 'Template',\n                component: 'editor',\n              },\n              {\n                type: 'tab',\n                name: 'Style',\n                component: 'editor',\n              },\n              {\n                type: 'tab',\n                name: 'Script',\n                component: 'editor',\n              },\n              {\n                type: 'tab',\n                name: 'Controls',\n                component: 'editor',\n              },\n              {\n                type: 'tab',\n                name: 'Assets',\n                component: 'assets',\n              },\n              {\n                type: 'tab',\n                name: 'Location',\n                component: 'location',\n              },\n\n            ]\n          },\n    \n        ]\n      },\n      {\n        type: 'row',\n        weight: 50,\n        children: [\n          {\n            type: 'tabset',\n            weight: 100,\n            children: [\n              {\n                type: 'tab',\n                name: 'Preview',\n                component: 'preview',\n                enableClose: false,\n                enableRename: false,\n                enableFloat: true\n              },\n            ]\n          },\n          // {\n          //   type: 'tabset',\n          //   weight: 100,\n          //   children: [\n          //   ]\n          // },    \n        ]\n      }\n    ]\n  }\n}\n","import * as React from 'react'\nimport { memo, useEffect, useRef } from 'react'\n\nexport const typeToLang = {\n  template: 'html',\n  style: 'sass',\n  script: 'javascript',\n  control: 'html',\n}\n\nexport const editorByType = {}\n\nexport const Editor = memo(({ type, node, content, focusOnMount = false }) => {\n\n  const ref = useRef()\n\n  useEffect(() => {\n\n    ;(async () => {\n\n      const { CodeEditor } = window?.Tangible?.TemplateSystem\n\n      // console.log('Mount editor', type, ref)\n      const el = ref.current\n      // Set container to flex so the editor can fill height 100%\n      el.style = 'display: flex; flex-direction: column; height: 100%;'\n  \n      const editor = await CodeEditor.create({\n        el,\n        lang: typeToLang[ type ] || 'html',\n        content,\n        editorActionsPanel: false,\n      })\n  \n      editorByType[type] = editor\n  \n      // Used to focus editor on tab select\n      editor.node = node\n  \n      if (focusOnMount) editor.view.focus()\n        \n    })().catch(console.error)\n\n  }, [ref])\n\n  return <div ref={ref}></div>\n})\n\n","import * as React from 'react'\nimport { memo, useEffect, useRef } from 'react'\n// import { startPlaygroundWeb } from '@wp-playground/client'\n\nexport const Preview = memo(({ type, node, onPreviewerReady }) => {\n\n  const ref = useRef()\n\n  useEffect(() => {\n\n    const el = ref.current\n\n    console.log('Previewer mount', el)\n\n    return\n\n    const iframe = document.createElement('iframe')\n\n    iframe.width = '100%'\n    iframe.height = iframe.height || '480px'\n    iframe.style = 'border: none'\n    el.append(iframe)  \n\n    const server = \n      'https://playground.wordpress.net'\n      // 'http://localhost:3000'\n\n    console.log('iframe', iframe)\n    console.log('server', server)\n  \n    const blueprint = {\n      steps: [\n        { step: 'login', username: 'admin', password: 'password' },\n      ]\n    }\n\n    start({\n      iframe,\n      // server,\n      remoteUrl: `${server}/remote.html`,\n  \n      // blueprint: {\n      //   landingPage: '/',\n      //   preferredVersions: {\n      //     php: '8.0',\n      //     wp: '6.2'\n      //   },\n      //   // disableProgressBar: true,\n      //   ...blueprint\n      // }\n    })\n      .then(function() {\n        console.log('playground ready')\n      })\n      .catch(console.error)\n    \n  }, [])\n\n  return <div className='ide-component' ref={ref}></div>\n})\n\nasync function start(options) {\n  console.log('start', options)\n  const playground = await startPlaygroundWeb(options)\n\n  console.log('playground', playground)\n\n  await playground.isReady()\n  \n  return playground\n}\n\n","import * as React from 'react'\nimport { memo } from 'react'\n\nexport const Assets = memo(({ type, node }) => {\n  return <div className='ide-component'>\n    \n  </div>\n})\n","import * as React from 'react'\nimport { memo } from 'react'\n\nexport const Location = memo(({ type, node }) => {\n  return <div className='ide-component'>\n    \n  </div>\n})\n","import * as React from 'react'\nimport { memo } from 'react'\n\nexport const Library = memo(({ type, node }) => {\n  return <div className='ide-component'>\n\n    <h2>Local</h2>\n\n    <p>List of templates</p>\n\n    <h2>Cloud</h2>\n\n    <p>Catalog</p>\n\n  </div>\n})\n","import * as React from 'react'\nimport { memo } from 'react'\n\nexport const Support = memo(({ type, node }) => {\n  return <div className='ide-component'>\n\n  <h2>Keyboard Shortcuts</h2>\n\n  <p>Ctrl or CMD + SPACE - Autocomplete</p>\n\n  <h2>Language Reference</h2>\n\n  </div>\n})\n","import * as  React from 'react'\n\n// https://icon-sets.iconify.design/dashicons\n// https://github.com/WordPress/gutenberg/tree/trunk/packages/icons/src/library\n\nexport const IconFullScreenOpen = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"currentColor\" d=\"M7 2H2v5l1.8-1.8L6.5 8L8 6.5L5.2 3.8L7 2zm6 0l1.8 1.8L12 6.5L13.5 8l2.7-2.7L18 7V2h-5zm.5 10L12 13.5l2.7 2.7L13 18h5v-5l-1.8 1.8l-2.7-2.8zm-7 0l-2.7 2.7L2 13v5h5l-1.8-1.8L8 13.5L6.5 12z\"/></svg>\n\nexport const IconFullScreenClose = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\"><path fill=\"currentColor\" d=\"M3.4 2L2 3.4l2.8 2.8L3 8h5V3L6.2 4.8L3.4 2zm11.8 4.2L18 3.4L16.6 2l-2.8 2.8L12 3v5h5l-1.8-1.8zM4.8 13.8L2 16.6L3.4 18l2.8-2.8L8 17v-5H3l1.8 1.8zM17 12h-5v5l1.8-1.8l2.8 2.8l1.4-1.4l-2.8-2.8L17 12z\"/></svg>\n","import * as React from 'react'\nimport { useState, useMemo } from 'react'\nimport * as Layout from '../Layout'\nimport { IconFullScreenOpen, IconFullScreenClose } from '../icons'\n\nenum ScreenSize {\n  Default,\n  Full,\n  FullScreen\n}\n\n// See ./index.scss\nconst fullScreenClassName = 'tangible-template-system-builder-expanded'\n\nfunction updateFullScreenClass(isFullScreen: boolean) {\n  const $html = document.documentElement\n  if (isFullScreen) {\n    $html.classList.add(fullScreenClassName)\n  } else {\n    $html.classList.remove(fullScreenClassName)\n  }\n\n  window.dispatchEvent(new Event('resize')) // For WP admin menu to recalculate its height\n}\n\nexport function Header({\n  layoutModel,\n  ideElement\n}) {\n\n  const [screenSize, _setScreenSize] = useState(ScreenSize.Default)\n  const setScreenSize = useMemo(() => function(size) {\n    function update() {\n      updateFullScreenClass(\n        size===ScreenSize.Full || size===ScreenSize.FullScreen\n      )\n      _setScreenSize(size)\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n    if (size===ScreenSize.FullScreen) {\n      if (!document.fullscreenElement) {\n        ideElement.requestFullscreen()\n          .then(update)\n          .catch(e => {\n            // Refused\n          })\n          return\n      }\n    } else if (document.fullscreenElement) {\n      document.exitFullscreen()\n    }\n\n    update()\n\n  }, [_setScreenSize])\n\n  return <div className='ide-header'>\n    <div className=\"ide-header--title\">\n      <input type=\"text\" value=\"Template name\" />\n    </div>\n    <div className=\"ide-header--actions\">\n\n      <button className='ide-header--action'>Save</button>\n      <button className='ide-header--action'\n      >Format</button>\n      <button className='ide-header--action'\n      >Export</button>\n      {/* <button className='ide-header--action'\n      >Import</button> */}\n\n      <div className='ide-header--action-separator'></div>\n\n      <button className='ide-header--action'\n        onClick={() => {\n          layoutModel.doAction(Layout.Actions.selectTab('library'))\n        }}\n      >Library</button>\n      <button className='ide-header--action'\n        onClick={() => {\n          layoutModel.doAction(Layout.Actions.selectTab('support'))\n        }}\n      >Support</button>\n\n      { screenSize===ScreenSize.FullScreen\n        ? <button className='ide-header--action ide-header--action-with-icon'\n          onClick={() => setScreenSize(ScreenSize.Default) }\n        ><IconFullScreenClose /></button>\n        : <>\n          { screenSize===ScreenSize.Full &&\n            <button className='ide-header--action ide-header--action-with-icon'\n            onClick={() => setScreenSize( ScreenSize.FullScreen ) }\n            alt='Full Screen'\n            ><IconFullScreenOpen /></button>\n          }\n          { screenSize===ScreenSize.Default &&\n            <button className='ide-header--action ide-header--action-with-icon'\n              onClick={() => setScreenSize( ScreenSize.Full ) }\n              alt='Expand'\n            ><IconFullScreenOpen /></button>\n        }\n        { screenSize===ScreenSize.Full &&\n          <button className='ide-header--action ide-header--action-with-icon'\n            onClick={() => setScreenSize( ScreenSize.Default )}\n            alt='Shrink'\n          ><IconFullScreenClose /></button>\n        }\n        </>\n      }\n\n    </div>\n  </div>\n}\n","import * as React from 'react'\nimport { memo, useRef, useEffect } from 'react'\nimport { render } from 'react-dom'\n// import { createRoot } from 'react-dom/client'\nimport * as Layout from './Layout'\nimport layoutModelData from './model'\n\nimport { Editor, editorByType, typeToLang } from './Editor'\nimport { Preview } from './Preview'\nimport { Assets } from './Assets'\nimport { Location } from './Location'\nimport { Library } from './Library'\nimport { Support } from './Support'\nimport { Header } from './Header'\n\n/**\n * WordPress-specific integration\n */\nconst { CodeEditor } = window?.Tangible?.TemplateSystem\n\nlet ideElement = document.getElementById('tangible-template-system-builder')\n\nif (!ideElement) {\n  ideElement = document.createElement('div')\n  ideElement.id = 'tangible-template-system-builder'\n  document.body.prepend(ideElement) // Prepend for absolute screen position\n}\n\n\n\n// const root = createRoot(ideElement)\n\nconst templatePost = {\n  // content, style, script, controls, ..\n}\n\nconst layoutModel = Layout.Model.fromJson(layoutModelData)\n\nlet selectedTabNodeId = ''\n\nconst layoutComponents = {\n  Library,\n  Support,\n\n  Editor,\n  Preview,\n  Assets,\n  Location,\n}\n\nconst componentByNodeId = {\n  // [nodeId]: { name, node }\n}\n\nconst getNodeId = (node) => node._getAttr('id') // TODO: Make this public\n\nconst componentFactory = (node: Layout.TabNode) => {\n  const component = node.getComponent()\n  // const config = node.getConfig()\n\n  const nodeId = getNodeId(node)\n  const title = node.getName()\n  const slug = title.toLowerCase()\n\n  componentByNodeId[nodeId] = {\n    name: component,\n    node,\n  }\n\n  // console.log('component', name, node)\n\n  if (component === 'editor') {\n    return (\n      <Editor\n        type={slug}\n        node={node}\n        content={templatePost[slug] || ''}\n        focusOnMount={nodeId === selectedTabNodeId}\n      />\n    )\n  }\n\n  if (layoutComponents[title]) {\n    const LayoutComponent = layoutComponents[title]\n    return <LayoutComponent node={node} />\n  }\n}\n\nconst onAction = (action: Layout.Action) => {\n  // console.log('onAction', action)\n\n  const { type, data } = action\n\n  if (type === 'FlexLayout_SelectTab' && data.tabNode) {\n    const nodeId = data.tabNode\n\n    selectedTabNodeId = nodeId\n\n    // Find component by node ID\n    // const component = componentByNodeId[ nodeId ]\n\n    // Find editor by node ID\n\n    for (const [type, editor] of Object.entries(editorByType)) {\n      if (getNodeId(editor.node) === nodeId) {\n        // Focus editor on next render, after tab is selected and focused\n\n        setTimeout(() => {\n          editor.view.focus()\n        }, 0)\n        break\n      }\n    }\n  }\n\n  return action\n}\n\nconst onModelChange = (model: Layout.Model) => {\n  // console.log('onModelChange', model)\n}\n\nconst tabsWithFormat = ['Template', 'Style', 'Script']\n\nconst tabsetMap = {}\nconst tabMap = {\n  // name: { id }\n}\n\nconst onRenderTabSet = (node, renderState) => {\n  const tabset = node._attributes || {}\n  // console.log('onRenderTabSet', tabset, node.getConfig())\n\n  // Show actions for current visible tab\n\n  for (const childNode of node.getChildren()) {\n    // On initial render of tabset, editors are not ready yet\n\n    const { id, name } = childNode._attributes || {}\n    const type = name.toLowerCase()\n    const lang = typeToLang[type]\n\n    tabMap[type] = { id, lang }\n\n    return\n\n    if (lang && childNode._visible) {\n      const { buttons } = renderState\n\n      buttons.push(\n        <button\n          className=\"tab-action\"\n          onClick={() => {\n            const editor = editorByType[type]\n            if (!editor) return\n            formatCode({\n              lang,\n              editor,\n            })\n          }}\n        >\n          Format\n        </button>,\n      )\n    }\n\n    break\n  }\n}\n\nasync function formatCode({ lang, editor }) {\n  // Note: Use editor.view.state, since editor.state.doc is empty or stale\n  const content = editor.view.state.doc.toString()\n\n  try {\n    const formattedCode = await editor.format({\n      lang,\n      content,\n    })\n\n    const cursorPosition = !formattedCode\n      ? 0\n      : Math.min(\n          editor.view.state.selection.ranges[0].from,\n          formattedCode.length - 1,\n        )\n\n    /**\n     * Replace content\n     */\n    editor.view.dispatch({\n      changes: {\n        from: 0,\n        to: content.length,\n        insert: formattedCode,\n      },\n    })\n\n    editor.view.focus()\n\n    // Restore cursor\n    editor.view.dispatch({\n      selection: {\n        anchor: cursorPosition,\n        head: cursorPosition,\n      },\n    })\n  } catch (error) {\n    // TODO: Map error to lint gutter\n    console.error(error)\n  }\n}\n\ndocument.documentElement.classList.add('tangible-template-system-builder-expanded')\n\nconst App = () => {\n  useEffect(() => {\n    document.body.classList.add('ide-loaded')\n  }, [])\n  return (\n    <>\n      <Header layoutModel={layoutModel} ideElement={ideElement} />\n      <div className=\"ide-main\">\n        <Layout.Layout\n          model={layoutModel}\n          factory={componentFactory}\n          onAction={onAction}\n          onModelChange={onModelChange}\n          onRenderTabSet={onRenderTabSet}\n          // https://github.com/caplin/FlexLayout#optional-props\n          realtimeResize={true}\n          supportsPopout={false}\n        />\n      </div>\n    </>\n  )\n}\n\n// root.render(\nrender(<App />, ideElement)\n"],"names":["__publicField","__name","CLASSES","I18nLabel","ICloseType","Layout.Actions","Layout.Model","Layout.Layout"],"mappings":"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"}