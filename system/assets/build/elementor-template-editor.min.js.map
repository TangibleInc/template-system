{"version":3,"file":"elementor-template-editor.min.js.map","sources":["../src/elementor-template-editor/index.js"],"sourcesContent":["/**\n * Template editor widget for Elementor\n * Similar to Gutenberg block in ../gutenberg/blocks/template.js\n * Widget is rendered in /integrations/elementor/template-editor-control.php\n *\n * https://developers.elementor.com/creating-a-new-control#Control_JS_file\n */\n\nconst { jQuery } = window\n\njQuery(document).ready(function ($) {\n  const { Tangible, elementor } = window\n  const { createCodeEditor } = Tangible\n\n  const refreshInterval = 1000\n\n  elementor.once('preview:loaded', function () {\n\n    const { elementorFrontend = {} } = window\n\n    const previewWindow = elementor?.$preview[ 0 ]?.contentWindow\n    const $previewBody = elementorFrontend?.elements?.$body\n\n    function refreshPreview() {\n\n      const previewModuleLoader = previewWindow?.Tangible?.moduleLoader\n      if (!previewModuleLoader || !$previewBody || !$previewBody.length) return\n\n      const $modules = $previewBody.find('.tangible-dynamic-module')\n      const key = '_tangibleDynamicModuleActivated'\n\n      $modules.each(function () {\n        if (this[key]) return\n        this[key] = true\n        previewModuleLoader(this)\n      })\n    }\n\n    setInterval(refreshPreview, refreshInterval)\n  })\n\n\n  // Controls\n  const templateEditorControl = elementor.modules.controls.BaseData.extend({\n\n    onReady: function () {\n\n      // this = { el, $el, model, ui, .. }\n\n      this.unsubscribers = []\n\n      // Create code editor instance\n\n      const textarea = this.$el.find(\n        '.tangible-elementor-template-editor-textarea'\n      )[0]\n      if (!textarea) return\n\n      const editor = createCodeEditor(textarea, {\n        language: 'html',\n        viewportMargin: Infinity, // With .CodeMirror height: auto or 100%\n        resizable: false,\n        lineWrapping: true,\n\n        extraKeys: {\n          'Alt-F': 'findPersistent',\n          Enter: 'emmetInsertLineBreak',\n          'Ctrl-Space': 'autocomplete',\n        },\n      })\n\n      editor.setSize(null, '100%') // Prevent width resize, scroll instead\n\n      // Trick to fix initial CodeMirror styling\n      setTimeout(function () {\n        editor.refresh()\n        editor.focus()\n      }, 0)\n\n      // Preview refresh logic\n\n      let shouldRefresh = false\n\n      editor.on('change', () => {\n        shouldRefresh = true\n\n        /**\n         * Saving field value on every key press is too heavy, because the preview\n         * is rendered server-side.\n         */\n        // const value = editor.getValue()\n        // this.setValue( value )\n      })\n\n      const refreshTimer = setInterval(() => {\n\n        if (!shouldRefresh) return\n        shouldRefresh = false\n\n        // Update field value\n        this.setValue(editor.getValue())\n\n        shouldRefresh = false\n\n      }, refreshInterval)\n\n      // Clean up\n      this.unsubscribers.push(function () {\n        clearInterval(refreshTimer)\n      })\n    },\n\n    saveValue() {\n      this.setValue(\n        this.codeEditor ? this.codeEditor.getValue() : this.textarea.value\n      )\n    },\n\n    onBeforeDestroy: function () {\n      this.unsubscribers.forEach((unsubscribe) => unsubscribe())\n    },\n  })\n\n  elementor.addControlView('tangible-template-editor', templateEditorControl)\n})\n"],"names":["jQuery","$","Tangible","elementor","createCodeEditor","refreshInterval","elementorFrontend","previewWindow","_a","$previewBody","_b","refreshPreview","previewModuleLoader","$modules","key","__name","templateEditorControl","textarea","editor","shouldRefresh","refreshTimer","unsubscribe"],"mappings":"oXAQA,KAAM,CAAE,OAAAA,CAAO,EAAI,OAEnBA,EAAO,QAAQ,EAAE,MAAM,SAAUC,EAAG,CAClC,KAAM,CAAE,SAAAC,EAAU,UAAAC,CAAU,EAAI,OAC1B,CAAE,iBAAAC,CAAiB,EAAIF,EAEvBG,EAAkB,IAExBF,EAAU,KAAK,iBAAkB,UAAY,SAE3C,KAAM,CAAE,kBAAAG,EAAoB,CAAA,CAAG,EAAI,OAE7BC,GAAgBC,EAAAL,GAAA,KAAAA,OAAAA,EAAW,SAAU,CAAA,IAArB,KAAAK,OAAAA,EAA0B,cAC1CC,GAAeC,EAAAJ,GAAA,KAAAA,OAAAA,EAAmB,WAAnB,KAAA,OAAAI,EAA6B,MAElD,SAASC,GAAiB,OAExB,MAAMC,GAAsBJ,EAAAD,GAAA,KAAAA,OAAAA,EAAe,WAAf,KAAA,OAAAC,EAAyB,aACrD,GAAI,CAACI,GAAuB,CAACH,GAAgB,CAACA,EAAa,OAAQ,OAEnE,MAAMI,EAAWJ,EAAa,KAAK,0BAA0B,EACvDK,EAAM,kCAEZD,EAAS,KAAK,UAAY,CACpB,KAAKC,CAAG,IACZ,KAAKA,CAAG,EAAI,GACZF,EAAoB,IAAI,EAC1B,CAAC,CACH,CAbSD,EAAAA,EAAAA,KAAAI,EAAAJ,EAAA,gBAAA,EAeT,YAAYA,EAAgBN,CAAe,CAC7C,CAAC,EAID,MAAMW,EAAwBb,EAAU,QAAQ,SAAS,SAAS,OAAO,CAEvE,QAAS,UAAY,CAInB,KAAK,cAAgB,CAAA,EAIrB,MAAMc,EAAW,KAAK,IAAI,KACxB,8CACF,EAAE,CAAC,EACH,GAAI,CAACA,EAAU,OAEf,MAAMC,EAASd,EAAiBa,EAAU,CACxC,SAAU,OACV,eAAgB,EAAA,EAChB,UAAW,GACX,aAAc,GAEd,UAAW,CACT,QAAS,iBACT,MAAO,uBACP,aAAc,cAChB,CACF,CAAC,EAEDC,EAAO,QAAQ,KAAM,MAAM,EAG3B,WAAW,UAAY,CACrBA,EAAO,QAAQ,EACfA,EAAO,MAAA,CACT,EAAG,CAAC,EAIJ,IAAIC,EAAgB,GAEpBD,EAAO,GAAG,SAAU,IAAM,CACxBC,EAAgB,EAQlB,CAAC,EAED,MAAMC,EAAe,YAAY,IAAM,CAEhCD,IACLA,EAAgB,GAGhB,KAAK,SAASD,EAAO,SAAU,CAAA,EAE/BC,EAAgB,GAElB,EAAGd,CAAe,EAGlB,KAAK,cAAc,KAAK,UAAY,CAClC,cAAce,CAAY,CAC5B,CAAC,CACH,EAEA,WAAY,CACV,KAAK,SACH,KAAK,WAAa,KAAK,WAAW,SAAa,EAAA,KAAK,SAAS,KAC/D,CACF,EAEA,gBAAiB,UAAY,CAC3B,KAAK,cAAc,QAASC,GAAgBA,EAAY,CAAC,CAC3D,CACF,CAAC,EAEDlB,EAAU,eAAe,2BAA4Ba,CAAqB,CAC5E,CAAC"}