{"version":3,"file":"template-editor.min.js","sources":["../src/template-editor/memory.ts","../src/template-editor/tabs.ts","../src/template-editor/editors.ts","../src/template-editor/index.ts"],"sourcesContent":["\n/**\n * Remember state in local storage\n */\n\nconst memoryKey = 'tangibleTemplateEditorState'\n\nexport const memory = Object.assign(\n  {\n    tab: undefined, // Default tab\n    postId: 0, // ?\n    theme: 'default',\n    fontFamily: 'default',\n    fontSize: 14,\n  },\n  getMemory() || {}\n)\n\nexport function setMemory(state) {\n  if (!window.localStorage) return\n  Object.assign(memory, state)\n  window.localStorage.setItem(memoryKey, JSON.stringify(memory))\n}\n\nexport function getMemory() {\n  if (!window.localStorage) return\n  let state = window.localStorage.getItem(memoryKey)\n  if (!state) return\n  try {\n    state = JSON.parse(state)\n    return state\n  } catch (e) {\n    /* Ignore */\n  }\n}\n","\nimport {\n  memory,\n  getMemory,\n  setMemory\n} from './memory'\n\nexport function handleTabs({\n  $,\n  postId,\n  $postForm,\n  editorInstances,\n}) {\n  \n  /**\n   * Tabs\n   */\n\n  const $tabSelectors = $postForm.find('.tangible-template-tab-selector')\n  const $tabs = $postForm.find('.tangible-template-tab')\n  const tabEditorActivated: boolean[] = [] // index => boolean\n\n  if (!$tabs.length) {\n    console.warn('No tabs elements found for Tangible Template code editor')\n    return\n  }\n\n  $tabSelectors.on('click', function () {\n    const currentTabSelector = this\n\n    // Show current tab, hide others\n\n    $tabSelectors.each(function (index) {\n\n      const $tabSelector = $(this)\n      const tabName = $tabSelector.data('tabName')\n      const $tab = $tabs.eq(index)\n      // TODO: Each tab area should set its name\n      // .filter(`[data-tab-name=\"${tabName}\"]`).first()\n\n      if (this !== currentTabSelector) {\n        // Hide\n\n        $tabSelector.removeClass('active')\n        $tab.hide()\n\n        return\n      }\n\n      // Show\n\n      $tabSelector.addClass('active')\n      $tab.show()\n\n      // Find editor in tab, if any\n      const $tabEditor = $tab.find('[data-tangible-template-editor-type]')\n      const editorInstance = $tabEditor.length\n        ? editorInstances[\n          $tabEditor.attr('name') // By field name\n        ]\n        : false\n\n      if (!tabEditorActivated[index]) {\n        tabEditorActivated[index] = true\n\n        // Refresh editor once\n        if (editorInstance) {\n          editorInstance.refresh()\n        }\n      }\n\n      if (editorInstance) {\n        editorInstance.focus()\n      }\n\n      setMemory({\n        tab: tabName,\n        postId,\n      })\n    }) // End for each tab selector\n  }) // End on click tab selector\n\n  /**\n   * Set default tab from URL query parameter\n   */\n\n  const query: {\n    [key: string]: string\n  } = window.location.search\n    .substr(1)\n    .split('&')\n    .reduce(function (obj, pair) {\n      const [key, value] = pair.split('=')\n      obj[key] = value\n      return obj\n    }, {})\n\n  const gotoTab = query.tab || (memory.postId === postId && memory.tab)\n\n  if (gotoTab) {\n    // Switch to tab\n\n    const $activeTabSelector = $tabSelectors.filter(\n      `[data-tab-name=\"${gotoTab}\"]`\n    )\n\n    if ($activeTabSelector.length) {\n      $activeTabSelector.eq(0).click()\n    } else {\n      // Ignore if tab not found\n      // console.log('Tab not found', gotoTab)\n    }\n  }  \n}\n","// import type { EditorView, Panel, ViewUpdate } from '@codemirror/view'\nimport { memory, setMemory } from './memory'\n\nexport async function createEditors({\n  $,\n  save,\n  $editors,\n  editorInstances,\n  createCodeEditor,\n  templateMeta,\n  Tangible,\n}) {\n  const sharedEditorOptions = {\n    // New editor\n    onSave: save,\n\n    // Legacy editor\n\n    viewportMargin: Infinity, // With .CodeMirror height: auto or 100%\n    resizable: false,\n    lineWrapping: true,\n\n    extraKeys: {\n      'Alt-F': 'findPersistent',\n      'Ctrl-S': save,\n      'Cmd-S': save,\n      Tab: 'emmetExpandAbbreviation',\n      Esc: 'emmetResetAbbreviation',\n      Enter: 'emmetInsertLineBreak',\n      'Ctrl-Space': 'autocomplete',\n    },\n  }\n\n  /**\n   * Create editors\n   */\n\n  // Event hub for editors to communicate to each other\n  const eventHub: {\n    listeners: {\n      [key: string]: Function[]\n    }\n    on: (event: string, callback: Function) => void\n    emit: (event: string, ...args: any[]) => void\n    clear: () => void\n  } = {\n    listeners: {},\n    on(event, callback) {\n      if (!eventHub.listeners[event]) {\n        eventHub.listeners[event] = []\n      }\n      eventHub.listeners[event].push(callback)\n    },\n    emit(event, ...args) {\n      if (eventHub.listeners[event]) {\n        for (const callback of eventHub.listeners[event]) {\n          callback(...args)\n        }\n      }\n    },\n    clear() {\n      eventHub.listeners = {}\n    },\n  }\n\n  $editors.each(async function () {\n    const $editor = $(this)\n    const fieldName = $editor.attr('name')\n    const type = $editor.data('tangibleTemplateEditorType') // html, sass, javascript, json\n\n    const editorOptions: {\n      [key: string]: any\n    } = {\n      ...sharedEditorOptions,\n      language: type,\n      editorActionsPanel(view, editor) {\n        if (!editor.eventHub) editor.eventHub = eventHub\n        return editorActionsPanel(view, editor)\n      }, // See below\n    }\n\n    if (type === 'html') {\n      editorOptions.emmet = {\n        preview: false,\n        config: {\n          // TODO: Emmet custom abbreviations - Currently not working\n          // @see https://github.com/emmetio/codemirror-plugin#emmet-config\n          html: {\n            Loop: 'Loop[type]',\n            Field: 'Field/',\n          },\n        },\n      }\n    }\n\n    const editor = (editorInstances[fieldName] = await createCodeEditor(\n      this,\n      editorOptions\n    ))\n\n    editor.setSize(null, '100%')\n\n    // Focus on content if editing existing post\n    if (fieldName === 'post_content' && !templateMeta.isNewPost) editor.focus()\n\n    // Provide public method to save\n    this.editor = editor\n    editor.save = save\n\n    if (!editor.codeMirror6) return\n\n    // New editor\n\n    editor.eventHub = eventHub\n\n    // console.log('Editor', editor)\n\n    Tangible.codeEditors.push({\n      editor,\n      $editor,\n      fieldName,\n      type,\n    })\n  })\n\n  // await loadFonts()\n}\n\nconst fonts = [\n  ['Anonymous Pro', 'anonymous-pro', 'anonymous-pro.woff'],\n  ['Cascadia Mono', 'cascadia-mono', 'CascadiaMono.woff2'],\n  ['Cousine', 'cousine', 'cousine-regular.woff'],\n  ['Droid Sans Mono', 'droid-sans-mono', 'droid-sans-mono.woff2'],\n  ['Fira Code', 'fira-code', 'FiraCode-Regular.woff2'],\n  ['JetBrains Mono', 'jetbrains-mono', 'JetBrainsMono-Regular.woff2'],\n  ['Menlo', 'menlo', 'menlo-regular.woff2'],\n  ['Monaspace Neon', 'monaspace-neon', 'MonaspaceNeon-Regular.woff'],\n  ['Monaspace Xenon', 'monaspace-xenon', 'MonaspaceXenon-Regular.woff'],\n  ['MonoLisa', 'monolisa', 'monolisa-regular.woff2'],\n  ['Noto Mono', 'noto-mono', 'noto-mono.woff2'],\n  ['Office Code Pro', 'office-code-pro', 'office-code-pro.woff'],\n  ['Operator Mono', 'operator-mono', 'operator-mono-medium.woff2'],\n  // ['Roboto Mono', 'roboto-mono', ''],\n  ['SF Mono', 'sf-mono', 'sf-mono-regular.woff2'],\n  ['Source Code Pro', 'source-code-pro', 'SourceCodePro-Regular.woff2'],\n]\n\nconst fontsLoaded = {}\n\nasync function loadFont(fontName) {\n  if (fontsLoaded[fontName]) {\n    // Being loaded\n    if (fontsLoaded[fontName] instanceof Promise) {\n      await fontsLoaded[fontName]\n    }\n    return\n  }\n\n  fontsLoaded[fontName] = (async () => {\n    const { editorUrl } = window.Tangible\n    if (!editorUrl) return\n\n    for (const [label, value, file] of fonts) {\n      if (fontName !== value) continue\n\n      const url = `${editorUrl}/fonts/${file}`\n      const font = new FontFace(value, `url(${url})`)\n\n      await font.load()\n      document.fonts.add(font)\n\n      fontsLoaded[fontName] = true\n      break\n    }\n\n    // console.log('Font loaded', fontName)\n  })()\n\n  await fontsLoaded[fontName]\n}\n\nfunction camelCaseToTitle(s: string) {\n  const result = s.replace(/([A-Z])/g, ' $1')\n  return result.charAt(0).toUpperCase() + result.slice(1)\n}\n\nconst defaultFontFamily = `SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace`\n\nfunction editorActionsPanel(view /*: EditorView*/, editor) /*: Panel*/ {\n  const el = document.createElement('div')\n  const { themes = {} } = editor\n  const themesByName = Object.keys(themes)\n    .sort()\n    .filter((key) => key !== 'dark')\n    .map((key) => ({\n      label: camelCaseToTitle(key),\n      value: key,\n    }))\n\n  // From local storage\n  let {\n    theme,\n    fontFamily,\n    fontSize, // /editor/core/theme/base.ts\n  } = memory\n\n  el.style.backgroundColor = '#4c566a'\n  el.style.color = '#fff'\n  el.style.padding = '.125rem .5rem'\n  el.style.display = 'flex'\n  el.style.userSelect = 'none'\n\n  el.innerHTML = `<div style=\"flex-grow: 1;\"></div><div style=\"display: flex; text-align:right\">\n  <div data-action=\"settings-group\" style=\"display: none; flex-grow: 1;\">\n\n    <div data-action=\"font\" style=\"margin: 0 4px\">Font</div>\n    <select data-action=\"font-list\" style=\"margin: 0; padding: 2px 4px; background-color: #2e3440; color: #fff; min-height: 0; border: 0; box-shadow: none; font-size: 12px; line-height: 1\">\n      <option value=\"default\">Default</option>\n      ${fonts.map(\n        ([label, value]) =>\n          `<option value=\"${value}\"${\n            value === fontFamily ? ' selected' : ''\n          }>${label}</option>`\n      )}\n    </select>\n    <div data-action=\"font-size\" style=\"padding: 0 4px;\">\n      <span data-action=\"font-size-minus\" style=\"cursor: pointer; padding: 2px 4px\">-</span>\n      <span data-action=\"font-size-display\">${fontSize}</span>\n      <span data-action=\"font-size-plus\" style=\"cursor: pointer; padding: 2px 4px\">+</span>\n    </div>\n\n    <div data-action=\"theme\" style=\"margin: 0 4px\">Theme</div>\n    <select data-action=\"theme-list\" style=\"margin: 0; padding: 2px 4px; background-color: #2e3440; color: #fff; min-height: 0; border: 0; box-shadow: none; font-size: 12px; line-height: 1\">\n      <option value=\"dark\">Default</option>\n      ${themesByName.map(\n        ({ label, value }) =>\n          `<option value=\"${value}\"${\n            value === theme ? ' selected' : ''\n          }>${label}</option>`\n      )}\n    </select>\n\n  </div>\n  <div data-action=\"settings\" style=\"margin: 0 4px; cursor: pointer;\">Settings</div>\n  <div data-action=\"format\" style=\"margin: 0 4px; cursor: pointer\">Format</div>\n</div>`\n\n  // Format\n  el.querySelector('[data-action=format]')?.addEventListener(\n    'click',\n    function () {\n      editor.format && editor.format()\n    }\n  )\n\n  const $settingsGroup = el.querySelector('[data-action=settings-group]')\n\n  function setSettingsVisibility(show, broadcast = false) {\n    $settingsGroup.style.display = show ? 'flex' : 'none'\n    if (broadcast) {\n      editor.eventHub.emit('settingsVisibility', show, editor)\n    }\n  }\n\n  el.querySelector('[data-action=settings]')?.addEventListener(\n    'click',\n    function () {\n      setSettingsVisibility($settingsGroup.style.display === 'none', true)\n    }\n  )\n\n  editor.eventHub.on('settingsVisibility', function (show, source) {\n    if (source === editor) return // Ignore self\n    setSettingsVisibility(show)\n  })\n\n  // Theme\n  const $themeList = el.querySelector('[data-action=theme-list]')\n\n  function selectTheme(theme, broadcast = false) {\n    if (themes[theme]) {\n      editor.setTheme(themes[theme])\n\n      if (broadcast) {\n        setMemory({ theme })\n        editor.eventHub.emit('theme', theme, editor)\n      }\n    }\n  }\n\n  $themeList?.addEventListener('change', function (e) {\n    const theme = e.target.value\n    selectTheme(theme, true)\n  })\n\n  editor.eventHub.on('theme', function (theme, source) {\n    if (source === editor) return // Ignore self\n    $themeList.value = theme\n    selectTheme(theme)\n  })\n\n  if (theme !== 'default') {\n    setTimeout(() => selectTheme(theme), 0)\n    // extensions[0] = theme\n    // view.dispatch({\n    //   effects: StateEffect.reconfigure.of(extensions),\n    // })\n  }\n\n  /**\n   * Font family\n   */\n  const $fontList = el.querySelector('[data-action=font-list]')\n  const $fontSize = el.querySelector('[data-action=font-size]')\n\n  async function selectFontFamily(fontFamily, broadcast = false) {\n    const $content = view.dom.querySelector('.cm-content')\n    if (!$content) return\n    const isDefaultFont = fontFamily === 'default'\n    try {\n      if (!isDefaultFont) {\n        await loadFont(fontFamily)\n      }\n    } catch (e) {\n      return\n    }\n\n    $content.style.fontFamily = isDefaultFont\n      ? defaultFontFamily\n      : `'${fontFamily}', ${defaultFontFamily}`\n\n    if (broadcast) {\n      setMemory({ fontFamily })\n      editor.eventHub.emit('fontFamily', fontFamily, editor)\n    }\n  }\n\n  if (fontFamily !== 'default') {\n    setTimeout(() => selectFontFamily(fontFamily), 0)\n  }\n\n  $fontList?.addEventListener('change', function (e) {\n    const fontFamily = e.target.value\n    selectFontFamily(fontFamily, true)\n  })\n\n  editor.eventHub.on('fontFamily', function (fontFamily, source) {\n    if (source === editor) return // Ignore self\n    $fontList.value = fontFamily\n    selectFontFamily(fontFamily)\n  })\n\n  /**\n   * Font size\n   */\n\n  const $fontSizeDisplay = el.querySelector('[data-action=font-size-display]')\n\n  function selectFontSize(fontSize, broadcast = false) {\n    const $content = view.dom.querySelector('.cm-content')\n    if ($content) {\n      $content.style.fontSize = `${fontSize}px`\n      $fontSizeDisplay.innerText = fontSize + ''\n\n      if (broadcast) {\n        setMemory({ fontSize })\n        editor.eventHub.emit('fontSize', fontSize, editor)\n      }\n    }\n  }\n\n  setTimeout(() => selectFontSize(fontSize), 0)\n\n  el.querySelector('[data-action=font-size-minus]').addEventListener(\n    'click',\n    function () {\n      if (fontSize > 10) {\n        fontSize--\n        selectFontSize(fontSize, true)\n      }\n    }\n  )\n  el.querySelector('[data-action=font-size-plus]').addEventListener(\n    'click',\n    function () {\n      if (fontSize < 100) {\n        fontSize++\n        selectFontSize(fontSize, true)\n      }\n    }\n  )\n\n  editor.eventHub.on('fontSize', function (fontSize, source) {\n    if (source === editor) return // Ignore self\n    selectFontSize(fontSize)\n  })\n\n  // const container = document.createElement('div')\n\n  // container.style.position = 'absolute'\n  // container.style.top = '-20px'\n  // container.style.left = '0'\n  // container.style.color = '0'\n  // container.innerHTML = 'Open'\n\n  return {\n    top: true,\n    dom: el,\n  }\n}\n","/**\n * Editor for template post type\n */\n\nimport { handleTabs } from './tabs'\nimport { createEditors } from './editors'\n\ndeclare global {\n  interface Window {\n    jQuery: any,\n    wp: any,\n    Tangible: any\n  }\n}\n\nwindow.jQuery(function ($) {\n\n  const $postForm = $('#post')\n  const $editors = $postForm.find('[data-tangible-template-editor-type]')\n\n  if (!$editors.length) {\n    console.warn('No editor elements found for Tangible Template code editor')\n    return\n  }\n\n  /**\n   * Silence \"Are you sure?\" alert when leaving screen\n   * @see https://core.trac.wordpress.org/browser/branches/5.6/src/js/_enqueues/wp/autosave.js?rev=50366\n   */\n  const { wp } = window\n  if (wp && wp.autosave && wp.autosave.server && wp.autosave.server.postChanged) {\n    // console.log('Proxy wp.autosave.server.postChanged')\n    wp.autosave.server.postChanged = function () {\n      // console.log('postChanged', false)\n      return false\n    }\n  }\n\n  const { Tangible } = window\n  const {\n    ajax,\n    // Provide new editor compatibility layer\n    createCodeEditor\n  } = Tangible\n\n  Tangible.codeEditors = []\n\n  const editorInstances = {\n    // fieldName: editor instance\n  }\n\n  const postId = $('#post_ID').val()\n  const $postTitle = $postForm.find('input[name=\"post_title\"]')\n  // const $postContent = $postForm.find('[name=\"post_content\"]') // textarea\n\n  const $publishButton = $('#publish')\n  const $publishingActions = $publishButton.closest('#major-publishing-actions')\n\n  const templateMeta =\n    $postForm.find('#tangible-template-editor-meta').data('json') || {}\n\n  /**\n   * Additional fields that are not editors\n   * @see /system/editor/fields.php\n   */\n  const additionalFieldNames = [\n    'name',\n    'assets',\n    'location',\n    'theme_position',\n    'theme_header',\n    'theme_footer',\n    'universal_id',\n  ]\n\n  const $additionalFields = {\n    // name?: $element\n  }\n\n  for (const fieldName of additionalFieldNames) {\n    const $field = $postForm.find(`[name=\"${fieldName}\"]`)\n    if ($field.length) {\n      $additionalFields[fieldName] = $field\n    }\n  }\n\n  // Get taxonomy fields\n\n  const taxonomyNames = ['tangible_template_category']\n  const $taxonomyFields = {\n    // name?: $terms\n  }\n\n  for (const taxName of taxonomyNames) {\n    const $terms = $postForm.find(\n      `[type=\"checkbox\"][name=\"tax_input[${taxName}][]\"]`\n    )\n    if ($terms.length) {\n      $taxonomyFields[taxName] = $terms\n\n      /**\n       * Fix browser autocomplete messing with checkboxes..\n       * Force \"checked\" state based on HTML attribute\n       */\n      $terms.each(function () {\n        const checked = this.getAttribute('checked') === 'checked'\n        $(this).prop('checked', checked)\n      })\n    }\n  }\n\n  /**\n   * Show success/error message in publish button\n   */\n  const updatePublishButton = function (newText, errorMessage = '') {\n    $publishButton.val(newText)\n\n    if (errorMessage) {\n      $publishingActions.append(\n        `<div id=\"post-save-error-message\" style=\"padding-top: 8px\">${errorMessage}</div>`\n      )\n    } else {\n      $publishingActions.find('#post-save-error-message').remove()\n    }\n  }\n\n  const getEditorFields = function () {\n    const data = {}\n\n    for (let fieldName in editorInstances) {\n      const editor = editorInstances[fieldName]\n\n      if (fieldName === 'post_content') fieldName = 'content'\n\n      const value = editor.getValue()\n      data[fieldName] = value\n    }\n\n    return data\n  }\n\n  const getAdditionalFields = function () {\n    const data = {}\n\n    for (const fieldName of additionalFieldNames) {\n      if (!$additionalFields[fieldName]) continue\n      data[fieldName] = $additionalFields[fieldName].val()\n    }\n\n    return data\n  }\n\n  const getTaxonomyFields = function () {\n    const data = {}\n\n    for (const taxName of taxonomyNames) {\n      if (!$taxonomyFields[taxName]) continue\n      data[taxName] = []\n      $taxonomyFields[taxName].each(function () {\n        const $el = $(this)\n        if ($el.prop('checked')) {\n          data[taxName].push($el.val())\n        }\n      })\n    }\n\n    return data\n  }\n\n  /**\n   * Save via AJAX, except for new post which requires page reload\n   */\n  function save() {\n    if (templateMeta.isNewPost) {\n      $publishButton.click()\n      return\n    }\n\n    // New and existing post should have ID\n    if (!postId) return\n\n    const title = $postTitle.val()\n    if (!title) return\n\n    const data = {\n      title,\n      id: postId,\n      content: '',\n      ...getEditorFields(),\n      ...getAdditionalFields(),\n      tax_input: getTaxonomyFields(),\n    }\n\n    const previousLabel = $publishButton.val()\n\n    let labelTimer\n    function restorePreviousLabelAfterTimeout() {\n      if (labelTimer) clearTimeout(labelTimer)\n      labelTimer = setTimeout(function () {\n        $publishButton.val(previousLabel)\n      }, 7000)\n    }\n\n    // $publishButton.val('Saving..')\n\n    ajax('tangible_template_editor_save', data)\n      .then(function (res) {\n        updatePublishButton('Saved')\n        restorePreviousLabelAfterTimeout()\n      })\n      .catch(function (e) {\n        updatePublishButton('Error', e.message)\n        restorePreviousLabelAfterTimeout()\n      })\n  }\n\n  /**\n   * New or draft posts must submit the form and reload the edit screen,\n   * but after that the publish button can use AJAX save.\n   */\n  if (!templateMeta.isNewPost && templateMeta.postStatus === 'publish') {\n    /**\n     * Disable AJAX save until following issues are resolved:\n     *\n     * - AJAX nonce expiring\n     * - Sometimes the post slug not saving?\n     * - Sometimes there's a confirmation dialog \"information you've entered may not be saved\"\n     */\n    /*\n        $publishButton.on('click', function (e) {\n          e.preventDefault()\n          save()\n        })\n    */// \n    // window.onbeforeunload = function() {}\n  }\n\n  createEditors({\n    $,\n    save,\n    $editors,\n    editorInstances,\n    createCodeEditor,\n    templateMeta,\n    Tangible\n  })\n\n  handleTabs({\n    $,\n    postId,\n    $postForm,\n    editorInstances,\n  })\n\n})\n"],"names":["memoryKey","memory","getMemory","setMemory","state","__name","handleTabs","$","postId","$postForm","editorInstances","$tabSelectors","$tabs","tabEditorActivated","currentTabSelector","index","$tabSelector","tabName","$tab","$tabEditor","editorInstance","gotoTab","obj","pair","key","value","$activeTabSelector","createEditors","save","$editors","createCodeEditor","templateMeta","Tangible","sharedEditorOptions","eventHub","event","callback","args","$editor","fieldName","type","editorOptions","view","editor","editorActionsPanel","fonts","fontsLoaded","loadFont","fontName","editorUrl","label","file","url","font","camelCaseToTitle","s","result","defaultFontFamily","el","themes","themesByName","theme","fontFamily","fontSize","$settingsGroup","setSettingsVisibility","show","broadcast","source","$themeList","selectTheme","e","$fontList","selectFontFamily","$content","isDefaultFont","$fontSizeDisplay","selectFontSize","wp","ajax","$postTitle","$publishButton","$publishingActions","additionalFieldNames","$additionalFields","$field","taxonomyNames","$taxonomyFields","taxName","$terms","checked","updatePublishButton","newText","errorMessage","getEditorFields","data","getAdditionalFields","getTaxonomyFields","$el","title","previousLabel","labelTimer","restorePreviousLabelAfterTimeout","res"],"mappings":"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"}