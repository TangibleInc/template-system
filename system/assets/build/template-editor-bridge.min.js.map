{"version":3,"file":"template-editor-bridge.min.js","sources":["../src/template-editor-bridge/index.ts","../src/template-editor-bridge/global.js"],"sourcesContent":["/**\n * Compatibility layer to help with transition of CodeMirror 5 to 6\n */\n\ndeclare global {\n  interface Window {\n    wp: any\n    Tangible: {\n      ajax: any\n      TemplateSystem: any\n      // Legacy\n      createCodeEditor: typeof createTemplateEditor\n    }\n  }\n}\n\nexport type CodeEditorLegacyInterface = {\n  getValue: () => string\n  focus: () => void\n  refresh: () => void\n  setSize: (width: string | null, height: string | null) => void\n  on: (eventName: string, callback: Function) => void\n  off: (eventName: string, callback: Function) => void\n}\n\nexport type CodeEditorLegacyOptions = {\n  language?: string\n  onSave?: () => void\n}\n\nexport type CodeEditorInterface = CodeEditorLegacyInterface & {\n  updateTextarea: () => void\n}\n\nexport async function createTemplateEditor(\n  textarea: HTMLTextAreaElement,\n  options: CodeEditorLegacyOptions = {}\n): Promise<CodeEditorInterface> {\n  const { CodeEditor } = window.Tangible.TemplateSystem || {}\n\n  if (!CodeEditor) {\n    throw new Error('CodeEditor not found')\n  }\n\n  // console.log('createTemplateEditor', textarea, CodeEditor, options)\n\n  const { language = 'html', onSave } = options\n\n  const listeners = {}\n  \n  const editor = await CodeEditor.create({\n    // el,\n    lang: language,\n    content: textarea.value,\n    onUpdate(doc) {\n      if (listeners['change']) {\n        api.emit('change') // Caller gets value from editor\n      }\n    },\n    onSave() {\n      if (!onSave) return\n      updateTextarea()\n      onSave()\n    },\n    editorActionsPanel: options.editorActionsPanel\n  })\n  \n  const api = {\n\n    // New editor\n    \n    codeMirror6: editor,\n    updateTextarea,\n\n    // Legacy editor\n\n    getValue() {\n      if (!editor) return ''\n      return editor.view.state.doc.toString()\n    },\n    focus() {\n      editor && editor.view.focus()\n    },\n    refresh() {},\n    setSize(width: string | null, height: string | null) {},\n\n    on(eventName, callback) {\n      if (!listeners[eventName]) {\n        listeners[eventName] = []\n      }\n      listeners[eventName].push(callback)\n    },\n    emit(eventName, ...args) {\n      if (listeners[eventName]) {\n        for (const listener of listeners[eventName]) {\n          listener(...args)\n        }\n      }\n    },\n    off(eventName, callback) {\n      if (listeners[eventName]) {\n        listeners[eventName] = listeners[eventName].filter(\n          (f) => f !== callback\n        )\n      }\n    },\n  }\n  \n  // const el = document.createElement('div')\n  const containterClass = 'tangible-template-editor-container'\n\n  if (!textarea.parentNode?.classList.contains(containterClass)) {\n    // el.classList.add(containterClass)\n    textarea.parentNode?.classList.add(containterClass)\n  }\n\n  function updateTextarea() {\n    textarea.value = editor.view.state.doc.toString()\n  }\n\n  /**\n   * Support legacy method of passing textarea instead of div container\n   * @see https://codemirror.net/docs/migration/#codemirror.fromtextarea\n   */\n  textarea.parentNode?.insertBefore(editor.view.dom, textarea)\n\n  if (textarea.form) {\n    textarea.form.addEventListener('submit', () => updateTextarea())\n  }\n\n  return api\n}\n","import { createTemplateEditor } from './index'\n\nwindow.Tangible = window.Tangible || {}\nwindow.Tangible.createCodeEditor = createTemplateEditor\n"],"names":["createTemplateEditor","textarea","options","CodeEditor","language","onSave","listeners","editor","doc","api","updateTextarea","width","height","eventName","callback","args","listener","f","containterClass","__name"],"mappings":"0XAkCsBA,EACpBC,EACAC,EAAmC,CAAA,EACL,CAC9B,KAAM,CAAE,WAAAC,CAAW,EAAI,OAAO,SAAS,gBAAkB,GAEzD,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,sBAAsB,EAKxC,KAAM,CAAE,SAAAC,EAAW,OAAQ,OAAAC,CAAO,EAAIH,EAEhCI,EAAY,GAEZC,EAAS,MAAMJ,EAAW,OAAO,CAErC,KAAMC,EACN,QAASH,EAAS,MAClB,SAASO,EAAK,CACRF,EAAU,QACZG,EAAI,KAAK,QAAQ,CAErB,EACA,QAAS,CACFJ,IACLK,IACAL,IACF,EACA,mBAAoBH,EAAQ,kBAC9B,CAAC,EAEKO,EAAM,CAIV,YAAaF,EACb,eAAAG,EAIA,UAAW,CACT,OAAKH,EACEA,EAAO,KAAK,MAAM,IAAI,SADT,EAAA,EAEtB,EACA,OAAQ,CACNA,GAAUA,EAAO,KAAK,MACxB,CAAA,EACA,SAAU,GACV,QAAQI,EAAsBC,EAAuB,CAErD,EAAA,GAAGC,EAAWC,EAAU,CACjBR,EAAUO,CAAS,IACtBP,EAAUO,CAAS,EAAI,CAAA,GAEzBP,EAAUO,CAAS,EAAE,KAAKC,CAAQ,CACpC,EACA,KAAKD,KAAcE,EAAM,CACvB,GAAIT,EAAUO,CAAS,EACrB,UAAWG,KAAYV,EAAUO,CAAS,EACxCG,EAAS,GAAGD,CAAI,CAGtB,EACA,IAAIF,EAAWC,EAAU,CACnBR,EAAUO,CAAS,IACrBP,EAAUO,CAAS,EAAIP,EAAUO,CAAS,EAAE,OACzCI,GAAMA,IAAMH,CACf,EAEJ,CACF,EAGMI,EAAkB,qCAEnBjB,EAAS,YAAY,UAAU,SAASiB,CAAe,GAE1DjB,EAAS,YAAY,UAAU,IAAIiB,CAAe,EAGpD,SAASR,GAAiB,CACxBT,EAAS,MAAQM,EAAO,KAAK,MAAM,IAAI,SACzC,CAAA,CAFSG,OAAAA,EAAAA,EAAAA,KAAAS,EAAAT,EAAA,gBAQTT,EAAAA,EAAS,YAAY,aAAaM,EAAO,KAAK,IAAKN,CAAQ,EAEvDA,EAAS,MACXA,EAAS,KAAK,iBAAiB,SAAU,IAAMS,EAAgB,CAAA,EAG1DD,CACT,CAjGsBU,EAAAnB,EAAA,wBAAAmB,EAAAnB,EAAA,sBAAA,EChCtB,OAAO,SAAW,OAAO,UAAY,CACrC,EAAA,OAAO,SAAS,iBAAmBA"}