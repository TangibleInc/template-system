var v=Object.defineProperty;var c=(i,n)=>v(i,"name",{value:n,configurable:!0});(function(){"use strict";(function(){const s={env:{NODE_ENV:"production"}};try{if(process){process.env=Object.assign({},process.env),Object.assign(process.env,s);return}}catch(t){}globalThis.process={env:s}})();var i=Object.defineProperty,n=c((s,t)=>i(s,"name",{value:t,configurable:!0}),"r");const f=n(()=>({id:0,tests:[],promises:[],success:0,fail:0,total:0}),"createNewSession"),g={session:null,start:a};window.Tangible=window.Tangible||{},window.Tangible.tester=g;function a(s={}){const t=f();t.id=s.id||0;const e=p(t);return e.report=()=>d(t),e}c(a,"f"),n(a,"start");function p(s){return n(function(t,e){const r={title:t,assertions:[],success:!0,error:null},o=n((l,$=!1)=>{r.assertions.push({title:l,success:!!$})},"it");try{s.promises.push(e(o))}catch(l){r.success=!1,r.error=l}s.tests.push(r),r.success?s.success++:s.fail++,s.total++},"test")}c(p,"d"),n(p,"createSessionTest");const u='<span class="tangible-tester-success-icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 1000"><path d="M933 316q0 22-16 38L513 758l-76 76q-16 15-38 15t-38-15l-76-76L83 556q-15-16-15-38t15-38l76-76q16-16 38-16t38 16l164 165 366-367q16-16 38-16t38 16l76 76q16 15 16 38z"/></svg></span>',b='<span class="tangible-tester-fail-icon"><svg viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"><path d="M1490 1322q0 40-28 68l-136 136q-28 28-68 28t-68-28l-294-294-294 294q-28 28-68 28t-68-28l-136-136q-28-28-28-68t28-68l294-294-294-294q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 294 294-294q28-28 68-28t68 28l136 136q28 28 28 68t-28 68l-294 294 294 294q28 28 28 68z"/></svg></span>';function d(s){const t=document.querySelector(`[data-tangible-tester-id="${s.id}"]`);if(!t){console.log("Test result element not found for ID",s.id);return}t.innerHTML=`
<h4>JavaScript tests</h4>
${s.tests.map((e,r)=>`
<p>
  ${e.success?u:b}
  &nbsp;&nbsp;${r+1}. ${e.title}${e.error?"<br>"+e.error:""}
</p>
${e.assertions.length?`
<p>
  ${e.assertions.map(o=>`
  &nbsp;&nbsp;&nbsp;&nbsp;${o.success?u:b}
  &nbsp;&nbsp;${o.title}
  ${o.error?`<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - ${o.error}`:""}`).join("<br>")}
</p>`:""}`).join("")}
<p>${s.fail===0?`All ${s.total} test${s.total===1?"":"s"} passed`:`Total of ${s.total} test${s.total===1?"":"s"}: ${s.success} passed, ${s.fail} failed`}
</p>
`}c(d,"w"),n(d,"report")})();
//# sourceMappingURL=tester.min.js.map
