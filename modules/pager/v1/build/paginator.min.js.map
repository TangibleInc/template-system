{"version":3,"file":"paginator.min.js","sources":["../src/range.ts","../src/index.ts"],"sourcesContent":["/**\n * Pagination algorithm\n *\n * Based on ideas from: https://gist.github.com/kottenator/9d936eb3e4e3c3e02598\n */\n\nconst getRange = (start, end) => {\n  return Array(end - start + 1)\n    .fill(0)\n    .map((v, i) => i + start)\n}\n\nexport const generatePageRange = (currentPage, totalPages) => {\n  let delta\n\n  if (totalPages <= 7) {\n    // delta === 7: [1 2 3 4 5 6 7]\n    delta = 7\n  } else {\n    // delta === 2: [1 ... 4 5 6 ... 10]\n    // delta === 4: [1 2 3 4 5 ... 10]\n    delta = currentPage > 4 && currentPage < totalPages - 3 ? 2 : 4\n  }\n\n  const range = {\n    start: Math.round(currentPage - delta / 2),\n    end: Math.round(currentPage + delta / 2),\n  }\n\n  if (range.start - 1 === 1 || range.end + 1 === totalPages) {\n    range.start += 1\n    range.end += 1\n  }\n\n  let pages =\n    currentPage > delta\n      ? getRange(\n          Math.min(range.start, totalPages - delta),\n          Math.min(range.end, totalPages)\n        )\n      : getRange(1, Math.min(totalPages, delta + 1))\n\n  const dots = '...' // '&hellip;' or '…'\n  const withDots = (value, pair) =>\n    pages.length + 1 !== totalPages ? pair : [value]\n\n  if (pages[0] !== 1) {\n    pages = withDots(1, [1, dots]).concat(pages)\n  }\n\n  if (pages[pages.length - 1] < totalPages) {\n    pages = pages.concat(withDots(totalPages, [dots, totalPages]))\n  }\n\n  return pages\n}\n\n// Quick test\n// for (let i = 1, l = 10; i <= l; i++)\n//   console.log(`Selected page ${i}:`, generatePageRange(i, l));\n","import { generatePageRange } from './range'\n\nconst {\n  jQuery: $,\n  Tangible: { ajax },\n} = window\n\nfunction activatePaginators() {\n  $('.tangible-paginator-target').each(function () {\n    createPaginator($(this))\n  })\n}\n\n$(activatePaginators)\n\n// Export for dynamically loaded content\nwindow.Tangible.activatePaginators = activatePaginators\n// window.Tangible.activatePaginator = activatePaginator__deprecated\n\n/**\n * Create paginator\n */\n\nfunction createPaginator($target) {\n  const targetId = $target.data('tangiblePaginatorTargetId')\n  const targetData = $target.data('tangiblePaginatorTargetData') || {}\n\n  // console.log('Create paginator', targetId, targetData)\n\n  // @see /tags/loop/paginate/loop.php\n  const { state, template, hash, context, context_hash } = targetData\n\n  if (!state || !template) return\n\n  const additionalSettings = {}\n\n  // Subscribers are updated on paginator state change\n  const $subscribers = $(`.tangible-paginator-subscribe--${targetId}`)\n\n  function setState(newState) {\n    Object.assign(state, newState)\n    render(state)\n  }\n\n  const $fields: {\n    [name: string]: HTMLElement[]\n  } = {}\n  let $loading\n  const $buttonsContainers = []\n\n  $subscribers.each(function () {\n    const $subscriber = $(this)\n    const actionName = $subscriber.data('tangiblePaginatorSubscribeAction')\n\n    switch (actionName) {\n      case 'fields':\n        $subscriber.find('[data-tangible-paginator-field]').each(function () {\n          const $field = $(this)\n          const fieldName = $field.data('tangiblePaginatorField')\n\n          if (!$fields[fieldName]) {\n            $fields[fieldName] = []\n          }\n          $fields[fieldName].push($field)\n        })\n\n        // console.log('Fields subscribed', Object.keys($fields))\n\n        break\n      case 'loading':\n        $loading = $subscriber\n        break\n      case 'buttons':\n\n        $buttonsContainers.push($subscriber)\n\n        /**\n         * Pass additional settings, such as scroll_top\n         * @see /tags/loop/paginate/buttons.php\n         */\n\n        const subscribeSettings = $subscriber.data(\n          'tangiblePaginatorSubscribeSettings'\n        )\n\n        const buttonsSettings = {}\n\n        if (\n          typeof subscribeSettings === 'object' &&\n          !Array.isArray(subscribeSettings)\n        ) {\n          Object.assign(buttonsSettings, additionalSettings, subscribeSettings)\n        }\n\n        $subscriber.renderButtons = () => {\n          renderPaginationButtons($subscriber, state, setState, buttonsSettings)\n        }\n\n        $subscriber.renderButtons()\n        break\n      default:\n        console.warn('Unknown subscriber action', actionName)\n        break\n    }\n  })\n\n  function updateFields(state) {\n    Object.keys($fields).forEach(function (fieldName) {\n      for (const $field of $fields[fieldName]) {\n        $field.text(state[fieldName])\n      }\n    })\n  }\n\n  // Update on page load to support fields rendered before loop\n  updateFields(state)\n\n  const cachedPages = {} // pageNumber: content\n\n  // Keep track of last rendered page\n  state.last_rendered_page = state.current_page\n\n  // Page rendered on server-side\n  cachedPages[state.current_page] = $target.html()\n\n  function render(state) {\n    updateFields(state)\n\n    $buttonsContainers.forEach($el =>\n      $el.renderButtons()\n      // renderPaginationButtons($el, state, setState, additionalSettings)\n    )\n\n    // Fetch page via AJAX\n\n    // Same page?\n    if (state.last_rendered_page === state.current_page) return\n    state.last_rendered_page = state.current_page\n\n    const afterLoaded = function () {\n      // Scroll to top\n      if (additionalSettings.scroll_top) {\n        const targetTop = $target.offset().top\n\n        if (!additionalSettings.scroll_animate) {\n          // Jump with no animation\n          $([document.documentElement, document.body]).scrollTop(targetTop)\n          return\n        }\n\n        const duration =\n          typeof additionalSettings.scroll_animate === 'number'\n            ? additionalSettings.scroll_animate\n            : 300\n\n        $([document.documentElement, document.body]).animate(\n          {\n            scrollTop: targetTop,\n          },\n          duration\n        )\n      }\n    }\n\n    // Cached\n    if (typeof cachedPages[state.current_page] !== 'undefined') {\n      $target.html(cachedPages[state.current_page])\n      afterLoaded()\n      return\n    }\n\n    const loadingClass = 'tangible-paginator-target-loading'\n    const currentPage = state.current_page\n\n    const startLoading = function () {\n      $target.addClass(loadingClass)\n\n      // TODO: Option to fade in/out loading indicator\n\n      if ($loading) $loading.show()\n    }\n\n    const finishLoading = function () {\n      $target.removeClass(loadingClass)\n\n      if ($loading) $loading.hide()\n\n      afterLoaded()\n    }\n\n    startLoading()\n\n    // Prevent repeated requests to same page\n    cachedPages[currentPage] = ''\n\n    // @see /ajax/index.php\n    ajax('tangible_template_render', {\n      template,\n      page: currentPage,\n      hash,\n      context,\n      context_hash,\n    })\n      .then((result) => {\n        // console.log('Fetch page result', result)\n\n        cachedPages[currentPage] = result\n        $target.html(result)\n        finishLoading()\n      })\n      .catch((error) => {\n        console.error('Fetch page error', error)\n\n        delete cachedPages[currentPage]\n\n        finishLoading()\n      })\n  }\n}\n\nfunction renderPaginationButtons($buttonsContainer, state, setState, settings = {}) {\n\n  const {\n    current_page: currentPage,\n    total_pages: totalPages\n  } = state\n\n  const pageNumbers = generatePageRange(currentPage, totalPages)\n\n  // Add new buttons, or replace existing ones\n\n  const existingButtons = [...$buttonsContainer.children()]\n\n  let buttonIndex = 0\n\n  function addButtonType(buttonType, isEnabled = true, isActive = false) {\n\n    const $button = existingButtons[buttonIndex]\n      ? $(existingButtons[buttonIndex])\n      : $('<button />')\n\n    $button.addClass('tangible-paginator-button')\n    $button.attr('data-tangible-paginator-action', buttonType)\n    $button.removeAttr('data-tangible-paginator-page')\n    $button.removeClass('active')\n\n    $button.prop('disabled', !isEnabled)\n\n    if (!existingButtons[buttonIndex]) {\n      $buttonsContainer.append($button)\n    }\n    buttonIndex++\n\n    return $button\n  }\n\n  if (totalPages > 2) {\n    if (settings.first) {\n      addButtonType('first_page', currentPage > 1).text(\n        settings.first===true ? '<<' : settings.first\n      )\n    }\n    if (settings.prev) {\n      addButtonType('prev_page', currentPage > 1).text(\n        settings.prev===true ? '<' : settings.prev\n      )\n    }\n  }\n\n  pageNumbers.forEach(function (num, index) {\n\n    const $button = existingButtons[buttonIndex]\n      ? $(existingButtons[buttonIndex])\n      : $('<button />')\n\n    $button.addClass('tangible-paginator-button')\n\n    if (num === '...') {\n      $button.text('…')\n      $button.prop('disabled', true)\n      $button.removeAttr('data-tangible-paginator-action')\n      $button.removeAttr('data-tangible-paginator-page')\n      $button.removeClass('active')\n    } else {\n      $button.text(num)\n      $button.prop('disabled', false)\n      $button.attr('data-tangible-paginator-action', 'page')\n      $button.attr('data-tangible-paginator-page', num)\n\n      $button[\n        num == currentPage ? 'addClass' : 'removeClass'\n      ]('active')\n    }\n\n    if (!existingButtons[buttonIndex]) {\n      $buttonsContainer.append($button)\n    }\n\n    buttonIndex++\n  })\n\n  if (totalPages > 2) {\n    if (settings.next) {\n      addButtonType('next_page', currentPage < totalPages).text(\n        settings.next===true ? '>' : settings.next\n      )\n    }\n    if (settings.last) {\n      addButtonType('last_page', currentPage < totalPages).text(\n        settings.last===true ? '>>' : settings.last\n      )\n    }\n  }\n\n  const initKey = 'paginatorActionsActivated'\n  if ($buttonsContainer[0][initKey]) return $buttonsContainer\n  $buttonsContainer[0][initKey] = true\n\n  // First-time render: Bind event handler\n\n  $buttonsContainer.on(\n    'click',\n    '[data-tangible-paginator-action]',\n    function () {\n      const $button = $(this)\n      const actionName = $button.attr('data-tangible-paginator-action')\n      switch (actionName) {\n        case 'page': {\n          // Note: Use $.attr() instead of $.data() which can return stale value\n          const page = parseInt($button.attr('data-tangible-paginator-page'), 10)\n          if (isNaN(page) || page <= 0 || page > state.total_pages) return\n          state.current_page = page\n          break\n        }\n        case 'first_page':\n          state.current_page = 1\n          break\n        case 'last_page':\n          state.current_page = state.total_pages\n          break\n        case 'next_page':\n          if (state.current_page === state.total_pages) return\n          state.current_page++\n          break\n        case 'prev_page':\n          if (state.current_page === 1) return\n          state.current_page--\n          break\n        default:\n          return\n      }\n\n      setState(state)\n    }\n  )\n\n  return $buttonsContainer\n}\n"],"names":["getRange","__name","start","end","v","i","generatePageRange","currentPage","totalPages","delta","range","pages","dots","withDots","value","pair","$","ajax","activatePaginators","createPaginator","$target","targetId","targetData","state","template","hash","context","context_hash","additionalSettings","$subscribers","setState","newState","render","$fields","$loading","$buttonsContainers","$subscriber","actionName","$field","fieldName","subscribeSettings","buttonsSettings","renderPaginationButtons","updateFields","cachedPages","$el","afterLoaded","targetTop","duration","loadingClass","startLoading","finishLoading","result","error","$buttonsContainer","settings","pageNumbers","existingButtons","buttonIndex","addButtonType","buttonType","isEnabled","isActive","$button","num","index","initKey","page"],"mappings":"2WAMA,MAAMA,EAAWC,EAAA,CAACC,EAAOC,IAChB,MAAMA,EAAMD,EAAQ,CAAC,EACzB,KAAK,CAAC,EACN,IAAI,CAACE,EAAGC,IAAMA,EAAIH,CAAK,EAHX,UAMV,EAAMI,EAAoBL,EAAA,CAACM,EAAaC,IAAe,CAC5D,IAAIC,EAEAD,GAAc,EAEhBC,EAAQ,EAIRA,EAAQF,EAAc,GAAKA,EAAcC,EAAa,EAAI,EAAI,EAGhE,MAAME,EAAQ,CACZ,MAAO,KAAK,MAAMH,EAAcE,EAAQ,CAAC,EACzC,IAAK,KAAK,MAAMF,EAAcE,EAAQ,CAAC,CACzC,GAEIC,EAAM,MAAQ,IAAM,GAAKA,EAAM,IAAM,IAAMF,KAC7CE,EAAM,OAAS,EACfA,EAAM,KAAO,GAGf,IAAIC,EACFJ,EAAcE,EACVT,EACE,KAAK,IAAIU,EAAM,MAAOF,EAAaC,CAAK,EACxC,KAAK,IAAIC,EAAM,IAAKF,CAAU,CAChC,EACAR,EAAS,EAAG,KAAK,IAAIQ,EAAYC,EAAQ,CAAC,CAAC,EAEjD,MAAMG,EAAO,MACPC,EAAWZ,EAAA,CAACa,EAAOC,IACvBJ,EAAM,OAAS,IAAMH,EAAaO,EAAO,CAACD,CAAK,EADhC,UAGjB,EAAA,OAAIH,EAAM,CAAC,IAAM,IACfA,EAAQE,EAAS,EAAG,CAAC,EAAGD,CAAI,CAAC,EAAE,OAAOD,CAAK,GAGzCA,EAAMA,EAAM,OAAS,CAAC,EAAIH,IAC5BG,EAAQA,EAAM,OAAOE,EAASL,EAAY,CAACI,EAAMJ,CAAU,CAAC,CAAC,GAGxDG,CACT,EA3CiC,mBAAA,oFCVjC,KAAM,CACJ,OAAQK,EACR,SAAU,CAAE,KAAAC,CAAK,CACnB,EAAI,OAEJ,SAASC,GAAqB,CAC5BF,EAAE,4BAA4B,EAAE,KAAK,UAAY,CAC/CG,EAAgBH,EAAE,IAAI,CAAC,CACzB,CAAC,CACH,CAJSE,EAAAA,EAAAA,KAAAjB,EAAAiB,EAAA,oBAAA,EAMTF,EAAEE,CAAkB,EAGpB,OAAO,SAAS,mBAAqBA,EAOrC,SAASC,EAAgBC,EAAS,CAChC,MAAMC,EAAWD,EAAQ,KAAK,2BAA2B,EACnDE,EAAaF,EAAQ,KAAK,6BAA6B,GAAK,CAAA,EAK5D,CAAE,MAAAG,EAAO,SAAAC,EAAU,KAAAC,EAAM,QAAAC,EAAS,aAAAC,CAAa,EAAIL,EAEzD,GAAI,CAACC,GAAS,CAACC,EAAU,OAEzB,MAAMI,EAAqB,GAGrBC,EAAeb,EAAE,kCAAkCK,CAAQ,EAAE,EAEnE,SAASS,EAASC,EAAU,CAC1B,OAAO,OAAOR,EAAOQ,CAAQ,EAC7BC,EAAOT,CAAK,CACd,CAHSO,EAAAA,EAAAA,KAAA7B,EAAA6B,EAAA,UAKT,EAAA,MAAMG,EAEF,CAAC,EACL,IAAIC,EACJ,MAAMC,EAAqB,CAAC,EAE5BN,EAAa,KAAK,UAAY,CAC5B,MAAMO,EAAcpB,EAAE,IAAI,EACpBqB,EAAaD,EAAY,KAAK,kCAAkC,EAEtE,OAAQC,GACN,IAAK,SACHD,EAAY,KAAK,iCAAiC,EAAE,KAAK,UAAY,CACnE,MAAME,EAAStB,EAAE,IAAI,EACfuB,EAAYD,EAAO,KAAK,wBAAwB,EAEjDL,EAAQM,CAAS,IACpBN,EAAQM,CAAS,EAAI,CAAA,GAEvBN,EAAQM,CAAS,EAAE,KAAKD,CAAM,CAChC,CAAC,EAID,MACF,IAAK,UACHJ,EAAWE,EACX,MACF,IAAK,UAEHD,EAAmB,KAAKC,CAAW,EAOnC,MAAMI,EAAoBJ,EAAY,KACpC,oCACF,EAEMK,EAAkB,CAGtB,EAAA,OAAOD,GAAsB,UAC7B,CAAC,MAAM,QAAQA,CAAiB,GAEhC,OAAO,OAAOC,EAAiBb,EAAoBY,CAAiB,EAGtEJ,EAAY,cAAgB,IAAM,CAChCM,EAAwBN,EAAab,EAAOO,EAAUW,CAAe,CACvE,EAEAL,EAAY,gBACZ,MACF,QACE,QAAQ,KAAK,4BAA6BC,CAAU,EACpD,KACJ,CACF,CAAC,EAED,SAASM,EAAapB,EAAO,CAC3B,OAAO,KAAKU,CAAO,EAAE,QAAQ,SAAUM,EAAW,CAChD,UAAWD,KAAUL,EAAQM,CAAS,EACpCD,EAAO,KAAKf,EAAMgB,CAAS,CAAC,CAEhC,CAAC,CACH,CANSI,EAAAA,EAAAA,KAAA1C,EAAA0C,EAAA,cAAA,EASTA,EAAapB,CAAK,EAElB,MAAMqB,EAAc,CAAA,EAGpBrB,EAAM,mBAAqBA,EAAM,aAGjCqB,EAAYrB,EAAM,YAAY,EAAIH,EAAQ,OAE1C,SAASY,EAAOT,EAAO,CAWrB,GAVAoB,EAAapB,CAAK,EAElBY,EAAmB,QAAQU,GACzBA,EAAI,cAEN,CAAA,EAKItB,EAAM,qBAAuBA,EAAM,aAAc,OACrDA,EAAM,mBAAqBA,EAAM,aAEjC,MAAMuB,EAAc7C,EAAA,UAAY,CAE9B,GAAI2B,EAAmB,WAAY,CACjC,MAAMmB,EAAY3B,EAAQ,SAAS,IAEnC,GAAI,CAACQ,EAAmB,eAAgB,CAEtCZ,EAAE,CAAC,SAAS,gBAAiB,SAAS,IAAI,CAAC,EAAE,UAAU+B,CAAS,EAChE,MACF,CAEA,MAAMC,EACJ,OAAOpB,EAAmB,gBAAmB,SACzCA,EAAmB,eACnB,IAENZ,EAAE,CAAC,SAAS,gBAAiB,SAAS,IAAI,CAAC,EAAE,QAC3C,CACE,UAAW+B,CACb,EACAC,CACF,CACF,CACF,EAvBoB,aAAA,EA0BpB,GAAI,OAAOJ,EAAYrB,EAAM,YAAY,EAAM,IAAa,CAC1DH,EAAQ,KAAKwB,EAAYrB,EAAM,YAAY,CAAC,EAC5CuB,IACA,MACF,CAEA,MAAMG,EAAe,oCACf1C,EAAcgB,EAAM,aAEpB2B,EAAejD,EAAA,UAAY,CAC/BmB,EAAQ,SAAS6B,CAAY,EAIzBf,GAAUA,EAAS,MACzB,EANqB,cAAA,EAQfiB,EAAgBlD,EAAA,UAAY,CAChCmB,EAAQ,YAAY6B,CAAY,EAE5Bf,GAAUA,EAAS,OAEvBY,GACF,EANsB,eAAA,EAQtBI,EAGAN,EAAAA,EAAYrC,CAAW,EAAI,GAG3BU,EAAK,2BAA4B,CAC/B,SAAAO,EACA,KAAMjB,EACN,KAAAkB,EACA,QAAAC,EACA,aAAAC,CACF,CAAC,EACE,KAAMyB,GAAW,CAGhBR,EAAYrC,CAAW,EAAI6C,EAC3BhC,EAAQ,KAAKgC,CAAM,EACnBD,EACF,CAAA,CAAC,EACA,MAAOE,GAAU,CAChB,QAAQ,MAAM,mBAAoBA,CAAK,EAEvC,OAAOT,EAAYrC,CAAW,EAE9B4C,EACF,CAAA,CAAC,CACL,CA5FSnB,EAAAA,EAAAA,KAAA/B,EAAA+B,EAAA,QA6FX,CAAA,CAnMSb,EAAAA,EAAAA,KAAAlB,EAAAkB,EAAA,iBAAA,EAqMT,SAASuB,EAAwBY,EAAmB/B,EAAOO,EAAUyB,EAAW,CAAC,EAAG,CAElF,KAAM,CACJ,aAAchD,EACd,YAAaC,CACf,EAAIe,EAEEiC,EAAclD,EAAkBC,EAAaC,CAAU,EAIvDiD,EAAkB,CAAC,GAAGH,EAAkB,UAAU,EAExD,IAAII,EAAc,EAElB,SAASC,EAAcC,EAAYC,EAAY,GAAMC,EAAW,GAAO,CAErE,MAAMC,EAAUN,EAAgBC,CAAW,EACvC1C,EAAEyC,EAAgBC,CAAW,CAAC,EAC9B1C,EAAE,YAAY,EAElB,OAAA+C,EAAQ,SAAS,2BAA2B,EAC5CA,EAAQ,KAAK,iCAAkCH,CAAU,EACzDG,EAAQ,WAAW,8BAA8B,EACjDA,EAAQ,YAAY,QAAQ,EAE5BA,EAAQ,KAAK,WAAY,CAACF,CAAS,EAE9BJ,EAAgBC,CAAW,GAC9BJ,EAAkB,OAAOS,CAAO,EAElCL,IAEOK,CACT,CAnBSJ,EAAAA,EAAAA,KAAA1D,EAAA0D,EAAA,eAAA,EAqBLnD,EAAa,IACX+C,EAAS,OACXI,EAAc,aAAcpD,EAAc,CAAC,EAAE,KAC3CgD,EAAS,QAAQ,GAAO,KAAOA,EAAS,KAC1C,EAEEA,EAAS,MACXI,EAAc,YAAapD,EAAc,CAAC,EAAE,KAC1CgD,EAAS,OAAO,GAAO,IAAMA,EAAS,IACxC,GAIJC,EAAY,QAAQ,SAAUQ,EAAKC,EAAO,CAExC,MAAMF,EAAUN,EAAgBC,CAAW,EACvC1C,EAAEyC,EAAgBC,CAAW,CAAC,EAC9B1C,EAAE,YAAY,EAElB+C,EAAQ,SAAS,2BAA2B,EAExCC,IAAQ,OACVD,EAAQ,KAAK,QAAG,EAChBA,EAAQ,KAAK,WAAY,EAAI,EAC7BA,EAAQ,WAAW,gCAAgC,EACnDA,EAAQ,WAAW,8BAA8B,EACjDA,EAAQ,YAAY,QAAQ,IAE5BA,EAAQ,KAAKC,CAAG,EAChBD,EAAQ,KAAK,WAAY,EAAK,EAC9BA,EAAQ,KAAK,iCAAkC,MAAM,EACrDA,EAAQ,KAAK,+BAAgCC,CAAG,EAEhDD,EACEC,GAAOzD,EAAc,WAAa,aACpC,EAAE,QAAQ,GAGPkD,EAAgBC,CAAW,GAC9BJ,EAAkB,OAAOS,CAAO,EAGlCL,GACF,CAAC,EAEGlD,EAAa,IACX+C,EAAS,MACXI,EAAc,YAAapD,EAAcC,CAAU,EAAE,KACnD+C,EAAS,OAAO,GAAO,IAAMA,EAAS,IACxC,EAEEA,EAAS,MACXI,EAAc,YAAapD,EAAcC,CAAU,EAAE,KACnD+C,EAAS,OAAO,GAAO,KAAOA,EAAS,IACzC,GAIJ,MAAMW,EAAU,4BAChB,OAAIZ,EAAkB,CAAC,EAAEY,CAAO,IAChCZ,EAAkB,CAAC,EAAEY,CAAO,EAAI,GAIhCZ,EAAkB,GAChB,QACA,mCACA,UAAY,CACV,MAAMS,EAAU/C,EAAE,IAAI,EAEtB,OADmB+C,EAAQ,KAAK,gCAAgC,GAE9D,IAAK,OAAQ,CAEX,MAAMI,EAAO,SAASJ,EAAQ,KAAK,8BAA8B,EAAG,EAAE,EACtE,GAAI,MAAMI,CAAI,GAAKA,GAAQ,GAAKA,EAAO5C,EAAM,YAAa,OAC1DA,EAAM,aAAe4C,EACrB,KACF,CACA,IAAK,aACH5C,EAAM,aAAe,EACrB,MACF,IAAK,YACHA,EAAM,aAAeA,EAAM,YAC3B,MACF,IAAK,YACH,GAAIA,EAAM,eAAiBA,EAAM,YAAa,OAC9CA,EAAM,eACN,MACF,IAAK,YACH,GAAIA,EAAM,eAAiB,EAAG,OAC9BA,EAAM,eACN,MACF,QACE,MACJ,CAEAO,EAASP,CAAK,CAChB,CACF,GAEO+B,CACT,CAzISZ,EAAAA,EAAAA,KAAAzC,EAAAyC,EAAA,yBAAA"}