(function () {
    'use strict';

    (function() {
        const env = {"NODE_ENV":"development"};
        try {
            if (process) {
                process.env = Object.assign({}, process.env);
                Object.assign(process.env, env);
                return;
            }
        } catch (e) {} // avoid ReferenceError: process is not defined
        globalThis.process = { env:env };
    })();

    var __defProp = Object.defineProperty;
    var __name = (target, value) => __defProp(target, "name", { value, configurable: true });

    const { wp: wp$1 } = window;
    let mediaModal;
    let mediaModalCallback;
    const openMediaModal = /* @__PURE__ */ __name(() => {
      if (mediaModal) {
        mediaModal.open();
        return;
      }
      mediaModal = wp$1.media({
        title: "Select media attachment",
        button: {
          text: "Select"
        },
        multiple: true
      });
      mediaModal.on("select", mediaModalCallback);
      mediaModal.open();
    }, "openMediaModal");
    function withValidName(asset) {
      if (asset.name) {
        asset.name = asset.name.replace(/[^\w_\-]/g, "");
      }
      return asset;
    }
    __name(withValidName, "withValidName");
    const AssetsEditor = /* @__PURE__ */ __name(({ assets }) => {
      const [assetsState, _setAssets] = wp$1.element.useState(assets);
      const assetsRef = wp$1.element.useRef();
      assetsRef.current = assetsState;
      const assetsElementRef = wp$1.element.useRef();
      const updateAssetsElement = /* @__PURE__ */ __name(() => {
        assetsElementRef.current.value = JSON.stringify(assetsRef.current);
      }, "updateAssetsElement");
      wp$1.element.useEffect(() => {
        updateAssetsElement();
      }, [assetsElementRef.current]);
      const refreshAssets = /* @__PURE__ */ __name(() => {
        _setAssets([...assetsRef.current]);
        updateAssetsElement();
      }, "refreshAssets");
      const addAsset = /* @__PURE__ */ __name((newAsset) => {
        assetsRef.current.push(withValidName(newAsset));
        refreshAssets();
      }, "addAsset");
      const updateAsset = /* @__PURE__ */ __name((index, newAsset) => {
        assetsRef.current[index] = {
          ...assetsRef.current[index] || {},
          ...newAsset
        };
        refreshAssets();
      }, "updateAsset");
      const removeAsset = /* @__PURE__ */ __name((assetIndex) => {
        assetsRef.current.splice(assetIndex, 1);
        refreshAssets();
      }, "removeAsset");
      if (!mediaModalCallback) {
        mediaModalCallback = /* @__PURE__ */ __name(() => {
          const attachments = mediaModal.state().get("selection").toJSON();
          for (const attachment of attachments) {
            let skip = false;
            for (const asset of assetsRef.current) {
              if (asset.id === attachment.id) {
                skip = true;
                break;
              }
            }
            if (skip)
              continue;
            const newAsset = [
              "id",
              "name",
              "title",
              "filename",
              "mime",
              "alt",
              "caption",
              "description"
            ].reduce((obj, key) => {
              obj[key] = attachment[key];
              return obj;
            }, {});
            addAsset(newAsset);
          }
        }, "mediaModalCallback");
      }
      const assetNameMap = {};
      return /* @__PURE__ */ wp$1.element.createElement(wp$1.element.Fragment, null, /* @__PURE__ */ wp$1.element.createElement("input", { type: "hidden", name: "assets", ref: assetsElementRef }), /* @__PURE__ */ wp$1.element.createElement("div", { className: "template-assets" }, assetsState.map((asset, assetIndex) => {
        const isDuplicate = assetNameMap[asset.name] ? true : false;
        if (!isDuplicate) {
          assetNameMap[asset.name] = true;
        }
        return /* @__PURE__ */ wp$1.element.createElement("div", { key: `asset-${assetIndex}`, className: "template-asset" }, /* @__PURE__ */ wp$1.element.createElement("div", { className: "template-asset-fields" }, /* @__PURE__ */ wp$1.element.createElement("div", { className: "template-asset-field template-asset-field--name" }, /* @__PURE__ */ wp$1.element.createElement("label", null, "Name"), /* @__PURE__ */ wp$1.element.createElement(
          "input",
          {
            type: "text",
            value: asset.name,
            onChange: (e) => {
              updateAsset(assetIndex, { name: e.target.value });
            }
          }
        )), /* @__PURE__ */ wp$1.element.createElement("div", { className: "template-asset-field template-asset-field--attachment" }, /* @__PURE__ */ wp$1.element.createElement("div", null, isDuplicate && /* @__PURE__ */ wp$1.element.createElement("div", { className: "template-asset--duplicate-name-message" }, "Duplicate name exists"), "ID:", " ", /* @__PURE__ */ wp$1.element.createElement(
          "a",
          {
            href: `post.php?post=${asset.id}&action=edit`,
            target: "_blank"
          },
          asset.id
        ), /* @__PURE__ */ wp$1.element.createElement("br", null), "Title: ", asset.title, /* @__PURE__ */ wp$1.element.createElement("br", null), "File name: ", /* @__PURE__ */ wp$1.element.createElement("code", null, asset.filename), /* @__PURE__ */ wp$1.element.createElement("br", null)))), /* @__PURE__ */ wp$1.element.createElement("div", { className: "template-asset-actions" }, /* @__PURE__ */ wp$1.element.createElement("div", { className: "template-asset-action template-asset-action--remove-asset" }, /* @__PURE__ */ wp$1.element.createElement("div", { className: "icon", onClick: () => removeAsset(assetIndex) }, /* @__PURE__ */ wp$1.element.createElement(
          "svg",
          {
            viewBox: "0 0 1792 1792",
            xmlns: "http://www.w3.org/2000/svg"
          },
          /* @__PURE__ */ wp$1.element.createElement("path", { d: "M1490 1322q0 40-28 68l-136 136q-28 28-68 28t-68-28l-294-294-294 294q-28 28-68 28t-68-28l-136-136q-28-28-28-68t28-68l294-294-294-294q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 294 294-294q28-28 68-28t68 28l136 136q28 28 28 68t-28 68l-294 294 294 294q28 28 28 68z" })
        )))));
      })), /* @__PURE__ */ wp$1.element.createElement(
        "button",
        {
          type: "button",
          className: "button button--add-rule-group",
          onClick: () => openMediaModal()
        },
        "Add asset"
      ));
    }, "AssetsEditor");

    const { jQuery: $ } = window;
    const el = document.getElementById("tangible_template_assets_editor");
    let assets = $(el).data("assets");
    if (!Array.isArray(assets))
      assets = [];
    wp.element.createRoot(el).render(/* @__PURE__ */ wp.element.createElement(AssetsEditor, { assets }));

})();
//# sourceMappingURL=template-assets-editor.min.js.map
