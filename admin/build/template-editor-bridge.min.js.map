{"version":3,"file":"template-editor-bridge.min.js","sources":["../editor/template-editor-bridge/index.ts","../editor/template-editor-bridge/global.ts"],"sourcesContent":["/**\n * Compatibility layer to help with transition of CodeMirror 5 to 6\n */\n\ndeclare global {\n  interface Window {\n    wp: any\n    Tangible: {\n      ajax: any\n      TemplateSystem: any\n      // Legacy\n      createCodeEditor: typeof createTemplateEditor\n    }\n  }\n}\n\nexport type CodeEditorLegacyInterface = {\n  getValue: () => string\n  focus: () => void\n  refresh: () => void\n  setSize: (width: string | null, height: string | null) => void\n  on: (eventName: string, callback: Function) => void\n  off: (eventName: string, callback: Function) => void\n}\n\nexport type CodeEditorLegacyOptions = {\n  language?: string\n  onSave?: () => void\n}\n\nexport type CodeEditorInterface = CodeEditorLegacyInterface & {\n  updateTextarea: () => void\n}\n\nexport async function createTemplateEditor(\n  textarea: HTMLTextAreaElement,\n  options: CodeEditorLegacyOptions = {}\n): Promise<CodeEditorInterface> {\n  const { CodeEditor } = window.Tangible.TemplateSystem || {}\n\n  if (!CodeEditor) {\n    throw new Error('CodeEditor not found')\n  }\n\n  // console.log('createTemplateEditor', textarea, CodeEditor, options)\n\n  const { language = 'html', onSave } = options\n\n  const listeners = {}\n  \n  const editor = await CodeEditor.create({\n    // el,\n    lang: language,\n    content: textarea.value,\n    onUpdate(doc) {\n      if (listeners['change']) {\n        api.emit('change') // Caller gets value from editor\n      }\n    },\n    onSave() {\n      if (!onSave) return\n      updateTextarea()\n      onSave()\n    },\n    editorActionsPanel: options.editorActionsPanel\n  })\n  \n  const api = {\n\n    // New editor\n    \n    codeMirror6: editor,\n    updateTextarea,\n\n    // Legacy editor\n\n    getValue() {\n      if (!editor) return ''\n      return editor.view.state.doc.toString()\n    },\n    focus() {\n      editor && editor.view.focus()\n    },\n    refresh() {},\n    setSize(width: string | null, height: string | null) {},\n\n    on(eventName, callback) {\n      if (!listeners[eventName]) {\n        listeners[eventName] = []\n      }\n      listeners[eventName].push(callback)\n    },\n    emit(eventName, ...args) {\n      if (listeners[eventName]) {\n        for (const listener of listeners[eventName]) {\n          listener(...args)\n        }\n      }\n    },\n    off(eventName, callback) {\n      if (listeners[eventName]) {\n        listeners[eventName] = listeners[eventName].filter(\n          (f) => f !== callback\n        )\n      }\n    },\n  }\n  \n  // const el = document.createElement('div')\n  const containterClass = 'tangible-template-editor-container'\n\n  if (!textarea.parentNode?.classList.contains(containterClass)) {\n    // el.classList.add(containterClass)\n    textarea.parentNode?.classList.add(containterClass)\n  }\n\n  function updateTextarea() {\n    textarea.value = editor.view.state.doc.toString()\n  }\n\n  /**\n   * Support legacy method of passing textarea instead of div container\n   * @see https://codemirror.net/docs/migration/#codemirror.fromtextarea\n   */\n  textarea.parentNode?.insertBefore(editor.view.dom, textarea)\n\n  if (textarea.form) {\n    textarea.form.addEventListener('submit', () => updateTextarea())\n  }\n\n  return api\n}\n","import { createTemplateEditor } from './index'\n\nwindow.Tangible = window.Tangible || {}\nwindow.Tangible.createCodeEditor = createTemplateEditor\n"],"names":[],"mappings":"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"}