{"version":3,"file":"api.min.js","sources":["../src/action.ts","../src/form.ts","../src/index.ts"],"sourcesContent":["\nexport function createAction(options) {\n\n  const {\n    ajaxUrl,\n    nonce,\n    ajaxAction\n  } = options\n\n  return async function action(name, data) {\n\n    const formData = new FormData()\n  \n    formData.append('action', ajaxAction)\n    formData.append('nonce', nonce)\n    formData.append('request', JSON.stringify({\n      action: name,\n      data\n    }))\n  \n    // TODO: Support file upload\n  \n    try {\n  \n      const response = await fetch(ajaxUrl, {\n        method: 'POST',\n        credentials: 'same-origin',\n        body: formData\n      })\n  \n      if ( !(response.status >= 200 && response.status < 300) ) {\n        const error = {\n          code: response.status,\n          message: response.statusText\n        }\n        return { error }\n      }\n  \n      // Action response can be: { data } or { error }\n      return await response.json()\n  \n    } catch(error) {\n      // Convert into error response\n      return { error }\n    }\n  \n  }\n}\n","\n// Form\n\nconst inputFields = {\n  input: true,\n  select: true,\n  textarea: true\n}\n\nexport function getFormData(formElement) {\n\n  // TODO: Use utility method from Form module\n\n  const data = {}\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/elements\n  const $inputs = formElement.elements\n\n  for (let index = 0; index < $inputs.length; index++) {\n\n    const $input = $inputs[index]\n    const { nodeName, type, name } = $input\n\n    // Filter out fieldset, button, etc.\n    if (!inputFields[ nodeName.toLowerCase() ]) continue\n\n    const value = type==='checkbox'\n      ? $input.checked // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox\n      : $input.value\n\n    data[name] = value\n  }\n\n  return data\n}\n","import { createAction } from './action'\nimport { getFormData } from './form'\n\n// From server side\nconst api = window.Tangible.API\nconst action = createAction(api)\n\nObject.assign(api, {\n  action,\n  getFormData\n})\n"],"names":["createAction","options","ajaxUrl","nonce","ajaxAction","__name","name","data","formData","response","error","inputFields","getFormData","formElement","$inputs","index","$input","nodeName","type","value","api","action"],"mappings":"sXACgBA,EAAaC,EAAS,CAEpC,KAAM,CACJ,QAAAC,EACA,MAAAC,EACA,WAAAC,CACF,EAAIH,EAEJ,OAAOI,EAAA,eAAsBC,EAAMC,EAAM,CAEvC,MAAMC,EAAW,IAAI,SAErBA,EAAS,OAAO,SAAUJ,CAAU,EACpCI,EAAS,OAAO,QAASL,CAAK,EAC9BK,EAAS,OAAO,UAAW,KAAK,UAAU,CACxC,OAAQF,EACR,KAAAC,CACF,CAAC,CAAC,EAIF,GAAI,CAEF,MAAME,EAAW,MAAM,MAAMP,EAAS,CACpC,OAAQ,OACR,YAAa,cACb,KAAMM,CACR,CAAC,EAED,OAAOC,EAAS,QAAU,KAAOA,EAAS,OAAS,IAS5C,MAAMA,EAAS,OAJb,CAAE,MAJK,CACZ,KAAMA,EAAS,OACf,QAASA,EAAS,UACpB,CACe,CAMnB,OAAQC,EAAR,CAEE,MAAO,CAAE,MAAAA,CAAM,CACjB,CAEF,EArCO,QAsCT,CAAA,CA9CgBL,EAAAL,EAAA,gBAAAK,EAAAL,EAAA,cAAA,oFCEhB,MAAMW,EAAc,CAClB,MAAO,GACP,OAAQ,GACR,SAAU,EACZ,EAEO,SAASC,EAAYC,EAAa,CAIvC,MAAMN,EAAO,CAAA,EAGPO,EAAUD,EAAY,SAE5B,QAASE,EAAQ,EAAGA,EAAQD,EAAQ,OAAQC,IAAS,CAEnD,MAAMC,EAASF,EAAQC,CAAK,EACtB,CAAE,SAAAE,EAAU,KAAAC,EAAM,KAAAZ,CAAK,EAAIU,EAGjC,GAAI,CAACL,EAAaM,EAAS,aAAc,EAAG,SAE5C,MAAME,EAAQD,IAAO,WACjBF,EAAO,QACPA,EAAO,MAEXT,EAAKD,CAAI,EAAIa,EAGf,OAAOZ,CACT,CAzBgBF,EAAAO,EAAA,eAAAP,EAAAO,EAAA,aAAA,ECLhB,MAAMQ,EAAM,OAAO,SAAS,IACtBC,EAASrB,EAAaoB,CAAG,EAE/B,OAAO,OAAOA,EAAK,CACjB,OAAAC,EACA,YAAAT,CACF,CAAC"}