{"version":3,"file":"date-picker.min.js.map","sources":["../src/date-picker/pikaday.js"],"sourcesContent":["/*!\n * Pikaday\n *\n * Copyright Â© 2014 David Bushell | BSD & MIT license | https://github.com/Pikaday/Pikaday\n */\n\n/**\n * feature detection and helper functions\n */\nvar hasMoment =\n    typeof window !== 'undefined' && typeof window.moment === 'function',\n  hasEventListeners = !!window.addEventListener,\n  document = window.document,\n  sto = window.setTimeout,\n  addEvent = function (el, e, callback, capture) {\n    if (hasEventListeners) {\n      el.addEventListener(e, callback, !!capture)\n    } else {\n      el.attachEvent('on' + e, callback)\n    }\n  },\n  removeEvent = function (el, e, callback, capture) {\n    if (hasEventListeners) {\n      el.removeEventListener(e, callback, !!capture)\n    } else {\n      el.detachEvent('on' + e, callback)\n    }\n  },\n  trim = function (str) {\n    return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '')\n  },\n  hasClass = function (el, cn) {\n    return (' ' + el.className + ' ').indexOf(' ' + cn + ' ') !== -1\n  },\n  addClass = function (el, cn) {\n    if (!hasClass(el, cn)) {\n      el.className = el.className === '' ? cn : el.className + ' ' + cn\n    }\n  },\n  removeClass = function (el, cn) {\n    el.className = trim((' ' + el.className + ' ').replace(' ' + cn + ' ', ' '))\n  },\n  isArray = function (obj) {\n    return /Array/.test(Object.prototype.toString.call(obj))\n  },\n  isDate = function (obj) {\n    return (\n      /Date/.test(Object.prototype.toString.call(obj)) && !isNaN(obj.getTime())\n    )\n  },\n  isWeekend = function (date) {\n    var day = date.getDay()\n    return day === 0 || day === 6\n  },\n  isLeapYear = function (year) {\n    // solution lifted from date.js (MIT license): https://github.com/datejs/Datejs\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0\n  },\n  getDaysInMonth = function (year, month) {\n    return [\n      31,\n      isLeapYear(year) ? 29 : 28,\n      31,\n      30,\n      31,\n      30,\n      31,\n      31,\n      30,\n      31,\n      30,\n      31,\n    ][month]\n  },\n  setToStartOfDay = function (date) {\n    if (isDate(date)) date.setHours(0, 0, 0, 0)\n  },\n  compareDates = function (a, b) {\n    // weak date comparison (use setToStartOfDay(date) to ensure correct result)\n    return a.getTime() === b.getTime()\n  },\n  extend = function (to, from, overwrite) {\n    var prop, hasProp\n    for (prop in from) {\n      hasProp = to[prop] !== undefined\n      if (\n        hasProp &&\n        typeof from[prop] === 'object' &&\n        from[prop] !== null &&\n        from[prop].nodeName === undefined\n      ) {\n        if (isDate(from[prop])) {\n          if (overwrite) {\n            to[prop] = new Date(from[prop].getTime())\n          }\n        } else if (isArray(from[prop])) {\n          if (overwrite) {\n            to[prop] = from[prop].slice(0)\n          }\n        } else {\n          to[prop] = extend({}, from[prop], overwrite)\n        }\n      } else if (overwrite || !hasProp) {\n        to[prop] = from[prop]\n      }\n    }\n    return to\n  },\n  fireEvent = function (el, eventName, data) {\n    var ev\n\n    if (document.createEvent) {\n      ev = document.createEvent('HTMLEvents')\n      ev.initEvent(eventName, true, false)\n      ev = extend(ev, data)\n      el.dispatchEvent(ev)\n    } else if (document.createEventObject) {\n      ev = document.createEventObject()\n      ev = extend(ev, data)\n      el.fireEvent('on' + eventName, ev)\n    }\n  },\n  adjustCalendar = function (calendar) {\n    if (calendar.month < 0) {\n      calendar.year -= Math.ceil(Math.abs(calendar.month) / 12)\n      calendar.month += 12\n    }\n    if (calendar.month > 11) {\n      calendar.year += Math.floor(Math.abs(calendar.month) / 12)\n      calendar.month -= 12\n    }\n    return calendar\n  },\n  /**\n   * defaults and localisation\n   */\n  defaults = {\n    // bind the picker to a form field\n    field: null,\n\n    // automatically show/hide the picker on `field` focus (default `true` if `field` is set)\n    bound: undefined,\n\n    // data-attribute on the input field with an aria assistance tekst (only applied when `bound` is set)\n    ariaLabel: 'Use the arrow keys to pick a date',\n\n    // position of the datepicker, relative to the field (default to bottom & left)\n    // ('bottom' & 'left' keywords are not used, 'top' & 'right' are modifier on the bottom/left position)\n    position: 'bottom left',\n\n    // automatically fit in the viewport even if it means repositioning from the position option\n    reposition: true,\n\n    // the default output format for `.toString()` and `field` value\n    format: 'YYYY-MM-DD',\n\n    // the toString function which gets passed a current date object and format\n    // and returns a string\n    toString: null,\n\n    // used to create date object from current input string\n    parse: null,\n\n    // the initial date to view when first opened\n    defaultDate: null,\n\n    // make the `defaultDate` the initial selected value\n    setDefaultDate: false,\n\n    // first day of week (0: Sunday, 1: Monday etc)\n    firstDay: 0,\n\n    // the default flag for moment's strict date parsing\n    formatStrict: false,\n\n    // the minimum/earliest date that can be selected\n    minDate: null,\n    // the maximum/latest date that can be selected\n    maxDate: null,\n\n    // number of years either side, or array of upper/lower range\n    yearRange: 10,\n\n    // show week numbers at head of row\n    showWeekNumber: false,\n\n    // Week picker mode\n    pickWholeWeek: false,\n\n    // used internally (don't config outside)\n    minYear: 0,\n    maxYear: 9999,\n    minMonth: undefined,\n    maxMonth: undefined,\n\n    startRange: null,\n    endRange: null,\n\n    isRTL: false,\n\n    // Additional text to append to the year in the calendar title\n    yearSuffix: '',\n\n    // Render the month after year in the calendar title\n    showMonthAfterYear: false,\n\n    // Render days of the calendar grid that fall in the next or previous month\n    showDaysInNextAndPreviousMonths: false,\n\n    // Allows user to select days that fall in the next or previous month\n    enableSelectionDaysInNextAndPreviousMonths: false,\n\n    // how many months are visible\n    numberOfMonths: 1,\n\n    // when numberOfMonths is used, this will help you to choose where the main calendar will be (default `left`, can be set to `right`)\n    // only used for the first display or when a selected date is not visible\n    mainCalendar: 'left',\n\n    // Specify a DOM element to render the calendar in\n    container: undefined,\n\n    // Blur field when date is selected\n    blurFieldOnSelect: true,\n\n    // internationalization\n    i18n: {\n      previousMonth: 'Previous Month',\n      nextMonth: 'Next Month',\n      months: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n      ],\n      weekdays: [\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n      ],\n      weekdaysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    },\n\n    // Theme Classname\n    theme: null,\n\n    // events array\n    events: [],\n\n    // callback function\n    onSelect: null,\n    onOpen: null,\n    onClose: null,\n    onDraw: null,\n\n    // Enable keyboard input\n    keyboardInput: true,\n  },\n  /**\n   * templating functions to abstract HTML rendering\n   */\n  renderDayName = function (opts, day, abbr) {\n    day += opts.firstDay\n    while (day >= 7) {\n      day -= 7\n    }\n    return abbr ? opts.i18n.weekdaysShort[day] : opts.i18n.weekdays[day]\n  },\n  renderDay = function (opts) {\n    var arr = []\n    var ariaSelected = 'false'\n    if (opts.isEmpty) {\n      if (opts.showDaysInNextAndPreviousMonths) {\n        arr.push('is-outside-current-month')\n\n        if (!opts.enableSelectionDaysInNextAndPreviousMonths) {\n          arr.push('is-selection-disabled')\n        }\n      } else {\n        return '<td class=\"is-empty\"></td>'\n      }\n    }\n    if (opts.isDisabled) {\n      arr.push('is-disabled')\n    }\n    if (opts.isToday) {\n      arr.push('is-today')\n    }\n    if (opts.isSelected) {\n      arr.push('is-selected')\n      ariaSelected = 'true'\n    }\n    if (opts.hasEvent) {\n      arr.push('has-event')\n    }\n    if (opts.isInRange) {\n      arr.push('is-inrange')\n    }\n    if (opts.isStartRange) {\n      arr.push('is-startrange')\n    }\n    if (opts.isEndRange) {\n      arr.push('is-endrange')\n    }\n    return (\n      '<td data-day=\"' +\n      opts.day +\n      '\" class=\"' +\n      arr.join(' ') +\n      '\" aria-selected=\"' +\n      ariaSelected +\n      '\">' +\n      '<button class=\"pika-button pika-day\" type=\"button\" ' +\n      'data-pika-year=\"' +\n      opts.year +\n      '\" data-pika-month=\"' +\n      opts.month +\n      '\" data-pika-day=\"' +\n      opts.day +\n      '\">' +\n      opts.day +\n      '</button>' +\n      '</td>'\n    )\n  },\n  isoWeek = function (date) {\n    // Ensure we're at the start of the day.\n    date.setHours(0, 0, 0, 0)\n\n    // Thursday in current week decides the year because January 4th\n    // is always in the first week according to ISO8601.\n\n    var yearDay = date.getDate(),\n      weekDay = date.getDay(),\n      dayInFirstWeek = 4, // January 4th\n      dayShift = dayInFirstWeek - 1, // counting starts at 0\n      daysPerWeek = 7,\n      prevWeekDay = function (day) {\n        return (day + daysPerWeek - 1) % daysPerWeek\n      }\n\n    // Adjust to Thursday in week 1 and count number of weeks from date to week 1.\n\n    date.setDate(yearDay + dayShift - prevWeekDay(weekDay))\n\n    var jan4th = new Date(date.getFullYear(), 0, dayInFirstWeek),\n      msPerDay = 24 * 60 * 60 * 1000,\n      daysBetween = (date.getTime() - jan4th.getTime()) / msPerDay,\n      weekNum =\n        1 +\n        Math.round(\n          (daysBetween - dayShift + prevWeekDay(jan4th.getDay())) / daysPerWeek\n        )\n\n    return weekNum\n  },\n  renderWeek = function (d, m, y) {\n    var date = new Date(y, m, d),\n      week = hasMoment ? moment(date).isoWeek() : isoWeek(date)\n\n    return '<td class=\"pika-week\">' + week + '</td>'\n  },\n  renderRow = function (days, isRTL, pickWholeWeek, isRowSelected) {\n    return (\n      '<tr class=\"pika-row' +\n      (pickWholeWeek ? ' pick-whole-week' : '') +\n      (isRowSelected ? ' is-selected' : '') +\n      '\">' +\n      (isRTL ? days.reverse() : days).join('') +\n      '</tr>'\n    )\n  },\n  renderBody = function (rows) {\n    return '<tbody>' + rows.join('') + '</tbody>'\n  },\n  renderHead = function (opts) {\n    var i,\n      arr = []\n    if (opts.showWeekNumber) {\n      arr.push('<th></th>')\n    }\n    for (i = 0; i < 7; i++) {\n      arr.push(\n        '<th scope=\"col\"><abbr title=\"' +\n          renderDayName(opts, i) +\n          '\">' +\n          renderDayName(opts, i, true) +\n          '</abbr></th>'\n      )\n    }\n    return (\n      '<thead><tr>' +\n      (opts.isRTL ? arr.reverse() : arr).join('') +\n      '</tr></thead>'\n    )\n  },\n  renderTitle = function (instance, c, year, month, refYear, randId) {\n    var i,\n      j,\n      arr,\n      opts = instance._o,\n      isMinYear = year === opts.minYear,\n      isMaxYear = year === opts.maxYear,\n      html =\n        '<div id=\"' +\n        randId +\n        '\" class=\"pika-title\" role=\"heading\" aria-live=\"assertive\">',\n      monthHtml,\n      yearHtml,\n      prev = true,\n      next = true\n\n    for (arr = [], i = 0; i < 12; i++) {\n      arr.push(\n        '<option value=\"' +\n          (year === refYear ? i - c : 12 + i - c) +\n          '\"' +\n          (i === month ? ' selected=\"selected\"' : '') +\n          ((isMinYear && i < opts.minMonth) || (isMaxYear && i > opts.maxMonth)\n            ? ' disabled=\"disabled\"'\n            : '') +\n          '>' +\n          opts.i18n.months[i] +\n          '</option>'\n      )\n    }\n\n    monthHtml =\n      '<div class=\"pika-label\">' +\n      opts.i18n.months[month] +\n      '<select class=\"pika-select pika-select-month\" tabindex=\"-1\">' +\n      arr.join('') +\n      '</select></div>'\n\n    if (isArray(opts.yearRange)) {\n      i = opts.yearRange[0]\n      j = opts.yearRange[1] + 1\n    } else {\n      i = year - opts.yearRange\n      j = 1 + year + opts.yearRange\n    }\n\n    for (arr = []; i < j && i <= opts.maxYear; i++) {\n      if (i >= opts.minYear) {\n        arr.push(\n          '<option value=\"' +\n            i +\n            '\"' +\n            (i === year ? ' selected=\"selected\"' : '') +\n            '>' +\n            i +\n            '</option>'\n        )\n      }\n    }\n    yearHtml =\n      '<div class=\"pika-label\">' +\n      year +\n      opts.yearSuffix +\n      '<select class=\"pika-select pika-select-year\" tabindex=\"-1\">' +\n      arr.join('') +\n      '</select></div>'\n\n    if (opts.showMonthAfterYear) {\n      html += yearHtml + monthHtml\n    } else {\n      html += monthHtml + yearHtml\n    }\n\n    if (isMinYear && (month === 0 || opts.minMonth >= month)) {\n      prev = false\n    }\n\n    if (isMaxYear && (month === 11 || opts.maxMonth <= month)) {\n      next = false\n    }\n\n    if (c === 0) {\n      html +=\n        '<button class=\"pika-prev' +\n        (prev ? '' : ' is-disabled') +\n        '\" type=\"button\">' +\n        opts.i18n.previousMonth +\n        '</button>'\n    }\n    if (c === instance._o.numberOfMonths - 1) {\n      html +=\n        '<button class=\"pika-next' +\n        (next ? '' : ' is-disabled') +\n        '\" type=\"button\">' +\n        opts.i18n.nextMonth +\n        '</button>'\n    }\n\n    return (html += '</div>')\n  },\n  renderTable = function (opts, data, randId) {\n    return (\n      '<table cellpadding=\"0\" cellspacing=\"0\" class=\"pika-table\" role=\"grid\" aria-labelledby=\"' +\n      randId +\n      '\">' +\n      renderHead(opts) +\n      renderBody(data) +\n      '</table>'\n    )\n  },\n  /**\n   * Pikaday constructor\n   */\n  Pikaday = function (options) {\n    var self = this,\n      opts = self.config(options)\n\n    self._onMouseDown = function (e) {\n      if (!self._v) {\n        return\n      }\n      e = e || window.event\n      var target = e.target || e.srcElement\n      if (!target) {\n        return\n      }\n\n      if (!hasClass(target, 'is-disabled')) {\n        if (\n          hasClass(target, 'pika-button') &&\n          !hasClass(target, 'is-empty') &&\n          !hasClass(target.parentNode, 'is-disabled')\n        ) {\n          self.setDate(\n            new Date(\n              target.getAttribute('data-pika-year'),\n              target.getAttribute('data-pika-month'),\n              target.getAttribute('data-pika-day')\n            )\n          )\n          if (opts.bound) {\n            sto(function () {\n              self.hide()\n              if (opts.blurFieldOnSelect && opts.field) {\n                opts.field.blur()\n              }\n            }, 100)\n          }\n        } else if (hasClass(target, 'pika-prev')) {\n          self.prevMonth()\n        } else if (hasClass(target, 'pika-next')) {\n          self.nextMonth()\n        }\n      }\n      if (!hasClass(target, 'pika-select')) {\n        // if this is touch event prevent mouse events emulation\n        if (e.preventDefault) {\n          e.preventDefault()\n        } else {\n          e.returnValue = false\n          return false\n        }\n      } else {\n        self._c = true\n      }\n    }\n\n    self._onChange = function (e) {\n      e = e || window.event\n      var target = e.target || e.srcElement\n      if (!target) {\n        return\n      }\n      if (hasClass(target, 'pika-select-month')) {\n        self.gotoMonth(target.value)\n      } else if (hasClass(target, 'pika-select-year')) {\n        self.gotoYear(target.value)\n      }\n    }\n\n    self._onKeyChange = function (e) {\n      e = e || window.event\n\n      if (self.isVisible()) {\n        switch (e.keyCode) {\n          case 13:\n          case 27:\n            if (opts.field) {\n              opts.field.blur()\n            }\n            break\n          case 37:\n            self.adjustDate('subtract', 1)\n            break\n          case 38:\n            self.adjustDate('subtract', 7)\n            break\n          case 39:\n            self.adjustDate('add', 1)\n            break\n          case 40:\n            self.adjustDate('add', 7)\n            break\n          case 8:\n          case 46:\n            self.setDate(null)\n            break\n        }\n      }\n    }\n\n    self._parseFieldValue = function () {\n      if (opts.parse) {\n        return opts.parse(opts.field.value, opts.format)\n      } else if (hasMoment) {\n        var date = moment(opts.field.value, opts.format, opts.formatStrict)\n        return date && date.isValid() ? date.toDate() : null\n      } else {\n        return new Date(Date.parse(opts.field.value))\n      }\n    }\n\n    self._onInputChange = function (e) {\n      var date\n\n      if (e.firedBy === self) {\n        return\n      }\n      date = self._parseFieldValue()\n      if (isDate(date)) {\n        self.setDate(date)\n      }\n      if (!self._v) {\n        self.show()\n      }\n    }\n\n    self._onInputFocus = function () {\n      self.show()\n    }\n\n    self._onInputClick = function () {\n      self.show()\n    }\n\n    self._onInputBlur = function () {\n      // IE allows pika div to gain focus; catch blur the input field\n      var pEl = document.activeElement\n      do {\n        if (hasClass(pEl, 'pika-single')) {\n          return\n        }\n      } while ((pEl = pEl.parentNode))\n\n      if (!self._c) {\n        self._b = sto(function () {\n          self.hide()\n        }, 50)\n      }\n      self._c = false\n    }\n\n    self._onClick = function (e) {\n      e = e || window.event\n      var target = e.target || e.srcElement,\n        pEl = target\n      if (!target) {\n        return\n      }\n      if (!hasEventListeners && hasClass(target, 'pika-select')) {\n        if (!target.onchange) {\n          target.setAttribute('onchange', 'return;')\n          addEvent(target, 'change', self._onChange)\n        }\n      }\n      do {\n        if (hasClass(pEl, 'pika-single') || pEl === opts.trigger) {\n          return\n        }\n      } while ((pEl = pEl.parentNode))\n      if (self._v && target !== opts.trigger && pEl !== opts.trigger) {\n        self.hide()\n      }\n    }\n\n    self.el = document.createElement('div')\n    self.el.className =\n      'pika-single' +\n      (opts.isRTL ? ' is-rtl' : '') +\n      (opts.theme ? ' ' + opts.theme : '')\n\n    addEvent(self.el, 'mousedown', self._onMouseDown, true)\n    addEvent(self.el, 'touchend', self._onMouseDown, true)\n    addEvent(self.el, 'change', self._onChange)\n\n    if (opts.keyboardInput) {\n      addEvent(document, 'keydown', self._onKeyChange)\n    }\n\n    if (opts.field) {\n      if (opts.container) {\n        opts.container.appendChild(self.el)\n      } else if (opts.bound) {\n        document.body.appendChild(self.el)\n      } else {\n        opts.field.parentNode.insertBefore(self.el, opts.field.nextSibling)\n      }\n      addEvent(opts.field, 'change', self._onInputChange)\n\n      if (!opts.defaultDate) {\n        opts.defaultDate = self._parseFieldValue()\n        opts.setDefaultDate = true\n      }\n    }\n\n    var defDate = opts.defaultDate\n\n    if (isDate(defDate)) {\n      if (opts.setDefaultDate) {\n        self.setDate(defDate, true)\n      } else {\n        self.gotoDate(defDate)\n      }\n    } else {\n      self.gotoDate(new Date())\n    }\n\n    if (opts.bound) {\n      this.hide()\n      self.el.className += ' is-bound'\n      addEvent(opts.trigger, 'click', self._onInputClick)\n      addEvent(opts.trigger, 'focus', self._onInputFocus)\n      addEvent(opts.trigger, 'blur', self._onInputBlur)\n    } else {\n      this.show()\n    }\n  }\n\n/**\n * public Pikaday API\n */\nPikaday.prototype = {\n  /**\n   * configure functionality\n   */\n  config: function (options) {\n    if (!this._o) {\n      this._o = extend({}, defaults, true)\n    }\n\n    var opts = extend(this._o, options, true)\n\n    opts.isRTL = !!opts.isRTL\n\n    opts.field = opts.field && opts.field.nodeName ? opts.field : null\n\n    opts.theme =\n      typeof opts.theme === 'string' && opts.theme ? opts.theme : null\n\n    opts.bound = !!(opts.bound !== undefined\n      ? opts.field && opts.bound\n      : opts.field)\n\n    opts.trigger =\n      opts.trigger && opts.trigger.nodeName ? opts.trigger : opts.field\n\n    opts.disableWeekends = !!opts.disableWeekends\n\n    opts.disableDayFn =\n      typeof opts.disableDayFn === 'function' ? opts.disableDayFn : null\n\n    var nom = parseInt(opts.numberOfMonths, 10) || 1\n    opts.numberOfMonths = nom > 4 ? 4 : nom\n\n    if (!isDate(opts.minDate)) {\n      opts.minDate = false\n    }\n    if (!isDate(opts.maxDate)) {\n      opts.maxDate = false\n    }\n    if (opts.minDate && opts.maxDate && opts.maxDate < opts.minDate) {\n      opts.maxDate = opts.minDate = false\n    }\n    if (opts.minDate) {\n      this.setMinDate(opts.minDate)\n    }\n    if (opts.maxDate) {\n      this.setMaxDate(opts.maxDate)\n    }\n\n    if (isArray(opts.yearRange)) {\n      var fallback = new Date().getFullYear() - 10\n      opts.yearRange[0] = parseInt(opts.yearRange[0], 10) || fallback\n      opts.yearRange[1] = parseInt(opts.yearRange[1], 10) || fallback\n    } else {\n      opts.yearRange =\n        Math.abs(parseInt(opts.yearRange, 10)) || defaults.yearRange\n      if (opts.yearRange > 100) {\n        opts.yearRange = 100\n      }\n    }\n\n    return opts\n  },\n\n  /**\n   * return a formatted string of the current selection (using Moment.js if available)\n   */\n  toString: function (format) {\n    format = format || this._o.format\n    if (!isDate(this._d)) {\n      return ''\n    }\n    if (this._o.toString) {\n      return this._o.toString(this._d, format)\n    }\n    if (hasMoment) {\n      return moment(this._d).format(format)\n    }\n    return this._d.toDateString()\n  },\n\n  /**\n   * return a Moment.js object of the current selection (if available)\n   */\n  getMoment: function () {\n    return hasMoment ? moment(this._d) : null\n  },\n\n  /**\n   * set the current selection from a Moment.js object (if available)\n   */\n  setMoment: function (date, preventOnSelect) {\n    if (hasMoment && moment.isMoment(date)) {\n      this.setDate(date.toDate(), preventOnSelect)\n    }\n  },\n\n  /**\n   * return a Date object of the current selection\n   */\n  getDate: function () {\n    return isDate(this._d) ? new Date(this._d.getTime()) : null\n  },\n\n  /**\n   * set the current selection\n   */\n  setDate: function (date, preventOnSelect) {\n    if (!date) {\n      this._d = null\n\n      if (this._o.field) {\n        this._o.field.value = ''\n        fireEvent(this._o.field, 'change', { firedBy: this })\n      }\n\n      return this.draw()\n    }\n    if (typeof date === 'string') {\n      date = new Date(Date.parse(date))\n    }\n    if (!isDate(date)) {\n      return\n    }\n\n    var min = this._o.minDate,\n      max = this._o.maxDate\n\n    if (isDate(min) && date < min) {\n      date = min\n    } else if (isDate(max) && date > max) {\n      date = max\n    }\n\n    this._d = new Date(date.getTime())\n    setToStartOfDay(this._d)\n    this.gotoDate(this._d)\n\n    if (this._o.field) {\n      this._o.field.value = this.toString()\n      fireEvent(this._o.field, 'change', { firedBy: this })\n    }\n    if (!preventOnSelect && typeof this._o.onSelect === 'function') {\n      this._o.onSelect.call(this, this.getDate())\n    }\n  },\n\n  /**\n   * clear and reset the date\n   */\n  clear: function () {\n    this.setDate(null)\n  },\n\n  /**\n   * change view to a specific date\n   */\n  gotoDate: function (date) {\n    var newCalendar = true\n\n    if (!isDate(date)) {\n      return\n    }\n\n    if (this.calendars) {\n      var firstVisibleDate = new Date(\n          this.calendars[0].year,\n          this.calendars[0].month,\n          1\n        ),\n        lastVisibleDate = new Date(\n          this.calendars[this.calendars.length - 1].year,\n          this.calendars[this.calendars.length - 1].month,\n          1\n        ),\n        visibleDate = date.getTime()\n      // get the end of the month\n      lastVisibleDate.setMonth(lastVisibleDate.getMonth() + 1)\n      lastVisibleDate.setDate(lastVisibleDate.getDate() - 1)\n      newCalendar =\n        visibleDate < firstVisibleDate.getTime() ||\n        lastVisibleDate.getTime() < visibleDate\n    }\n\n    if (newCalendar) {\n      this.calendars = [\n        {\n          month: date.getMonth(),\n          year: date.getFullYear(),\n        },\n      ]\n      if (this._o.mainCalendar === 'right') {\n        this.calendars[0].month += 1 - this._o.numberOfMonths\n      }\n    }\n\n    this.adjustCalendars()\n  },\n\n  adjustDate: function (sign, days) {\n    var day = this.getDate() || new Date()\n    var difference = parseInt(days) * 24 * 60 * 60 * 1000\n\n    var newDay\n\n    if (sign === 'add') {\n      newDay = new Date(day.valueOf() + difference)\n    } else if (sign === 'subtract') {\n      newDay = new Date(day.valueOf() - difference)\n    }\n\n    this.setDate(newDay)\n  },\n\n  adjustCalendars: function () {\n    this.calendars[0] = adjustCalendar(this.calendars[0])\n    for (var c = 1; c < this._o.numberOfMonths; c++) {\n      this.calendars[c] = adjustCalendar({\n        month: this.calendars[0].month + c,\n        year: this.calendars[0].year,\n      })\n    }\n    this.draw()\n  },\n\n  gotoToday: function () {\n    this.gotoDate(new Date())\n  },\n\n  /**\n   * change view to a specific month (zero-index, e.g. 0: January)\n   */\n  gotoMonth: function (month) {\n    if (!isNaN(month)) {\n      this.calendars[0].month = parseInt(month, 10)\n      this.adjustCalendars()\n    }\n  },\n\n  nextMonth: function () {\n    this.calendars[0].month++\n    this.adjustCalendars()\n  },\n\n  prevMonth: function () {\n    this.calendars[0].month--\n    this.adjustCalendars()\n  },\n\n  /**\n   * change view to a specific full year (e.g. \"2012\")\n   */\n  gotoYear: function (year) {\n    if (!isNaN(year)) {\n      this.calendars[0].year = parseInt(year, 10)\n      this.adjustCalendars()\n    }\n  },\n\n  /**\n   * change the minDate\n   */\n  setMinDate: function (value) {\n    if (value instanceof Date) {\n      setToStartOfDay(value)\n      this._o.minDate = value\n      this._o.minYear = value.getFullYear()\n      this._o.minMonth = value.getMonth()\n    } else {\n      this._o.minDate = defaults.minDate\n      this._o.minYear = defaults.minYear\n      this._o.minMonth = defaults.minMonth\n      this._o.startRange = defaults.startRange\n    }\n\n    this.draw()\n  },\n\n  /**\n   * change the maxDate\n   */\n  setMaxDate: function (value) {\n    if (value instanceof Date) {\n      setToStartOfDay(value)\n      this._o.maxDate = value\n      this._o.maxYear = value.getFullYear()\n      this._o.maxMonth = value.getMonth()\n    } else {\n      this._o.maxDate = defaults.maxDate\n      this._o.maxYear = defaults.maxYear\n      this._o.maxMonth = defaults.maxMonth\n      this._o.endRange = defaults.endRange\n    }\n\n    this.draw()\n  },\n\n  setStartRange: function (value) {\n    this._o.startRange = value\n  },\n\n  setEndRange: function (value) {\n    this._o.endRange = value\n  },\n\n  /**\n   * refresh the HTML\n   */\n  draw: function (force) {\n    if (!this._v && !force) {\n      return\n    }\n    var opts = this._o,\n      minYear = opts.minYear,\n      maxYear = opts.maxYear,\n      minMonth = opts.minMonth,\n      maxMonth = opts.maxMonth,\n      html = '',\n      randId\n\n    if (this._y <= minYear) {\n      this._y = minYear\n      if (!isNaN(minMonth) && this._m < minMonth) {\n        this._m = minMonth\n      }\n    }\n    if (this._y >= maxYear) {\n      this._y = maxYear\n      if (!isNaN(maxMonth) && this._m > maxMonth) {\n        this._m = maxMonth\n      }\n    }\n\n    for (var c = 0; c < opts.numberOfMonths; c++) {\n      randId =\n        'pika-title-' +\n        Math.random()\n          .toString(36)\n          .replace(/[^a-z]+/g, '')\n          .substr(0, 2)\n      html +=\n        '<div class=\"pika-lendar\">' +\n        renderTitle(\n          this,\n          c,\n          this.calendars[c].year,\n          this.calendars[c].month,\n          this.calendars[0].year,\n          randId\n        ) +\n        this.render(this.calendars[c].year, this.calendars[c].month, randId) +\n        '</div>'\n    }\n\n    this.el.innerHTML = html\n\n    if (opts.bound) {\n      if (opts.field.type !== 'hidden') {\n        sto(function () {\n          opts.trigger.focus()\n        }, 1)\n      }\n    }\n\n    if (typeof this._o.onDraw === 'function') {\n      this._o.onDraw(this)\n    }\n\n    if (opts.bound) {\n      // let the screen reader user know to use arrow keys\n      opts.field.setAttribute('aria-label', opts.ariaLabel)\n    }\n  },\n\n  adjustPosition: function () {\n    var field,\n      pEl,\n      width,\n      height,\n      viewportWidth,\n      viewportHeight,\n      scrollTop,\n      left,\n      top,\n      clientRect,\n      leftAligned,\n      bottomAligned\n\n    if (this._o.container) return\n\n    this.el.style.position = 'absolute'\n\n    field = this._o.trigger\n    pEl = field\n    width = this.el.offsetWidth\n    height = this.el.offsetHeight\n    viewportWidth = window.innerWidth || document.documentElement.clientWidth\n    viewportHeight = window.innerHeight || document.documentElement.clientHeight\n    scrollTop =\n      window.pageYOffset ||\n      document.body.scrollTop ||\n      document.documentElement.scrollTop\n    leftAligned = true\n    bottomAligned = true\n\n    if (typeof field.getBoundingClientRect === 'function') {\n      clientRect = field.getBoundingClientRect()\n      left = clientRect.left + window.pageXOffset\n      top = clientRect.bottom + window.pageYOffset\n    } else {\n      left = pEl.offsetLeft\n      top = pEl.offsetTop + pEl.offsetHeight\n      while ((pEl = pEl.offsetParent)) {\n        left += pEl.offsetLeft\n        top += pEl.offsetTop\n      }\n    }\n\n    // default position is bottom & left\n    if (\n      (this._o.reposition && left + width > viewportWidth) ||\n      (this._o.position.indexOf('right') > -1 &&\n        left - width + field.offsetWidth > 0)\n    ) {\n      left = left - width + field.offsetWidth\n      leftAligned = false\n    }\n    if (\n      (this._o.reposition && top + height > viewportHeight + scrollTop) ||\n      (this._o.position.indexOf('top') > -1 &&\n        top - height - field.offsetHeight > 0)\n    ) {\n      top = top - height - field.offsetHeight\n      bottomAligned = false\n    }\n\n    this.el.style.left = left + 'px'\n    this.el.style.top = top + 'px'\n\n    addClass(this.el, leftAligned ? 'left-aligned' : 'right-aligned')\n    addClass(this.el, bottomAligned ? 'bottom-aligned' : 'top-aligned')\n    removeClass(this.el, !leftAligned ? 'left-aligned' : 'right-aligned')\n    removeClass(this.el, !bottomAligned ? 'bottom-aligned' : 'top-aligned')\n  },\n\n  /**\n   * render HTML for a particular month\n   */\n  render: function (year, month, randId) {\n    var opts = this._o,\n      now = new Date(),\n      days = getDaysInMonth(year, month),\n      before = new Date(year, month, 1).getDay(),\n      data = [],\n      row = []\n    setToStartOfDay(now)\n    if (opts.firstDay > 0) {\n      before -= opts.firstDay\n      if (before < 0) {\n        before += 7\n      }\n    }\n    var previousMonth = month === 0 ? 11 : month - 1,\n      nextMonth = month === 11 ? 0 : month + 1,\n      yearOfPreviousMonth = month === 0 ? year - 1 : year,\n      yearOfNextMonth = month === 11 ? year + 1 : year,\n      daysInPreviousMonth = getDaysInMonth(yearOfPreviousMonth, previousMonth)\n    var cells = days + before,\n      after = cells\n    while (after > 7) {\n      after -= 7\n    }\n    cells += 7 - after\n    var isWeekSelected = false\n    for (var i = 0, r = 0; i < cells; i++) {\n      var day = new Date(year, month, 1 + (i - before)),\n        isSelected = isDate(this._d) ? compareDates(day, this._d) : false,\n        isToday = compareDates(day, now),\n        hasEvent =\n          opts.events.indexOf(day.toDateString()) !== -1 ? true : false,\n        isEmpty = i < before || i >= days + before,\n        dayNumber = 1 + (i - before),\n        monthNumber = month,\n        yearNumber = year,\n        isStartRange = opts.startRange && compareDates(opts.startRange, day),\n        isEndRange = opts.endRange && compareDates(opts.endRange, day),\n        isInRange =\n          opts.startRange &&\n          opts.endRange &&\n          opts.startRange < day &&\n          day < opts.endRange,\n        isDisabled =\n          (opts.minDate && day < opts.minDate) ||\n          (opts.maxDate && day > opts.maxDate) ||\n          (opts.disableWeekends && isWeekend(day)) ||\n          (opts.disableDayFn && opts.disableDayFn(day))\n\n      if (isEmpty) {\n        if (i < before) {\n          dayNumber = daysInPreviousMonth + dayNumber\n          monthNumber = previousMonth\n          yearNumber = yearOfPreviousMonth\n        } else {\n          dayNumber = dayNumber - days\n          monthNumber = nextMonth\n          yearNumber = yearOfNextMonth\n        }\n      }\n\n      var dayConfig = {\n        day: dayNumber,\n        month: monthNumber,\n        year: yearNumber,\n        hasEvent: hasEvent,\n        isSelected: isSelected,\n        isToday: isToday,\n        isDisabled: isDisabled,\n        isEmpty: isEmpty,\n        isStartRange: isStartRange,\n        isEndRange: isEndRange,\n        isInRange: isInRange,\n        showDaysInNextAndPreviousMonths: opts.showDaysInNextAndPreviousMonths,\n        enableSelectionDaysInNextAndPreviousMonths:\n          opts.enableSelectionDaysInNextAndPreviousMonths,\n      }\n\n      if (opts.pickWholeWeek && isSelected) {\n        isWeekSelected = true\n      }\n\n      row.push(renderDay(dayConfig))\n\n      if (++r === 7) {\n        if (opts.showWeekNumber) {\n          row.unshift(renderWeek(i - before, month, year))\n        }\n        data.push(\n          renderRow(row, opts.isRTL, opts.pickWholeWeek, isWeekSelected)\n        )\n        row = []\n        r = 0\n        isWeekSelected = false\n      }\n    }\n    return renderTable(opts, data, randId)\n  },\n\n  isVisible: function () {\n    return this._v\n  },\n\n  show: function () {\n    if (!this.isVisible()) {\n      this._v = true\n      this.draw()\n      removeClass(this.el, 'is-hidden')\n      if (this._o.bound) {\n        addEvent(document, 'click', this._onClick)\n        this.adjustPosition()\n      }\n      if (typeof this._o.onOpen === 'function') {\n        this._o.onOpen.call(this)\n      }\n    }\n  },\n\n  hide: function () {\n    var v = this._v\n    if (v !== false) {\n      if (this._o.bound) {\n        removeEvent(document, 'click', this._onClick)\n      }\n      this.el.style.position = 'static' // reset\n      this.el.style.left = 'auto'\n      this.el.style.top = 'auto'\n      addClass(this.el, 'is-hidden')\n      this._v = false\n      if (v !== undefined && typeof this._o.onClose === 'function') {\n        this._o.onClose.call(this)\n      }\n    }\n  },\n\n  /**\n   * GAME OVER\n   */\n  destroy: function () {\n    var opts = this._o\n\n    this.hide()\n    removeEvent(this.el, 'mousedown', this._onMouseDown, true)\n    removeEvent(this.el, 'touchend', this._onMouseDown, true)\n    removeEvent(this.el, 'change', this._onChange)\n    if (opts.keyboardInput) {\n      removeEvent(document, 'keydown', this._onKeyChange)\n    }\n    if (opts.field) {\n      removeEvent(opts.field, 'change', this._onInputChange)\n      if (opts.bound) {\n        removeEvent(opts.trigger, 'click', this._onInputClick)\n        removeEvent(opts.trigger, 'focus', this._onInputFocus)\n        removeEvent(opts.trigger, 'blur', this._onInputBlur)\n      }\n    }\n    if (this.el.parentNode) {\n      this.el.parentNode.removeChild(this.el)\n    }\n  },\n}\n\nexport default Pikaday\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;IAAA;IACA;IACA;IACA,GAAG,IAAI,CAAC,CAAC,OAAO,MAAM,EAAE,WAAW,EAAE,OAAO,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,gBAAS,CAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA,CAAA,MAAA,CAAA,UAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,WAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,WAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,OAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,CAAA,SAAA,CAAA,GAAA,EAAA,OAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,SAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,SAAA,CAAA,GAAA,EAAA,OAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,OAAA,OAAA,CAAA,IAAA,CAAA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,OAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,MAAA,EAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,GAAA,GAAA,CAAA,EAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,OAAA,EAAA,GAAA,CAAA,CAAA,OAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAAA,CAAA,C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AA,IAAA,CAAA,IAAA,CAAA,EAAA,CAAA,KAAA,GAAA,IAAA,CAAA,EAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,GAAA,OAAA,CAAA,EAAA,QAAA,GAAA,CAAA,CAAA,IAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,OAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,IAAA,IAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,KAAA,GAAA,IAAA,CAAA,EAAA,CAAA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAA,QAAA,EAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,OAAA,IAAA,CAAA,EAAA,CAAA,QAAA,EAAA,UAAA,EAAA,IAAA,CAAA,EAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,EAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,EAAA,CAAA,CAAA,QAAA,CAAA,SAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CA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AA,IAAA,IAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CAAA,CAAA,YAAA,EAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,UAAA,EAAA,CAAA,CAAA,CAAA,CAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,UAAA,EAAA,CAAA,CAAA,QAAA,EA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"}