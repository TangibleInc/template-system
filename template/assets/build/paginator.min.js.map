{"version":3,"sources":["../../node_modules/browser-pack/_prelude.js","index.js","../src/paginator/index.js","../src/paginator/range.js","../../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../../node_modules/@babel/runtime/helpers/typeof.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","_typeof2","_interopRequireDefault","_range","_window","window","$","jQuery","ajax","Tangible","activatePaginators","each","$target","targetId","data","targetData","state","template","hash","context","context_hash","additionalSettings","$subscribers","concat","setState","newState","Object","assign","render","$loading","$buttonsContainer","$fields","updateFields","keys","forEach","fieldName","text","$subscriber","this","actionName","find","$field","renderPaginationButtons","subscribeSettings","default","Array","isArray","console","warn","cachedPages","last_rendered_page","current_page","afterLoaded","scroll_top","targetTop","offset","top","scroll_animate","document","documentElement","body","scrollTop","duration","animate","html","loadingClass","currentPage","finishLoading","removeClass","hide","addClass","show","startLoading","page","then","result","catch","error","createPaginator","totalPages","total_pages","pageNumbers","generatePageRange","$existingButtons","children","num","index","$button","prop","attr","eq","replaceWith","append","on","parseInt","isNaN","defineProperty","value","getRange","start","end","fill","map","v","delta","range","Math","round","pages","min","withDots","pair","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype"],"mappings":"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","file":"paginator.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import { generatePageRange } from './range'\n\nconst {\n  jQuery: $,\n  Tangible: {\n    ajax\n  }\n} = window\n\nfunction activatePaginators() {\n\n  $('.tangible-paginator-target').each(function() {\n    createPaginator($(this))\n  })\n}\n\n$(activatePaginators)\n\n// Export for dynamically loaded content\nwindow.Tangible.activatePaginators = activatePaginators\n// window.Tangible.activatePaginator = activatePaginator__deprecated\n\n\n/**\n * Create paginator\n */\n\nfunction createPaginator($target) {\n\n  const targetId = $target.data('tangiblePaginatorTargetId')\n  const targetData = $target.data('tangiblePaginatorTargetData') || {}\n\n  // console.log('Create paginator', targetId, targetData)\n\n  // @see /tags/loop/paginate/loop.php\n  const {\n    state,\n    template,\n    hash,\n    context,\n    context_hash\n  } = targetData\n\n  if (!state || !template) return\n\n  const additionalSettings = {}\n\n  // Subscribers are updated on paginator state change\n  const $subscribers = $(`.tangible-paginator-subscribe--${targetId}`)\n\n  function setState(newState) {\n    Object.assign(state, newState)\n    render(state)\n  }\n\n  const $fields = {}\n  let $loading\n  let $buttonsContainer\n\n  $subscribers.each(function() {\n\n    const $subscriber = $(this)\n    const actionName = $subscriber.data('tangiblePaginatorSubscribeAction')\n\n    switch (actionName) {\n    case 'fields':\n\n      $subscriber.find('[data-tangible-paginator-field]').each(function() {\n        const $field = $(this)\n        const fieldName = $field.data('tangiblePaginatorField')\n\n        $fields[ fieldName ] = $field\n      })\n\n      // console.log('Fields subscribed', Object.keys($fields))\n\n      break\n    case 'loading':\n      $loading = $subscriber\n      break\n    case 'buttons':\n\n      $buttonsContainer = $subscriber\n      renderPaginationButtons($buttonsContainer, state, setState)\n\n      /**\n       * Pass additional settings, such as scroll_top\n       * @see /tags/loop/paginate/buttons.php\n       */\n\n      const subscribeSettings = $subscriber.data('tangiblePaginatorSubscribeSettings')\n      if (typeof subscribeSettings==='object' && !Array.isArray(subscribeSettings)) {\n        Object.assign(additionalSettings, subscribeSettings)\n      }\n      break\n    default:\n      console.warn('Unknown subscriber action', actionName)\n      break\n    }\n  })\n\n  function updateFields(state) {\n    Object.keys( $fields ).forEach(function(fieldName) {\n      $fields[ fieldName ].text( state[ fieldName ] )\n    })\n  }\n\n  const cachedPages = {} // pageNumber: content\n\n  // Keep track of last rendered page\n  state.last_rendered_page = state.current_page\n\n  // Page rendered on server-side\n  cachedPages[ state.current_page ] = $target.html()\n\n\n  function render(state) {\n\n    updateFields(state)\n\n    if ($buttonsContainer) {\n      renderPaginationButtons($buttonsContainer, state)\n    }\n\n    // Fetch page via AJAX\n\n    // Same page?\n    if (state.last_rendered_page === state.current_page) return\n    state.last_rendered_page = state.current_page\n\n    const afterLoaded = function() {\n      // Scroll to top\n      if (additionalSettings.scroll_top) {\n\n        const targetTop = $target.offset().top\n\n        if ( ! additionalSettings.scroll_animate ) {\n          // Jump with no animation\n          $([document.documentElement, document.body]).scrollTop(targetTop)\n          return\n        }\n\n        const duration = typeof additionalSettings.scroll_animate==='number'\n          ? additionalSettings.scroll_animate\n          : 300\n\n        $([document.documentElement, document.body]).animate({\n          scrollTop: targetTop\n        }, duration)\n      }\n    }\n\n    // Cached\n    if (typeof cachedPages[ state.current_page ]!=='undefined') {\n      $target.html( cachedPages[ state.current_page ] )\n      afterLoaded()\n      return\n    }\n\n    const loadingClass = 'tangible-paginator-target-loading'\n    const currentPage = state.current_page\n\n    const startLoading = function() {\n\n      $target.addClass( loadingClass )\n\n      // TODO: Option to fade in/out loading indicator\n\n      if ($loading) $loading.show()\n    }\n\n    const finishLoading = function() {\n\n      $target.removeClass( loadingClass )\n\n      if ($loading) $loading.hide()\n\n      afterLoaded()\n    }\n\n    startLoading()\n\n    // Prevent repeated requests to same page\n    cachedPages[ currentPage ] = ''\n\n    // @see /ajax/index.php\n    ajax('tangible_template_render', {\n      template,\n      page: currentPage,\n      hash,\n      context,\n      context_hash\n    })\n      .then(result => {\n\n        // console.log('Fetch page result', result)\n\n        cachedPages[ currentPage ] = result\n        $target.html( result )\n        finishLoading()\n      })\n      .catch(error => {\n\n        console.error('Fetch page error', error)\n\n        delete cachedPages[ currentPage ]\n\n        finishLoading()\n      })\n  }\n}\n\nfunction renderPaginationButtons($buttonsContainer, state, setState) {\n\n  const {\n    current_page: currentPage,\n    total_pages: totalPages,\n  } = state\n\n  const pageNumbers = generatePageRange(currentPage, totalPages)\n\n  // Add new buttons, or replace existing ones\n\n  const $existingButtons = $buttonsContainer.children()\n\n  pageNumbers.forEach(function(num, index) {\n\n    const $button = $('<button />')\n\n    $button.text(num)\n    $button.addClass('tangible-paginator-button')\n\n    if (num==='...') {\n      $button.prop('disabled', true)\n    } else {\n\n      $button.attr('data-tangible-paginator-action', 'page')\n      $button.attr('data-tangible-paginator-page', num)\n\n      if (num == currentPage) {\n        $button.addClass('active')\n      }\n    }\n\n    if ($existingButtons.eq(index).length) {\n      $existingButtons.eq(index).replaceWith($button)\n      return\n    }\n\n    $buttonsContainer.append($button)\n  })\n\n  if (!setState) return\n\n  // First-time render: Bind event handler\n\n  $buttonsContainer.on('click', '[data-tangible-paginator-action]', function() {\n\n    const $button = $(this)\n    const actionName = $button.data('tangiblePaginatorAction')\n\n    switch (actionName) {\n    case 'page': {\n\n      const page = parseInt($button.data('tangiblePaginatorPage'), 10)\n\n      if (isNaN(page) || page <= 0 || page > state.total_pages) return\n\n      state.current_page = page\n      break\n    }\n    case 'first_page':\n      state.current_page = 1\n      break\n    case 'last_page':\n      state.current_page = state.total_pages\n      break\n    case 'next_page':\n      if (state.current_page === state.total_pages) return\n      state.current_page++\n      break\n    case 'previous_page':\n      if (state.current_page === 1) return\n      state.current_page--\n      break\n    default: return\n    }\n\n    setState(state)\n  })\n\n  return $buttonsContainer\n}\n","import { generatePageRange } from './range'\n\nconst {\n  jQuery: $,\n  Tangible: {\n    ajax\n  }\n} = window\n\nfunction activatePaginators() {\n\n  $('.tangible-paginator-target').each(function() {\n    createPaginator($(this))\n  })\n}\n\n$(activatePaginators)\n\n// Export for dynamically loaded content\nwindow.Tangible.activatePaginators = activatePaginators\n// window.Tangible.activatePaginator = activatePaginator__deprecated\n\n\n/**\n * Create paginator\n */\n\nfunction createPaginator($target) {\n\n  const targetId = $target.data('tangiblePaginatorTargetId')\n  const targetData = $target.data('tangiblePaginatorTargetData') || {}\n\n  // console.log('Create paginator', targetId, targetData)\n\n  // @see /tags/loop/paginate/loop.php\n  const {\n    state,\n    template,\n    hash,\n    context,\n    context_hash\n  } = targetData\n\n  if (!state || !template) return\n\n  const additionalSettings = {}\n\n  // Subscribers are updated on paginator state change\n  const $subscribers = $(`.tangible-paginator-subscribe--${targetId}`)\n\n  function setState(newState) {\n    Object.assign(state, newState)\n    render(state)\n  }\n\n  const $fields = {}\n  let $loading\n  let $buttonsContainer\n\n  $subscribers.each(function() {\n\n    const $subscriber = $(this)\n    const actionName = $subscriber.data('tangiblePaginatorSubscribeAction')\n\n    switch (actionName) {\n    case 'fields':\n\n      $subscriber.find('[data-tangible-paginator-field]').each(function() {\n        const $field = $(this)\n        const fieldName = $field.data('tangiblePaginatorField')\n\n        $fields[ fieldName ] = $field\n      })\n\n      // console.log('Fields subscribed', Object.keys($fields))\n\n      break\n    case 'loading':\n      $loading = $subscriber\n      break\n    case 'buttons':\n\n      $buttonsContainer = $subscriber\n      renderPaginationButtons($buttonsContainer, state, setState)\n\n      /**\n       * Pass additional settings, such as scroll_top\n       * @see /tags/loop/paginate/buttons.php\n       */\n\n      const subscribeSettings = $subscriber.data('tangiblePaginatorSubscribeSettings')\n      if (typeof subscribeSettings==='object' && !Array.isArray(subscribeSettings)) {\n        Object.assign(additionalSettings, subscribeSettings)\n      }\n      break\n    default:\n      console.warn('Unknown subscriber action', actionName)\n      break\n    }\n  })\n\n  function updateFields(state) {\n    Object.keys( $fields ).forEach(function(fieldName) {\n      $fields[ fieldName ].text( state[ fieldName ] )\n    })\n  }\n\n  const cachedPages = {} // pageNumber: content\n\n  // Keep track of last rendered page\n  state.last_rendered_page = state.current_page\n\n  // Page rendered on server-side\n  cachedPages[ state.current_page ] = $target.html()\n\n\n  function render(state) {\n\n    updateFields(state)\n\n    if ($buttonsContainer) {\n      renderPaginationButtons($buttonsContainer, state)\n    }\n\n    // Fetch page via AJAX\n\n    // Same page?\n    if (state.last_rendered_page === state.current_page) return\n    state.last_rendered_page = state.current_page\n\n    const afterLoaded = function() {\n      // Scroll to top\n      if (additionalSettings.scroll_top) {\n\n        const targetTop = $target.offset().top\n\n        if ( ! additionalSettings.scroll_animate ) {\n          // Jump with no animation\n          $([document.documentElement, document.body]).scrollTop(targetTop)\n          return\n        }\n\n        const duration = typeof additionalSettings.scroll_animate==='number'\n          ? additionalSettings.scroll_animate\n          : 300\n\n        $([document.documentElement, document.body]).animate({\n          scrollTop: targetTop\n        }, duration)\n      }\n    }\n\n    // Cached\n    if (typeof cachedPages[ state.current_page ]!=='undefined') {\n      $target.html( cachedPages[ state.current_page ] )\n      afterLoaded()\n      return\n    }\n\n    const loadingClass = 'tangible-paginator-target-loading'\n    const currentPage = state.current_page\n\n    const startLoading = function() {\n\n      $target.addClass( loadingClass )\n\n      // TODO: Option to fade in/out loading indicator\n\n      if ($loading) $loading.show()\n    }\n\n    const finishLoading = function() {\n\n      $target.removeClass( loadingClass )\n\n      if ($loading) $loading.hide()\n\n      afterLoaded()\n    }\n\n    startLoading()\n\n    // Prevent repeated requests to same page\n    cachedPages[ currentPage ] = ''\n\n    // @see /ajax/index.php\n    ajax('tangible_template_render', {\n      template,\n      page: currentPage,\n      hash,\n      context,\n      context_hash\n    })\n      .then(result => {\n\n        // console.log('Fetch page result', result)\n\n        cachedPages[ currentPage ] = result\n        $target.html( result )\n        finishLoading()\n      })\n      .catch(error => {\n\n        console.error('Fetch page error', error)\n\n        delete cachedPages[ currentPage ]\n\n        finishLoading()\n      })\n  }\n}\n\nfunction renderPaginationButtons($buttonsContainer, state, setState) {\n\n  const {\n    current_page: currentPage,\n    total_pages: totalPages,\n  } = state\n\n  const pageNumbers = generatePageRange(currentPage, totalPages)\n\n  // Add new buttons, or replace existing ones\n\n  const $existingButtons = $buttonsContainer.children()\n\n  pageNumbers.forEach(function(num, index) {\n\n    const $button = $('<button />')\n\n    $button.text(num)\n    $button.addClass('tangible-paginator-button')\n\n    if (num==='...') {\n      $button.prop('disabled', true)\n    } else {\n\n      $button.attr('data-tangible-paginator-action', 'page')\n      $button.attr('data-tangible-paginator-page', num)\n\n      if (num == currentPage) {\n        $button.addClass('active')\n      }\n    }\n\n    if ($existingButtons.eq(index).length) {\n      $existingButtons.eq(index).replaceWith($button)\n      return\n    }\n\n    $buttonsContainer.append($button)\n  })\n\n  if (!setState) return\n\n  // First-time render: Bind event handler\n\n  $buttonsContainer.on('click', '[data-tangible-paginator-action]', function() {\n\n    const $button = $(this)\n    const actionName = $button.data('tangiblePaginatorAction')\n\n    switch (actionName) {\n    case 'page': {\n\n      const page = parseInt($button.data('tangiblePaginatorPage'), 10)\n\n      if (isNaN(page) || page <= 0 || page > state.total_pages) return\n\n      state.current_page = page\n      break\n    }\n    case 'first_page':\n      state.current_page = 1\n      break\n    case 'last_page':\n      state.current_page = state.total_pages\n      break\n    case 'next_page':\n      if (state.current_page === state.total_pages) return\n      state.current_page++\n      break\n    case 'previous_page':\n      if (state.current_page === 1) return\n      state.current_page--\n      break\n    default: return\n    }\n\n    setState(state)\n  })\n\n  return $buttonsContainer\n}\n","/**\n * Pagination algorithm\n *\n * Based on ideas from: https://gist.github.com/kottenator/9d936eb3e4e3c3e02598\n */\n\nconst getRange = (start, end) => {\n  return Array(end - start + 1)\n    .fill()\n    .map((v, i) => i + start)\n}\n\nexport const generatePageRange = (currentPage, totalPages) => {\n\n  let delta\n\n  if (totalPages <= 7) {\n    // delta === 7: [1 2 3 4 5 6 7]\n    delta = 7\n  } else {\n    // delta === 2: [1 ... 4 5 6 ... 10]\n    // delta === 4: [1 2 3 4 5 ... 10]\n    delta = currentPage > 4 && currentPage < totalPages - 3 ? 2 : 4\n  }\n\n  const range = {\n    start: Math.round(currentPage - delta / 2),\n    end: Math.round(currentPage + delta / 2)\n  }\n\n  if (range.start - 1 === 1 || range.end + 1 === totalPages) {\n    range.start += 1\n    range.end += 1\n  }\n\n  let pages =\n    currentPage > delta\n      ? getRange(Math.min(range.start, totalPages - delta), Math.min(range.end, totalPages))\n      : getRange(1, Math.min(totalPages, delta + 1))\n\n  const dots = '...' // '&hellip;' or '…'\n  const withDots = (value, pair) => (pages.length + 1 !== totalPages ? pair : [value])\n\n  if (pages[0] !== 1) {\n    pages = withDots(1, [1, dots]).concat(pages)\n  }\n\n  if (pages[pages.length - 1] < totalPages) {\n    pages = pages.concat(withDots(totalPages, [dots, totalPages]))\n  }\n\n  return pages\n}\n\n// Quick test\n// for (let i = 1, l = 10; i <= l; i++)\n//   console.log(`Selected page ${i}:`, generatePageRange(i, l));\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;"]}